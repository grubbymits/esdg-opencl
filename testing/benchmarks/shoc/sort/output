

OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1132
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1489024
HALT operation received from [0][1][0] at cycle 1550114
Simulation finished, cycleCount = 1550115
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1489025
Stalls = 936727
NOPs = 0
IdleCycles = 0
DecodeStalls = 49294
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 12944
Creating Stats:
TotalCycles = 1550115
Stalls = 938047
NOPs = 0
IdleCycles = 0
DecodeStalls = 50614
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 42829
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2652
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4197154
HALT operation received from [0][1][0] at cycle 4418418
Simulation finished, cycleCount = 4418419
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4197155
Stalls = 1316801
NOPs = 0
IdleCycles = 0
DecodeStalls = 362204
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 356748
Creating Stats:
TotalCycles = 4418419
Stalls = 1330111
NOPs = 0
IdleCycles = 0
DecodeStalls = 375514
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 460725
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1596227
HALT operation received from [0][1][0] at cycle 1638561
Simulation finished, cycleCount = 1638562
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1596228
Stalls = 1052104
NOPs = 0
IdleCycles = 0
DecodeStalls = 164671
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 8857
Creating Stats:
TotalCycles = 1638562
Stalls = 1054374
NOPs = 0
IdleCycles = 0
DecodeStalls = 166941
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 28889
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4521159
HALT operation received from [0][1][0] at cycle 4781424
Simulation finished, cycleCount = 4781425
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4521160
Stalls = 2071894
NOPs = 0
IdleCycles = 0
DecodeStalls = 1117297
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 141202
Creating Stats:
TotalCycles = 4781425
Stalls = 1995821
NOPs = 0
IdleCycles = 0
DecodeStalls = 1041224
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 309371
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1596227
HALT operation received from [0][1][0] at cycle 1638561
Simulation finished, cycleCount = 1638562
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1596228
Stalls = 1052104
NOPs = 0
IdleCycles = 0
DecodeStalls = 164671
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 8857
Creating Stats:
TotalCycles = 1638562
Stalls = 1054374
NOPs = 0
IdleCycles = 0
DecodeStalls = 166941
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 28889
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4521159
HALT operation received from [0][1][0] at cycle 4781424
Simulation finished, cycleCount = 4781425
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4521160
Stalls = 2071894
NOPs = 0
IdleCycles = 0
DecodeStalls = 1117297
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 141202
Creating Stats:
TotalCycles = 4781425
Stalls = 1995821
NOPs = 0
IdleCycles = 0
DecodeStalls = 1041224
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 309371
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1596227
HALT operation received from [0][1][0] at cycle 1638561
Simulation finished, cycleCount = 1638562
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1596228
Stalls = 1052104
NOPs = 0
IdleCycles = 0
DecodeStalls = 164671
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 8857
Creating Stats:
TotalCycles = 1638562
Stalls = 1054374
NOPs = 0
IdleCycles = 0
DecodeStalls = 166941
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 28889
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4521159
HALT operation received from [0][1][0] at cycle 4781424
Simulation finished, cycleCount = 4781425
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4521160
Stalls = 2071894
NOPs = 0
IdleCycles = 0
DecodeStalls = 1117297
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 141202
Creating Stats:
TotalCycles = 4781425
Stalls = 1995821
NOPs = 0
IdleCycles = 0
DecodeStalls = 1041224
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 309371
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1596227
HALT operation received from [0][1][0] at cycle 1638561
Simulation finished, cycleCount = 1638562
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1596228
Stalls = 1052104
NOPs = 0
IdleCycles = 0
DecodeStalls = 164671
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 8857
Creating Stats:
TotalCycles = 1638562
Stalls = 1054374
NOPs = 0
IdleCycles = 0
DecodeStalls = 166941
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 28889
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4521159
HALT operation received from [0][1][0] at cycle 4781424
Simulation finished, cycleCount = 4781425
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4521160
Stalls = 2071894
NOPs = 0
IdleCycles = 0
DecodeStalls = 1117297
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 141202
Creating Stats:
TotalCycles = 4781425
Stalls = 1995821
NOPs = 0
IdleCycles = 0
DecodeStalls = 1041224
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 309371
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1596227
HALT operation received from [0][1][0] at cycle 1638561
Simulation finished, cycleCount = 1638562
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1596228
Stalls = 1052104
NOPs = 0
IdleCycles = 0
DecodeStalls = 164671
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 8857
Creating Stats:
TotalCycles = 1638562
Stalls = 1054374
NOPs = 0
IdleCycles = 0
DecodeStalls = 166941
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 28889
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4521159
HALT operation received from [0][1][0] at cycle 4781424
Simulation finished, cycleCount = 4781425
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4521160
Stalls = 2071894
NOPs = 0
IdleCycles = 0
DecodeStalls = 1117297
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 141202
Creating Stats:
TotalCycles = 4781425
Stalls = 1995821
NOPs = 0
IdleCycles = 0
DecodeStalls = 1041224
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 309371
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1596227
HALT operation received from [0][1][0] at cycle 1638561
Simulation finished, cycleCount = 1638562
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1596228
Stalls = 1052104
NOPs = 0
IdleCycles = 0
DecodeStalls = 164671
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 8857
Creating Stats:
TotalCycles = 1638562
Stalls = 1054374
NOPs = 0
IdleCycles = 0
DecodeStalls = 166941
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 28889
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4521159
HALT operation received from [0][1][0] at cycle 4781424
Simulation finished, cycleCount = 4781425
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4521160
Stalls = 2071894
NOPs = 0
IdleCycles = 0
DecodeStalls = 1117297
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 141202
Creating Stats:
TotalCycles = 4781425
Stalls = 1995821
NOPs = 0
IdleCycles = 0
DecodeStalls = 1041224
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 309371
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1596227
HALT operation received from [0][1][0] at cycle 1638561
Simulation finished, cycleCount = 1638562
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1596228
Stalls = 1052104
NOPs = 0
IdleCycles = 0
DecodeStalls = 164671
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 8857
Creating Stats:
TotalCycles = 1638562
Stalls = 1054374
NOPs = 0
IdleCycles = 0
DecodeStalls = 166941
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 28889
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][0][0] at cycle 974056
Simulation finished, cycleCount = 974057
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974057
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4521159
HALT operation received from [0][1][0] at cycle 4781424
Simulation finished, cycleCount = 4781425
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4521160
Stalls = 2071894
NOPs = 0
IdleCycles = 0
DecodeStalls = 1117297
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 141202
Creating Stats:
TotalCycles = 4781425
Stalls = 1995821
NOPs = 0
IdleCycles = 0
DecodeStalls = 1041224
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 309371
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1132
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1469541
HALT operation received from [0][1][0] at cycle 1512829
Simulation finished, cycleCount = 1512830
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1469542
Stalls = 938684
NOPs = 0
IdleCycles = 0
DecodeStalls = 51251
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2224
Creating Stats:
TotalCycles = 1512830
Stalls = 938440
NOPs = 0
IdleCycles = 0
DecodeStalls = 51007
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 23990
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2652
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 3955103
HALT operation received from [0][1][0] at cycle 4176293
Simulation finished, cycleCount = 4176294
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 3955104
Stalls = 1388208
NOPs = 0
IdleCycles = 0
DecodeStalls = 433611
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 200019
Creating Stats:
TotalCycles = 4176294
Stalls = 1404980
NOPs = 0
IdleCycles = 0
DecodeStalls = 450383
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 302228
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1586919
HALT operation received from [0][1][0] at cycle 1615366
Simulation finished, cycleCount = 1615367
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1586920
Stalls = 1055238
NOPs = 0
IdleCycles = 0
DecodeStalls = 167805
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2636
Creating Stats:
TotalCycles = 1615367
Stalls = 1054503
NOPs = 0
IdleCycles = 0
DecodeStalls = 167070
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 17227
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4370979
HALT operation received from [0][1][0] at cycle 4501394
Simulation finished, cycleCount = 4501395
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4370980
Stalls = 2074998
NOPs = 0
IdleCycles = 0
DecodeStalls = 1120401
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 64560
Creating Stats:
TotalCycles = 4501395
Stalls = 2042563
NOPs = 0
IdleCycles = 0
DecodeStalls = 1087966
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 145985
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1586919
HALT operation received from [0][1][0] at cycle 1615366
Simulation finished, cycleCount = 1615367
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1586920
Stalls = 1055238
NOPs = 0
IdleCycles = 0
DecodeStalls = 167805
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2636
Creating Stats:
TotalCycles = 1615367
Stalls = 1054503
NOPs = 0
IdleCycles = 0
DecodeStalls = 167070
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 17227
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4370979
HALT operation received from [0][1][0] at cycle 4501394
Simulation finished, cycleCount = 4501395
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4370980
Stalls = 2074998
NOPs = 0
IdleCycles = 0
DecodeStalls = 1120401
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 64560
Creating Stats:
TotalCycles = 4501395
Stalls = 2042563
NOPs = 0
IdleCycles = 0
DecodeStalls = 1087966
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 145985
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1586919
HALT operation received from [0][1][0] at cycle 1615366
Simulation finished, cycleCount = 1615367
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1586920
Stalls = 1055238
NOPs = 0
IdleCycles = 0
DecodeStalls = 167805
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2636
Creating Stats:
TotalCycles = 1615367
Stalls = 1054503
NOPs = 0
IdleCycles = 0
DecodeStalls = 167070
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 17227
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4370979
HALT operation received from [0][1][0] at cycle 4501394
Simulation finished, cycleCount = 4501395
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4370980
Stalls = 2074998
NOPs = 0
IdleCycles = 0
DecodeStalls = 1120401
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 64560
Creating Stats:
TotalCycles = 4501395
Stalls = 2042563
NOPs = 0
IdleCycles = 0
DecodeStalls = 1087966
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 145985
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1586919
HALT operation received from [0][1][0] at cycle 1615366
Simulation finished, cycleCount = 1615367
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1586920
Stalls = 1055238
NOPs = 0
IdleCycles = 0
DecodeStalls = 167805
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2636
Creating Stats:
TotalCycles = 1615367
Stalls = 1054503
NOPs = 0
IdleCycles = 0
DecodeStalls = 167070
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 17227
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4370979
HALT operation received from [0][1][0] at cycle 4501394
Simulation finished, cycleCount = 4501395
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4370980
Stalls = 2074998
NOPs = 0
IdleCycles = 0
DecodeStalls = 1120401
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 64560
Creating Stats:
TotalCycles = 4501395
Stalls = 2042563
NOPs = 0
IdleCycles = 0
DecodeStalls = 1087966
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 145985
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1586919
HALT operation received from [0][1][0] at cycle 1615366
Simulation finished, cycleCount = 1615367
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1586920
Stalls = 1055238
NOPs = 0
IdleCycles = 0
DecodeStalls = 167805
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2636
Creating Stats:
TotalCycles = 1615367
Stalls = 1054503
NOPs = 0
IdleCycles = 0
DecodeStalls = 167070
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 17227
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4370979
HALT operation received from [0][1][0] at cycle 4501394
Simulation finished, cycleCount = 4501395
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4370980
Stalls = 2074998
NOPs = 0
IdleCycles = 0
DecodeStalls = 1120401
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 64560
Creating Stats:
TotalCycles = 4501395
Stalls = 2042563
NOPs = 0
IdleCycles = 0
DecodeStalls = 1087966
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 145985
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1586919
HALT operation received from [0][1][0] at cycle 1615366
Simulation finished, cycleCount = 1615367
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1586920
Stalls = 1055238
NOPs = 0
IdleCycles = 0
DecodeStalls = 167805
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2636
Creating Stats:
TotalCycles = 1615367
Stalls = 1054503
NOPs = 0
IdleCycles = 0
DecodeStalls = 167070
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 17227
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4370979
HALT operation received from [0][1][0] at cycle 4501394
Simulation finished, cycleCount = 4501395
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4370980
Stalls = 2074998
NOPs = 0
IdleCycles = 0
DecodeStalls = 1120401
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 64560
Creating Stats:
TotalCycles = 4501395
Stalls = 2042563
NOPs = 0
IdleCycles = 0
DecodeStalls = 1087966
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 145985
RUN REDUCE
Device: 2 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 2048
mem align: 0
dram_base_offset: 0
Size of data area : 10816
Size of bss area : 
End of memory: 86528
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 10816
HALT operation received from [0][0][0] at cycle 1586919
HALT operation received from [0][1][0] at cycle 1615366
Simulation finished, cycleCount = 1615367
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1586920
Stalls = 1055238
NOPs = 0
IdleCycles = 0
DecodeStalls = 167805
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 2636
Creating Stats:
TotalCycles = 1615367
Stalls = 1054503
NOPs = 0
IdleCycles = 0
DecodeStalls = 167070
BranchesTaken = 295803
BranchesNotTaken = 19146
ControlFlowChange = 295811
MemoryAccessCount = 17227
RUN TOP_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 4672
Size of bss area : 
End of memory: 37376
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 4672
HALT operation received from [0][1][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
RUN BOTTOM_SCAN
Device: 2 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 2;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 21056
Size of bss area : 
End of memory: 168448
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  2C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 21056
HALT operation received from [0][0][0] at cycle 4370979
HALT operation received from [0][1][0] at cycle 4501394
Simulation finished, cycleCount = 4501395
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 4370980
Stalls = 2074998
NOPs = 0
IdleCycles = 0
DecodeStalls = 1120401
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 64560
Creating Stats:
TotalCycles = 4501395
Stalls = 2042563
NOPs = 0
IdleCycles = 0
DecodeStalls = 1087966
BranchesTaken = 318191
BranchesNotTaken = 2906
ControlFlowChange = 318199
MemoryAccessCount = 145985
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1132
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 809753
HALT operation received from [0][1][0] at cycle 816891
HALT operation received from [0][2][0] at cycle 836238
HALT operation received from [0][3][0] at cycle 859524
Simulation finished, cycleCount = 859525
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 809754
Stalls = 464781
NOPs = 0
IdleCycles = 0
DecodeStalls = 21066
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 45062
Creating Stats:
TotalCycles = 816892
Stalls = 466533
NOPs = 0
IdleCycles = 0
DecodeStalls = 22818
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 48416
Creating Stats:
TotalCycles = 836239
Stalls = 465789
NOPs = 0
IdleCycles = 0
DecodeStalls = 22074
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 59063
Creating Stats:
TotalCycles = 859525
Stalls = 464211
NOPs = 0
IdleCycles = 0
DecodeStalls = 20496
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 73277
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 31
HALT operation received from [0][2][0] at cycle 37
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974069
Simulation finished, cycleCount = 974070
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974070
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 38
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 16
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 17
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2652
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2864570
HALT operation received from [0][1][0] at cycle 2931575
HALT operation received from [0][2][0] at cycle 3002143
HALT operation received from [0][3][0] at cycle 3053003
Simulation finished, cycleCount = 3053004
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2864571
Stalls = 648415
NOPs = 0
IdleCycles = 0
DecodeStalls = 171118
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 652898
Creating Stats:
TotalCycles = 2931576
Stalls = 656798
NOPs = 0
IdleCycles = 0
DecodeStalls = 179501
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 702537
Creating Stats:
TotalCycles = 3002144
Stalls = 656768
NOPs = 0
IdleCycles = 0
DecodeStalls = 179471
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 754382
Creating Stats:
TotalCycles = 3053004
Stalls = 646471
NOPs = 0
IdleCycles = 0
DecodeStalls = 169174
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 788735
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 844360
HALT operation received from [0][1][0] at cycle 864742
HALT operation received from [0][2][0] at cycle 877024
HALT operation received from [0][3][0] at cycle 889549
Simulation finished, cycleCount = 889550
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 844361
Stalls = 523756
NOPs = 0
IdleCycles = 0
DecodeStalls = 80041
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 31639
Creating Stats:
TotalCycles = 864743
Stalls = 524791
NOPs = 0
IdleCycles = 0
DecodeStalls = 81076
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 42293
Creating Stats:
TotalCycles = 877025
Stalls = 523244
NOPs = 0
IdleCycles = 0
DecodeStalls = 79529
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 49743
Creating Stats:
TotalCycles = 889550
Stalls = 522238
NOPs = 0
IdleCycles = 0
DecodeStalls = 78523
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 56902
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 31
HALT operation received from [0][2][0] at cycle 37
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974069
Simulation finished, cycleCount = 974070
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974070
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 38
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 16
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 17
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2972549
HALT operation received from [0][1][0] at cycle 3001620
HALT operation received from [0][2][0] at cycle 3100764
HALT operation received from [0][3][0] at cycle 3166000
Simulation finished, cycleCount = 3166001
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2972550
Stalls = 920752
NOPs = 0
IdleCycles = 0
DecodeStalls = 443455
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 541919
Creating Stats:
TotalCycles = 3001621
Stalls = 900907
NOPs = 0
IdleCycles = 0
DecodeStalls = 423610
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 583612
Creating Stats:
TotalCycles = 3100765
Stalls = 892675
NOPs = 0
IdleCycles = 0
DecodeStalls = 415378
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 657042
Creating Stats:
TotalCycles = 3166001
Stalls = 889048
NOPs = 0
IdleCycles = 0
DecodeStalls = 411751
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 692697
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][2][0] at cycle 895054
HALT operation received from [0][3][0] at cycle 896535
HALT operation received from [0][0][0] at cycle 896536
HALT operation received from [0][1][0] at cycle 896540
Simulation finished, cycleCount = 896541
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 896537
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65316
Creating Stats:
TotalCycles = 896541
Stalls = 518470
NOPs = 0
IdleCycles = 0
DecodeStalls = 74755
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 68808
Creating Stats:
TotalCycles = 895055
Stalls = 522015
NOPs = 0
IdleCycles = 0
DecodeStalls = 78300
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 66025
Creating Stats:
TotalCycles = 896536
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65317
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 27
HALT operation received from [0][2][0] at cycle 35
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974068
Simulation finished, cycleCount = 974069
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974069
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 15
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2972549
HALT operation received from [0][1][0] at cycle 3001620
HALT operation received from [0][2][0] at cycle 3100764
HALT operation received from [0][3][0] at cycle 3166000
Simulation finished, cycleCount = 3166001
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2972550
Stalls = 920752
NOPs = 0
IdleCycles = 0
DecodeStalls = 443455
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 541919
Creating Stats:
TotalCycles = 3001621
Stalls = 900907
NOPs = 0
IdleCycles = 0
DecodeStalls = 423610
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 583612
Creating Stats:
TotalCycles = 3100765
Stalls = 892675
NOPs = 0
IdleCycles = 0
DecodeStalls = 415378
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 657042
Creating Stats:
TotalCycles = 3166001
Stalls = 889048
NOPs = 0
IdleCycles = 0
DecodeStalls = 411751
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 692697
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][2][0] at cycle 895054
HALT operation received from [0][3][0] at cycle 896535
HALT operation received from [0][0][0] at cycle 896536
HALT operation received from [0][1][0] at cycle 896540
Simulation finished, cycleCount = 896541
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 896537
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65316
Creating Stats:
TotalCycles = 896541
Stalls = 518470
NOPs = 0
IdleCycles = 0
DecodeStalls = 74755
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 68808
Creating Stats:
TotalCycles = 895055
Stalls = 522015
NOPs = 0
IdleCycles = 0
DecodeStalls = 78300
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 66025
Creating Stats:
TotalCycles = 896536
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65317
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 27
HALT operation received from [0][2][0] at cycle 35
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974068
Simulation finished, cycleCount = 974069
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974069
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 15
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2972549
HALT operation received from [0][1][0] at cycle 3001620
HALT operation received from [0][2][0] at cycle 3100764
HALT operation received from [0][3][0] at cycle 3166000
Simulation finished, cycleCount = 3166001
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2972550
Stalls = 920752
NOPs = 0
IdleCycles = 0
DecodeStalls = 443455
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 541919
Creating Stats:
TotalCycles = 3001621
Stalls = 900907
NOPs = 0
IdleCycles = 0
DecodeStalls = 423610
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 583612
Creating Stats:
TotalCycles = 3100765
Stalls = 892675
NOPs = 0
IdleCycles = 0
DecodeStalls = 415378
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 657042
Creating Stats:
TotalCycles = 3166001
Stalls = 889048
NOPs = 0
IdleCycles = 0
DecodeStalls = 411751
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 692697
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][2][0] at cycle 895054
HALT operation received from [0][3][0] at cycle 896535
HALT operation received from [0][0][0] at cycle 896536
HALT operation received from [0][1][0] at cycle 896540
Simulation finished, cycleCount = 896541
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 896537
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65316
Creating Stats:
TotalCycles = 896541
Stalls = 518470
NOPs = 0
IdleCycles = 0
DecodeStalls = 74755
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 68808
Creating Stats:
TotalCycles = 895055
Stalls = 522015
NOPs = 0
IdleCycles = 0
DecodeStalls = 78300
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 66025
Creating Stats:
TotalCycles = 896536
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65317
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 27
HALT operation received from [0][2][0] at cycle 35
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974068
Simulation finished, cycleCount = 974069
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974069
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 15
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2972549
HALT operation received from [0][1][0] at cycle 3001620
HALT operation received from [0][2][0] at cycle 3100764
HALT operation received from [0][3][0] at cycle 3166000
Simulation finished, cycleCount = 3166001
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2972550
Stalls = 920752
NOPs = 0
IdleCycles = 0
DecodeStalls = 443455
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 541919
Creating Stats:
TotalCycles = 3001621
Stalls = 900907
NOPs = 0
IdleCycles = 0
DecodeStalls = 423610
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 583612
Creating Stats:
TotalCycles = 3100765
Stalls = 892675
NOPs = 0
IdleCycles = 0
DecodeStalls = 415378
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 657042
Creating Stats:
TotalCycles = 3166001
Stalls = 889048
NOPs = 0
IdleCycles = 0
DecodeStalls = 411751
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 692697
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][2][0] at cycle 895054
HALT operation received from [0][3][0] at cycle 896535
HALT operation received from [0][0][0] at cycle 896536
HALT operation received from [0][1][0] at cycle 896540
Simulation finished, cycleCount = 896541
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 896537
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65316
Creating Stats:
TotalCycles = 896541
Stalls = 518470
NOPs = 0
IdleCycles = 0
DecodeStalls = 74755
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 68808
Creating Stats:
TotalCycles = 895055
Stalls = 522015
NOPs = 0
IdleCycles = 0
DecodeStalls = 78300
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 66025
Creating Stats:
TotalCycles = 896536
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65317
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 27
HALT operation received from [0][2][0] at cycle 35
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974068
Simulation finished, cycleCount = 974069
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974069
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 15
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2972549
HALT operation received from [0][1][0] at cycle 3001620
HALT operation received from [0][2][0] at cycle 3100764
HALT operation received from [0][3][0] at cycle 3166000
Simulation finished, cycleCount = 3166001
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2972550
Stalls = 920752
NOPs = 0
IdleCycles = 0
DecodeStalls = 443455
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 541919
Creating Stats:
TotalCycles = 3001621
Stalls = 900907
NOPs = 0
IdleCycles = 0
DecodeStalls = 423610
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 583612
Creating Stats:
TotalCycles = 3100765
Stalls = 892675
NOPs = 0
IdleCycles = 0
DecodeStalls = 415378
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 657042
Creating Stats:
TotalCycles = 3166001
Stalls = 889048
NOPs = 0
IdleCycles = 0
DecodeStalls = 411751
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 692697
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][2][0] at cycle 895054
HALT operation received from [0][3][0] at cycle 896535
HALT operation received from [0][0][0] at cycle 896536
HALT operation received from [0][1][0] at cycle 896540
Simulation finished, cycleCount = 896541
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 896537
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65316
Creating Stats:
TotalCycles = 896541
Stalls = 518470
NOPs = 0
IdleCycles = 0
DecodeStalls = 74755
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 68808
Creating Stats:
TotalCycles = 895055
Stalls = 522015
NOPs = 0
IdleCycles = 0
DecodeStalls = 78300
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 66025
Creating Stats:
TotalCycles = 896536
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65317
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 27
HALT operation received from [0][2][0] at cycle 35
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974068
Simulation finished, cycleCount = 974069
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974069
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 15
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2972549
HALT operation received from [0][1][0] at cycle 3001620
HALT operation received from [0][2][0] at cycle 3100764
HALT operation received from [0][3][0] at cycle 3166000
Simulation finished, cycleCount = 3166001
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2972550
Stalls = 920752
NOPs = 0
IdleCycles = 0
DecodeStalls = 443455
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 541919
Creating Stats:
TotalCycles = 3001621
Stalls = 900907
NOPs = 0
IdleCycles = 0
DecodeStalls = 423610
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 583612
Creating Stats:
TotalCycles = 3100765
Stalls = 892675
NOPs = 0
IdleCycles = 0
DecodeStalls = 415378
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 657042
Creating Stats:
TotalCycles = 3166001
Stalls = 889048
NOPs = 0
IdleCycles = 0
DecodeStalls = 411751
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 692697
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][2][0] at cycle 895054
HALT operation received from [0][3][0] at cycle 896535
HALT operation received from [0][0][0] at cycle 896536
HALT operation received from [0][1][0] at cycle 896540
Simulation finished, cycleCount = 896541
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 896537
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65316
Creating Stats:
TotalCycles = 896541
Stalls = 518470
NOPs = 0
IdleCycles = 0
DecodeStalls = 74755
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 68808
Creating Stats:
TotalCycles = 895055
Stalls = 522015
NOPs = 0
IdleCycles = 0
DecodeStalls = 78300
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 66025
Creating Stats:
TotalCycles = 896536
Stalls = 519819
NOPs = 0
IdleCycles = 0
DecodeStalls = 76104
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 65317
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 27
HALT operation received from [0][2][0] at cycle 35
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][0][0] at cycle 974068
Simulation finished, cycleCount = 974069
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974069
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 15
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_1b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2972549
HALT operation received from [0][1][0] at cycle 3001620
HALT operation received from [0][2][0] at cycle 3100764
HALT operation received from [0][3][0] at cycle 3166000
Simulation finished, cycleCount = 3166001
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2972550
Stalls = 920752
NOPs = 0
IdleCycles = 0
DecodeStalls = 443455
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 541919
Creating Stats:
TotalCycles = 3001621
Stalls = 900907
NOPs = 0
IdleCycles = 0
DecodeStalls = 423610
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 583612
Creating Stats:
TotalCycles = 3100765
Stalls = 892675
NOPs = 0
IdleCycles = 0
DecodeStalls = 415378
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 657042
Creating Stats:
TotalCycles = 3166001
Stalls = 889048
NOPs = 0
IdleCycles = 0
DecodeStalls = 411751
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 692697
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1132
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 758985
HALT operation received from [0][1][0] at cycle 771829
HALT operation received from [0][2][0] at cycle 782034
HALT operation received from [0][3][0] at cycle 801508
Simulation finished, cycleCount = 801509
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 758986
Stalls = 468434
NOPs = 0
IdleCycles = 0
DecodeStalls = 24719
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14115
Creating Stats:
TotalCycles = 771830
Stalls = 468167
NOPs = 0
IdleCycles = 0
DecodeStalls = 24452
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 21262
Creating Stats:
TotalCycles = 782035
Stalls = 468076
NOPs = 0
IdleCycles = 0
DecodeStalls = 24361
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26382
Creating Stats:
TotalCycles = 801509
Stalls = 467271
NOPs = 0
IdleCycles = 0
DecodeStalls = 23556
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 36976
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2652
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2331664
HALT operation received from [0][1][0] at cycle 2350351
HALT operation received from [0][2][0] at cycle 2405005
HALT operation received from [0][3][0] at cycle 2454882
Simulation finished, cycleCount = 2454883
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2331665
Stalls = 663216
NOPs = 0
IdleCycles = 0
DecodeStalls = 185919
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 321773
Creating Stats:
TotalCycles = 2350352
Stalls = 684332
NOPs = 0
IdleCycles = 0
DecodeStalls = 207035
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 328664
Creating Stats:
TotalCycles = 2405006
Stalls = 697640
NOPs = 0
IdleCycles = 0
DecodeStalls = 220343
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 360872
Creating Stats:
TotalCycles = 2454883
Stalls = 668750
NOPs = 0
IdleCycles = 0
DecodeStalls = 191453
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 389002
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 810886
HALT operation received from [0][1][0] at cycle 814253
HALT operation received from [0][2][0] at cycle 834644
HALT operation received from [0][3][0] at cycle 839059
Simulation finished, cycleCount = 839060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 810887
Stalls = 526202
NOPs = 0
IdleCycles = 0
DecodeStalls = 82487
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 11246
Creating Stats:
TotalCycles = 814254
Stalls = 526435
NOPs = 0
IdleCycles = 0
DecodeStalls = 82720
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12792
Creating Stats:
TotalCycles = 834645
Stalls = 525950
NOPs = 0
IdleCycles = 0
DecodeStalls = 82235
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 23418
Creating Stats:
TotalCycles = 839060
Stalls = 525286
NOPs = 0
IdleCycles = 0
DecodeStalls = 81571
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26307
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2472793
HALT operation received from [0][1][0] at cycle 2505485
HALT operation received from [0][2][0] at cycle 2579317
HALT operation received from [0][3][0] at cycle 2699286
Simulation finished, cycleCount = 2699287
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2472794
Stalls = 1000393
NOPs = 0
IdleCycles = 0
DecodeStalls = 523096
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 212153
Creating Stats:
TotalCycles = 2505486
Stalls = 980258
NOPs = 0
IdleCycles = 0
DecodeStalls = 502961
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 240163
Creating Stats:
TotalCycles = 2579318
Stalls = 962828
NOPs = 0
IdleCycles = 0
DecodeStalls = 485531
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 290964
Creating Stats:
TotalCycles = 2699287
Stalls = 949617
NOPs = 0
IdleCycles = 0
DecodeStalls = 472320
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 364806
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 810886
HALT operation received from [0][1][0] at cycle 814253
HALT operation received from [0][2][0] at cycle 834644
HALT operation received from [0][3][0] at cycle 839059
Simulation finished, cycleCount = 839060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 810887
Stalls = 526202
NOPs = 0
IdleCycles = 0
DecodeStalls = 82487
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 11246
Creating Stats:
TotalCycles = 814254
Stalls = 526435
NOPs = 0
IdleCycles = 0
DecodeStalls = 82720
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12792
Creating Stats:
TotalCycles = 834645
Stalls = 525950
NOPs = 0
IdleCycles = 0
DecodeStalls = 82235
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 23418
Creating Stats:
TotalCycles = 839060
Stalls = 525286
NOPs = 0
IdleCycles = 0
DecodeStalls = 81571
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26307
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2472793
HALT operation received from [0][1][0] at cycle 2505485
HALT operation received from [0][2][0] at cycle 2579317
HALT operation received from [0][3][0] at cycle 2699286
Simulation finished, cycleCount = 2699287
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2472794
Stalls = 1000393
NOPs = 0
IdleCycles = 0
DecodeStalls = 523096
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 212153
Creating Stats:
TotalCycles = 2505486
Stalls = 980258
NOPs = 0
IdleCycles = 0
DecodeStalls = 502961
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 240163
Creating Stats:
TotalCycles = 2579318
Stalls = 962828
NOPs = 0
IdleCycles = 0
DecodeStalls = 485531
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 290964
Creating Stats:
TotalCycles = 2699287
Stalls = 949617
NOPs = 0
IdleCycles = 0
DecodeStalls = 472320
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 364806
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 810886
HALT operation received from [0][1][0] at cycle 814253
HALT operation received from [0][2][0] at cycle 834644
HALT operation received from [0][3][0] at cycle 839059
Simulation finished, cycleCount = 839060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 810887
Stalls = 526202
NOPs = 0
IdleCycles = 0
DecodeStalls = 82487
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 11246
Creating Stats:
TotalCycles = 814254
Stalls = 526435
NOPs = 0
IdleCycles = 0
DecodeStalls = 82720
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12792
Creating Stats:
TotalCycles = 834645
Stalls = 525950
NOPs = 0
IdleCycles = 0
DecodeStalls = 82235
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 23418
Creating Stats:
TotalCycles = 839060
Stalls = 525286
NOPs = 0
IdleCycles = 0
DecodeStalls = 81571
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26307
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2472793
HALT operation received from [0][1][0] at cycle 2505485
HALT operation received from [0][2][0] at cycle 2579317
HALT operation received from [0][3][0] at cycle 2699286
Simulation finished, cycleCount = 2699287
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2472794
Stalls = 1000393
NOPs = 0
IdleCycles = 0
DecodeStalls = 523096
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 212153
Creating Stats:
TotalCycles = 2505486
Stalls = 980258
NOPs = 0
IdleCycles = 0
DecodeStalls = 502961
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 240163
Creating Stats:
TotalCycles = 2579318
Stalls = 962828
NOPs = 0
IdleCycles = 0
DecodeStalls = 485531
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 290964
Creating Stats:
TotalCycles = 2699287
Stalls = 949617
NOPs = 0
IdleCycles = 0
DecodeStalls = 472320
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 364806
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 810886
HALT operation received from [0][1][0] at cycle 814253
HALT operation received from [0][2][0] at cycle 834644
HALT operation received from [0][3][0] at cycle 839059
Simulation finished, cycleCount = 839060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 810887
Stalls = 526202
NOPs = 0
IdleCycles = 0
DecodeStalls = 82487
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 11246
Creating Stats:
TotalCycles = 814254
Stalls = 526435
NOPs = 0
IdleCycles = 0
DecodeStalls = 82720
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12792
Creating Stats:
TotalCycles = 834645
Stalls = 525950
NOPs = 0
IdleCycles = 0
DecodeStalls = 82235
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 23418
Creating Stats:
TotalCycles = 839060
Stalls = 525286
NOPs = 0
IdleCycles = 0
DecodeStalls = 81571
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26307
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2472793
HALT operation received from [0][1][0] at cycle 2505485
HALT operation received from [0][2][0] at cycle 2579317
HALT operation received from [0][3][0] at cycle 2699286
Simulation finished, cycleCount = 2699287
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2472794
Stalls = 1000393
NOPs = 0
IdleCycles = 0
DecodeStalls = 523096
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 212153
Creating Stats:
TotalCycles = 2505486
Stalls = 980258
NOPs = 0
IdleCycles = 0
DecodeStalls = 502961
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 240163
Creating Stats:
TotalCycles = 2579318
Stalls = 962828
NOPs = 0
IdleCycles = 0
DecodeStalls = 485531
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 290964
Creating Stats:
TotalCycles = 2699287
Stalls = 949617
NOPs = 0
IdleCycles = 0
DecodeStalls = 472320
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 364806
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 810886
HALT operation received from [0][1][0] at cycle 814253
HALT operation received from [0][2][0] at cycle 834644
HALT operation received from [0][3][0] at cycle 839059
Simulation finished, cycleCount = 839060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 810887
Stalls = 526202
NOPs = 0
IdleCycles = 0
DecodeStalls = 82487
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 11246
Creating Stats:
TotalCycles = 814254
Stalls = 526435
NOPs = 0
IdleCycles = 0
DecodeStalls = 82720
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12792
Creating Stats:
TotalCycles = 834645
Stalls = 525950
NOPs = 0
IdleCycles = 0
DecodeStalls = 82235
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 23418
Creating Stats:
TotalCycles = 839060
Stalls = 525286
NOPs = 0
IdleCycles = 0
DecodeStalls = 81571
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26307
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2472793
HALT operation received from [0][1][0] at cycle 2505485
HALT operation received from [0][2][0] at cycle 2579317
HALT operation received from [0][3][0] at cycle 2699286
Simulation finished, cycleCount = 2699287
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2472794
Stalls = 1000393
NOPs = 0
IdleCycles = 0
DecodeStalls = 523096
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 212153
Creating Stats:
TotalCycles = 2505486
Stalls = 980258
NOPs = 0
IdleCycles = 0
DecodeStalls = 502961
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 240163
Creating Stats:
TotalCycles = 2579318
Stalls = 962828
NOPs = 0
IdleCycles = 0
DecodeStalls = 485531
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 290964
Creating Stats:
TotalCycles = 2699287
Stalls = 949617
NOPs = 0
IdleCycles = 0
DecodeStalls = 472320
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 364806
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 810886
HALT operation received from [0][1][0] at cycle 814253
HALT operation received from [0][2][0] at cycle 834644
HALT operation received from [0][3][0] at cycle 839059
Simulation finished, cycleCount = 839060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 810887
Stalls = 526202
NOPs = 0
IdleCycles = 0
DecodeStalls = 82487
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 11246
Creating Stats:
TotalCycles = 814254
Stalls = 526435
NOPs = 0
IdleCycles = 0
DecodeStalls = 82720
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12792
Creating Stats:
TotalCycles = 834645
Stalls = 525950
NOPs = 0
IdleCycles = 0
DecodeStalls = 82235
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 23418
Creating Stats:
TotalCycles = 839060
Stalls = 525286
NOPs = 0
IdleCycles = 0
DecodeStalls = 81571
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26307
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2472793
HALT operation received from [0][1][0] at cycle 2505485
HALT operation received from [0][2][0] at cycle 2579317
HALT operation received from [0][3][0] at cycle 2699286
Simulation finished, cycleCount = 2699287
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2472794
Stalls = 1000393
NOPs = 0
IdleCycles = 0
DecodeStalls = 523096
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 212153
Creating Stats:
TotalCycles = 2505486
Stalls = 980258
NOPs = 0
IdleCycles = 0
DecodeStalls = 502961
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 240163
Creating Stats:
TotalCycles = 2579318
Stalls = 962828
NOPs = 0
IdleCycles = 0
DecodeStalls = 485531
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 290964
Creating Stats:
TotalCycles = 2699287
Stalls = 949617
NOPs = 0
IdleCycles = 0
DecodeStalls = 472320
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 364806
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 810886
HALT operation received from [0][1][0] at cycle 814253
HALT operation received from [0][2][0] at cycle 834644
HALT operation received from [0][3][0] at cycle 839059
Simulation finished, cycleCount = 839060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 810887
Stalls = 526202
NOPs = 0
IdleCycles = 0
DecodeStalls = 82487
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 11246
Creating Stats:
TotalCycles = 814254
Stalls = 526435
NOPs = 0
IdleCycles = 0
DecodeStalls = 82720
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12792
Creating Stats:
TotalCycles = 834645
Stalls = 525950
NOPs = 0
IdleCycles = 0
DecodeStalls = 82235
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 23418
Creating Stats:
TotalCycles = 839060
Stalls = 525286
NOPs = 0
IdleCycles = 0
DecodeStalls = 81571
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 26307
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 20
HALT operation received from [0][2][0] at cycle 23
HALT operation received from [0][3][0] at cycle 24
HALT operation received from [0][0][0] at cycle 974057
Simulation finished, cycleCount = 974058
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974058
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 21
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 6
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_2b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2472793
HALT operation received from [0][1][0] at cycle 2505485
HALT operation received from [0][2][0] at cycle 2579317
HALT operation received from [0][3][0] at cycle 2699286
Simulation finished, cycleCount = 2699287
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2472794
Stalls = 1000393
NOPs = 0
IdleCycles = 0
DecodeStalls = 523096
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 212153
Creating Stats:
TotalCycles = 2505486
Stalls = 980258
NOPs = 0
IdleCycles = 0
DecodeStalls = 502961
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 240163
Creating Stats:
TotalCycles = 2579318
Stalls = 962828
NOPs = 0
IdleCycles = 0
DecodeStalls = 485531
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 290964
Creating Stats:
TotalCycles = 2699287
Stalls = 949617
NOPs = 0
IdleCycles = 0
DecodeStalls = 472320
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 364806
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1132
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 745574
HALT operation received from [0][1][0] at cycle 753672
HALT operation received from [0][2][0] at cycle 763522
HALT operation received from [0][3][0] at cycle 771588
Simulation finished, cycleCount = 771589
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 745575
Stalls = 469044
NOPs = 0
IdleCycles = 0
DecodeStalls = 25329
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 6741
Creating Stats:
TotalCycles = 753673
Stalls = 468826
NOPs = 0
IdleCycles = 0
DecodeStalls = 25111
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 10986
Creating Stats:
TotalCycles = 763523
Stalls = 468329
NOPs = 0
IdleCycles = 0
DecodeStalls = 24614
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 16255
Creating Stats:
TotalCycles = 771589
Stalls = 468079
NOPs = 0
IdleCycles = 0
DecodeStalls = 24364
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 20566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2652
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2024497
HALT operation received from [0][1][0] at cycle 2083671
HALT operation received from [0][2][0] at cycle 2141576
HALT operation received from [0][3][0] at cycle 2196988
Simulation finished, cycleCount = 2196989
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2024498
Stalls = 690188
NOPs = 0
IdleCycles = 0
DecodeStalls = 212891
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 132872
Creating Stats:
TotalCycles = 2083672
Stalls = 700177
NOPs = 0
IdleCycles = 0
DecodeStalls = 222880
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 160456
Creating Stats:
TotalCycles = 2141577
Stalls = 706905
NOPs = 0
IdleCycles = 0
DecodeStalls = 229608
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 188581
Creating Stats:
TotalCycles = 2196989
Stalls = 703543
NOPs = 0
IdleCycles = 0
DecodeStalls = 226246
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 217650
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 798693
HALT operation received from [0][1][0] at cycle 800392
HALT operation received from [0][2][0] at cycle 813583
HALT operation received from [0][3][0] at cycle 818032
Simulation finished, cycleCount = 818033
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 798694
Stalls = 526722
NOPs = 0
IdleCycles = 0
DecodeStalls = 83007
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 4448
Creating Stats:
TotalCycles = 800393
Stalls = 526828
NOPs = 0
IdleCycles = 0
DecodeStalls = 83113
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 5342
Creating Stats:
TotalCycles = 813584
Stalls = 526413
NOPs = 0
IdleCycles = 0
DecodeStalls = 82698
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12188
Creating Stats:
TotalCycles = 818033
Stalls = 526322
NOPs = 0
IdleCycles = 0
DecodeStalls = 82607
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2280520
HALT operation received from [0][1][0] at cycle 2301156
HALT operation received from [0][2][0] at cycle 2346908
HALT operation received from [0][3][0] at cycle 2418804
Simulation finished, cycleCount = 2418805
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2280521
Stalls = 1023460
NOPs = 0
IdleCycles = 0
DecodeStalls = 546163
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 92508
Creating Stats:
TotalCycles = 2301157
Stalls = 1012627
NOPs = 0
IdleCycles = 0
DecodeStalls = 535330
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 109609
Creating Stats:
TotalCycles = 2346909
Stalls = 1004549
NOPs = 0
IdleCycles = 0
DecodeStalls = 527252
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 138942
Creating Stats:
TotalCycles = 2418805
Stalls = 990813
NOPs = 0
IdleCycles = 0
DecodeStalls = 513516
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 182749
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 798693
HALT operation received from [0][1][0] at cycle 800392
HALT operation received from [0][2][0] at cycle 813583
HALT operation received from [0][3][0] at cycle 818032
Simulation finished, cycleCount = 818033
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 798694
Stalls = 526722
NOPs = 0
IdleCycles = 0
DecodeStalls = 83007
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 4448
Creating Stats:
TotalCycles = 800393
Stalls = 526828
NOPs = 0
IdleCycles = 0
DecodeStalls = 83113
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 5342
Creating Stats:
TotalCycles = 813584
Stalls = 526413
NOPs = 0
IdleCycles = 0
DecodeStalls = 82698
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12188
Creating Stats:
TotalCycles = 818033
Stalls = 526322
NOPs = 0
IdleCycles = 0
DecodeStalls = 82607
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2280520
HALT operation received from [0][1][0] at cycle 2301156
HALT operation received from [0][2][0] at cycle 2346908
HALT operation received from [0][3][0] at cycle 2418804
Simulation finished, cycleCount = 2418805
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2280521
Stalls = 1023460
NOPs = 0
IdleCycles = 0
DecodeStalls = 546163
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 92508
Creating Stats:
TotalCycles = 2301157
Stalls = 1012627
NOPs = 0
IdleCycles = 0
DecodeStalls = 535330
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 109609
Creating Stats:
TotalCycles = 2346909
Stalls = 1004549
NOPs = 0
IdleCycles = 0
DecodeStalls = 527252
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 138942
Creating Stats:
TotalCycles = 2418805
Stalls = 990813
NOPs = 0
IdleCycles = 0
DecodeStalls = 513516
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 182749
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 798693
HALT operation received from [0][1][0] at cycle 800392
HALT operation received from [0][2][0] at cycle 813583
HALT operation received from [0][3][0] at cycle 818032
Simulation finished, cycleCount = 818033
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 798694
Stalls = 526722
NOPs = 0
IdleCycles = 0
DecodeStalls = 83007
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 4448
Creating Stats:
TotalCycles = 800393
Stalls = 526828
NOPs = 0
IdleCycles = 0
DecodeStalls = 83113
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 5342
Creating Stats:
TotalCycles = 813584
Stalls = 526413
NOPs = 0
IdleCycles = 0
DecodeStalls = 82698
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12188
Creating Stats:
TotalCycles = 818033
Stalls = 526322
NOPs = 0
IdleCycles = 0
DecodeStalls = 82607
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2280520
HALT operation received from [0][1][0] at cycle 2301156
HALT operation received from [0][2][0] at cycle 2346908
HALT operation received from [0][3][0] at cycle 2418804
Simulation finished, cycleCount = 2418805
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2280521
Stalls = 1023460
NOPs = 0
IdleCycles = 0
DecodeStalls = 546163
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 92508
Creating Stats:
TotalCycles = 2301157
Stalls = 1012627
NOPs = 0
IdleCycles = 0
DecodeStalls = 535330
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 109609
Creating Stats:
TotalCycles = 2346909
Stalls = 1004549
NOPs = 0
IdleCycles = 0
DecodeStalls = 527252
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 138942
Creating Stats:
TotalCycles = 2418805
Stalls = 990813
NOPs = 0
IdleCycles = 0
DecodeStalls = 513516
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 182749
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 798693
HALT operation received from [0][1][0] at cycle 800392
HALT operation received from [0][2][0] at cycle 813583
HALT operation received from [0][3][0] at cycle 818032
Simulation finished, cycleCount = 818033
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 798694
Stalls = 526722
NOPs = 0
IdleCycles = 0
DecodeStalls = 83007
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 4448
Creating Stats:
TotalCycles = 800393
Stalls = 526828
NOPs = 0
IdleCycles = 0
DecodeStalls = 83113
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 5342
Creating Stats:
TotalCycles = 813584
Stalls = 526413
NOPs = 0
IdleCycles = 0
DecodeStalls = 82698
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12188
Creating Stats:
TotalCycles = 818033
Stalls = 526322
NOPs = 0
IdleCycles = 0
DecodeStalls = 82607
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2280520
HALT operation received from [0][1][0] at cycle 2301156
HALT operation received from [0][2][0] at cycle 2346908
HALT operation received from [0][3][0] at cycle 2418804
Simulation finished, cycleCount = 2418805
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2280521
Stalls = 1023460
NOPs = 0
IdleCycles = 0
DecodeStalls = 546163
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 92508
Creating Stats:
TotalCycles = 2301157
Stalls = 1012627
NOPs = 0
IdleCycles = 0
DecodeStalls = 535330
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 109609
Creating Stats:
TotalCycles = 2346909
Stalls = 1004549
NOPs = 0
IdleCycles = 0
DecodeStalls = 527252
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 138942
Creating Stats:
TotalCycles = 2418805
Stalls = 990813
NOPs = 0
IdleCycles = 0
DecodeStalls = 513516
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 182749
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 798693
HALT operation received from [0][1][0] at cycle 800392
HALT operation received from [0][2][0] at cycle 813583
HALT operation received from [0][3][0] at cycle 818032
Simulation finished, cycleCount = 818033
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 798694
Stalls = 526722
NOPs = 0
IdleCycles = 0
DecodeStalls = 83007
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 4448
Creating Stats:
TotalCycles = 800393
Stalls = 526828
NOPs = 0
IdleCycles = 0
DecodeStalls = 83113
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 5342
Creating Stats:
TotalCycles = 813584
Stalls = 526413
NOPs = 0
IdleCycles = 0
DecodeStalls = 82698
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12188
Creating Stats:
TotalCycles = 818033
Stalls = 526322
NOPs = 0
IdleCycles = 0
DecodeStalls = 82607
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2280520
HALT operation received from [0][1][0] at cycle 2301156
HALT operation received from [0][2][0] at cycle 2346908
HALT operation received from [0][3][0] at cycle 2418804
Simulation finished, cycleCount = 2418805
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2280521
Stalls = 1023460
NOPs = 0
IdleCycles = 0
DecodeStalls = 546163
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 92508
Creating Stats:
TotalCycles = 2301157
Stalls = 1012627
NOPs = 0
IdleCycles = 0
DecodeStalls = 535330
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 109609
Creating Stats:
TotalCycles = 2346909
Stalls = 1004549
NOPs = 0
IdleCycles = 0
DecodeStalls = 527252
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 138942
Creating Stats:
TotalCycles = 2418805
Stalls = 990813
NOPs = 0
IdleCycles = 0
DecodeStalls = 513516
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 182749
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 798693
HALT operation received from [0][1][0] at cycle 800392
HALT operation received from [0][2][0] at cycle 813583
HALT operation received from [0][3][0] at cycle 818032
Simulation finished, cycleCount = 818033
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 798694
Stalls = 526722
NOPs = 0
IdleCycles = 0
DecodeStalls = 83007
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 4448
Creating Stats:
TotalCycles = 800393
Stalls = 526828
NOPs = 0
IdleCycles = 0
DecodeStalls = 83113
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 5342
Creating Stats:
TotalCycles = 813584
Stalls = 526413
NOPs = 0
IdleCycles = 0
DecodeStalls = 82698
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12188
Creating Stats:
TotalCycles = 818033
Stalls = 526322
NOPs = 0
IdleCycles = 0
DecodeStalls = 82607
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2280520
HALT operation received from [0][1][0] at cycle 2301156
HALT operation received from [0][2][0] at cycle 2346908
HALT operation received from [0][3][0] at cycle 2418804
Simulation finished, cycleCount = 2418805
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2280521
Stalls = 1023460
NOPs = 0
IdleCycles = 0
DecodeStalls = 546163
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 92508
Creating Stats:
TotalCycles = 2301157
Stalls = 1012627
NOPs = 0
IdleCycles = 0
DecodeStalls = 535330
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 109609
Creating Stats:
TotalCycles = 2346909
Stalls = 1004549
NOPs = 0
IdleCycles = 0
DecodeStalls = 527252
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 138942
Creating Stats:
TotalCycles = 2418805
Stalls = 990813
NOPs = 0
IdleCycles = 0
DecodeStalls = 513516
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 182749
RUN REDUCE
Device: 4 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 4096
mem align: 0
dram_base_offset: 0
Size of data area : 12872
Size of bss area : 
End of memory: 102976
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 1136
DRAMFileSize = 12872
HALT operation received from [0][0][0] at cycle 798693
HALT operation received from [0][1][0] at cycle 800392
HALT operation received from [0][2][0] at cycle 813583
HALT operation received from [0][3][0] at cycle 818032
Simulation finished, cycleCount = 818033
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 798694
Stalls = 526722
NOPs = 0
IdleCycles = 0
DecodeStalls = 83007
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 4448
Creating Stats:
TotalCycles = 800393
Stalls = 526828
NOPs = 0
IdleCycles = 0
DecodeStalls = 83113
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 5342
Creating Stats:
TotalCycles = 813584
Stalls = 526413
NOPs = 0
IdleCycles = 0
DecodeStalls = 82698
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 12188
Creating Stats:
TotalCycles = 818033
Stalls = 526322
NOPs = 0
IdleCycles = 0
DecodeStalls = 82607
BranchesTaken = 147901
BranchesNotTaken = 9574
ControlFlowChange = 147905
MemoryAccessCount = 14566
RUN TOP_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 8776
Size of bss area : 
End of memory: 70208
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 8776
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 17
HALT operation received from [0][3][0] at cycle 18
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 18
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 2
Creating Stats:
TotalCycles = 19
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
RUN BOTTOM_SCAN
Device: 4 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 4;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 25160
Size of bss area : 
End of memory: 201280
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  4C_4w_1ls_4b.xml
IRAMFileSize = 2656
DRAMFileSize = 25160
HALT operation received from [0][0][0] at cycle 2280520
HALT operation received from [0][1][0] at cycle 2301156
HALT operation received from [0][2][0] at cycle 2346908
HALT operation received from [0][3][0] at cycle 2418804
Simulation finished, cycleCount = 2418805
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2280521
Stalls = 1023460
NOPs = 0
IdleCycles = 0
DecodeStalls = 546163
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 92508
Creating Stats:
TotalCycles = 2301157
Stalls = 1012627
NOPs = 0
IdleCycles = 0
DecodeStalls = 535330
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 109609
Creating Stats:
TotalCycles = 2346909
Stalls = 1004549
NOPs = 0
IdleCycles = 0
DecodeStalls = 527252
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 138942
Creating Stats:
TotalCycles = 2418805
Stalls = 990813
NOPs = 0
IdleCycles = 0
DecodeStalls = 513516
BranchesTaken = 159095
BranchesNotTaken = 1454
ControlFlowChange = 159099
MemoryAccessCount = 182749
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1148
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 537438
HALT operation received from [0][1][0] at cycle 538379
HALT operation received from [0][2][0] at cycle 543224
HALT operation received from [0][3][0] at cycle 549365
HALT operation received from [0][4][0] at cycle 553509
HALT operation received from [0][5][0] at cycle 558631
HALT operation received from [0][6][0] at cycle 560894
HALT operation received from [0][7][0] at cycle 563836
Simulation finished, cycleCount = 563837
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 537439
Stalls = 230803
NOPs = 0
IdleCycles = 0
DecodeStalls = 8947
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 123395
Creating Stats:
TotalCycles = 538380
Stalls = 231068
NOPs = 0
IdleCycles = 0
DecodeStalls = 9212
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 124625
Creating Stats:
TotalCycles = 543225
Stalls = 230776
NOPs = 0
IdleCycles = 0
DecodeStalls = 8920
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 128522
Creating Stats:
TotalCycles = 549366
Stalls = 230952
NOPs = 0
IdleCycles = 0
DecodeStalls = 9096
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 133599
Creating Stats:
TotalCycles = 553510
Stalls = 230869
NOPs = 0
IdleCycles = 0
DecodeStalls = 9013
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 137046
Creating Stats:
TotalCycles = 558632
Stalls = 230641
NOPs = 0
IdleCycles = 0
DecodeStalls = 8785
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141497
Creating Stats:
TotalCycles = 560895
Stalls = 230588
NOPs = 0
IdleCycles = 0
DecodeStalls = 8732
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 143384
Creating Stats:
TotalCycles = 563837
Stalls = 230382
NOPs = 0
IdleCycles = 0
DecodeStalls = 8526
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 145412
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][4][0] at cycle 62
HALT operation received from [0][5][0] at cycle 65
HALT operation received from [0][6][0] at cycle 67
HALT operation received from [0][7][0] at cycle 69
HALT operation received from [0][1][0] at cycle 71
HALT operation received from [0][2][0] at cycle 72
HALT operation received from [0][3][0] at cycle 75
HALT operation received from [0][0][0] at cycle 974101
Simulation finished, cycleCount = 974102
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974102
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 40
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 73
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 52
Creating Stats:
TotalCycles = 76
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
Creating Stats:
TotalCycles = 63
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 47
Creating Stats:
TotalCycles = 66
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 49
Creating Stats:
TotalCycles = 68
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 50
Creating Stats:
TotalCycles = 70
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 52
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2668
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2777820
HALT operation received from [0][1][0] at cycle 2790830
HALT operation received from [0][2][0] at cycle 2802360
HALT operation received from [0][3][0] at cycle 2806863
HALT operation received from [0][4][0] at cycle 2814066
HALT operation received from [0][5][0] at cycle 2819464
HALT operation received from [0][6][0] at cycle 2824049
HALT operation received from [0][7][0] at cycle 2829191
Simulation finished, cycleCount = 2829192
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2777821
Stalls = 317977
NOPs = 0
IdleCycles = 0
DecodeStalls = 79330
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1565509
Creating Stats:
TotalCycles = 2790831
Stalls = 317978
NOPs = 0
IdleCycles = 0
DecodeStalls = 79331
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1578503
Creating Stats:
TotalCycles = 2802361
Stalls = 317985
NOPs = 0
IdleCycles = 0
DecodeStalls = 79338
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1590103
Creating Stats:
TotalCycles = 2806864
Stalls = 317995
NOPs = 0
IdleCycles = 0
DecodeStalls = 79348
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1594705
Creating Stats:
TotalCycles = 2814067
Stalls = 318148
NOPs = 0
IdleCycles = 0
DecodeStalls = 79501
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1602594
Creating Stats:
TotalCycles = 2819465
Stalls = 318329
NOPs = 0
IdleCycles = 0
DecodeStalls = 79682
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1608608
Creating Stats:
TotalCycles = 2824050
Stalls = 318491
NOPs = 0
IdleCycles = 0
DecodeStalls = 79844
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1613913
Creating Stats:
TotalCycles = 2829192
Stalls = 318630
NOPs = 0
IdleCycles = 0
DecodeStalls = 79983
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1619580
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][5][0] at cycle 571025
HALT operation received from [0][7][0] at cycle 572819
HALT operation received from [0][0][0] at cycle 572820
HALT operation received from [0][1][0] at cycle 572828
HALT operation received from [0][2][0] at cycle 572830
HALT operation received from [0][3][0] at cycle 572849
HALT operation received from [0][4][0] at cycle 572981
HALT operation received from [0][6][0] at cycle 573280
Simulation finished, cycleCount = 573281
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 572821
Stalls = 259223
NOPs = 0
IdleCycles = 0
DecodeStalls = 37367
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140607
Creating Stats:
TotalCycles = 572829
Stalls = 259223
NOPs = 0
IdleCycles = 0
DecodeStalls = 37367
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140828
Creating Stats:
TotalCycles = 572831
Stalls = 259223
NOPs = 0
IdleCycles = 0
DecodeStalls = 37367
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140826
Creating Stats:
TotalCycles = 572850
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140788
Creating Stats:
TotalCycles = 572982
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140846
Creating Stats:
TotalCycles = 571026
Stalls = 259433
NOPs = 0
IdleCycles = 0
DecodeStalls = 37577
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 138603
Creating Stats:
TotalCycles = 573281
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140875
Creating Stats:
TotalCycles = 572820
Stalls = 259223
NOPs = 0
IdleCycles = 0
DecodeStalls = 37367
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140608
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][3][0] at cycle 58
HALT operation received from [0][6][0] at cycle 65
HALT operation received from [0][1][0] at cycle 68
HALT operation received from [0][2][0] at cycle 70
HALT operation received from [0][4][0] at cycle 71
HALT operation received from [0][5][0] at cycle 73
HALT operation received from [0][7][0] at cycle 75
HALT operation received from [0][0][0] at cycle 974100
Simulation finished, cycleCount = 974101
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974101
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 39
Creating Stats:
TotalCycles = 69
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 71
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 50
Creating Stats:
TotalCycles = 59
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 43
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 74
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 53
Creating Stats:
TotalCycles = 66
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 76
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2775354
HALT operation received from [0][1][0] at cycle 2785237
HALT operation received from [0][2][0] at cycle 2794449
HALT operation received from [0][3][0] at cycle 2803065
HALT operation received from [0][4][0] at cycle 2810736
HALT operation received from [0][5][0] at cycle 2818989
HALT operation received from [0][6][0] at cycle 2826667
HALT operation received from [0][7][0] at cycle 2830161
Simulation finished, cycleCount = 2830162
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2775355
Stalls = 412005
NOPs = 0
IdleCycles = 0
DecodeStalls = 173358
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1469031
Creating Stats:
TotalCycles = 2785238
Stalls = 412007
NOPs = 0
IdleCycles = 0
DecodeStalls = 173360
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1478908
Creating Stats:
TotalCycles = 2794450
Stalls = 412014
NOPs = 0
IdleCycles = 0
DecodeStalls = 173367
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1488219
Creating Stats:
TotalCycles = 2803066
Stalls = 412031
NOPs = 0
IdleCycles = 0
DecodeStalls = 173384
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1497216
Creating Stats:
TotalCycles = 2810737
Stalls = 412123
NOPs = 0
IdleCycles = 0
DecodeStalls = 173476
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1505550
Creating Stats:
TotalCycles = 2818990
Stalls = 412334
NOPs = 0
IdleCycles = 0
DecodeStalls = 173687
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1514929
Creating Stats:
TotalCycles = 2826668
Stalls = 412682
NOPs = 0
IdleCycles = 0
DecodeStalls = 174035
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1523501
Creating Stats:
TotalCycles = 2830162
Stalls = 412681
NOPs = 0
IdleCycles = 0
DecodeStalls = 174034
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1527258
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][5][0] at cycle 562808
HALT operation received from [0][6][0] at cycle 575622
HALT operation received from [0][7][0] at cycle 575632
HALT operation received from [0][0][0] at cycle 575633
HALT operation received from [0][1][0] at cycle 575634
HALT operation received from [0][2][0] at cycle 575635
HALT operation received from [0][3][0] at cycle 575637
HALT operation received from [0][4][0] at cycle 575643
Simulation finished, cycleCount = 575644
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 575634
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141160
Creating Stats:
TotalCycles = 575635
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140962
Creating Stats:
TotalCycles = 575636
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141500
Creating Stats:
TotalCycles = 575638
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141620
Creating Stats:
TotalCycles = 575644
Stalls = 259225
NOPs = 0
IdleCycles = 0
DecodeStalls = 37369
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140907
Creating Stats:
TotalCycles = 562809
Stalls = 260379
NOPs = 0
IdleCycles = 0
DecodeStalls = 38523
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 127663
Creating Stats:
TotalCycles = 575623
Stalls = 259230
NOPs = 0
IdleCycles = 0
DecodeStalls = 37374
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140853
Creating Stats:
TotalCycles = 575633
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141161
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][4][0] at cycle 55
HALT operation received from [0][1][0] at cycle 66
HALT operation received from [0][2][0] at cycle 68
HALT operation received from [0][3][0] at cycle 69
HALT operation received from [0][5][0] at cycle 71
HALT operation received from [0][6][0] at cycle 73
HALT operation received from [0][7][0] at cycle 76
HALT operation received from [0][0][0] at cycle 974100
Simulation finished, cycleCount = 974101
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974101
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 40
Creating Stats:
TotalCycles = 67
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 46
Creating Stats:
TotalCycles = 69
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 70
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 49
Creating Stats:
TotalCycles = 56
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 41
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 74
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 53
Creating Stats:
TotalCycles = 77
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2775354
HALT operation received from [0][1][0] at cycle 2785237
HALT operation received from [0][2][0] at cycle 2794449
HALT operation received from [0][3][0] at cycle 2803065
HALT operation received from [0][4][0] at cycle 2810736
HALT operation received from [0][5][0] at cycle 2818989
HALT operation received from [0][6][0] at cycle 2826667
HALT operation received from [0][7][0] at cycle 2830161
Simulation finished, cycleCount = 2830162
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2775355
Stalls = 412005
NOPs = 0
IdleCycles = 0
DecodeStalls = 173358
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1469031
Creating Stats:
TotalCycles = 2785238
Stalls = 412007
NOPs = 0
IdleCycles = 0
DecodeStalls = 173360
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1478908
Creating Stats:
TotalCycles = 2794450
Stalls = 412014
NOPs = 0
IdleCycles = 0
DecodeStalls = 173367
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1488219
Creating Stats:
TotalCycles = 2803066
Stalls = 412031
NOPs = 0
IdleCycles = 0
DecodeStalls = 173384
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1497216
Creating Stats:
TotalCycles = 2810737
Stalls = 412123
NOPs = 0
IdleCycles = 0
DecodeStalls = 173476
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1505550
Creating Stats:
TotalCycles = 2818990
Stalls = 412334
NOPs = 0
IdleCycles = 0
DecodeStalls = 173687
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1514929
Creating Stats:
TotalCycles = 2826668
Stalls = 412682
NOPs = 0
IdleCycles = 0
DecodeStalls = 174035
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1523501
Creating Stats:
TotalCycles = 2830162
Stalls = 412681
NOPs = 0
IdleCycles = 0
DecodeStalls = 174034
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1527258
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][5][0] at cycle 562808
HALT operation received from [0][6][0] at cycle 575622
HALT operation received from [0][7][0] at cycle 575632
HALT operation received from [0][0][0] at cycle 575633
HALT operation received from [0][1][0] at cycle 575634
HALT operation received from [0][2][0] at cycle 575635
HALT operation received from [0][3][0] at cycle 575637
HALT operation received from [0][4][0] at cycle 575643
Simulation finished, cycleCount = 575644
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 575634
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141160
Creating Stats:
TotalCycles = 575635
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140962
Creating Stats:
TotalCycles = 575636
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141500
Creating Stats:
TotalCycles = 575638
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141620
Creating Stats:
TotalCycles = 575644
Stalls = 259225
NOPs = 0
IdleCycles = 0
DecodeStalls = 37369
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140907
Creating Stats:
TotalCycles = 562809
Stalls = 260379
NOPs = 0
IdleCycles = 0
DecodeStalls = 38523
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 127663
Creating Stats:
TotalCycles = 575623
Stalls = 259230
NOPs = 0
IdleCycles = 0
DecodeStalls = 37374
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140853
Creating Stats:
TotalCycles = 575633
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141161
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][4][0] at cycle 55
HALT operation received from [0][1][0] at cycle 66
HALT operation received from [0][2][0] at cycle 68
HALT operation received from [0][3][0] at cycle 69
HALT operation received from [0][5][0] at cycle 71
HALT operation received from [0][6][0] at cycle 73
HALT operation received from [0][7][0] at cycle 76
HALT operation received from [0][0][0] at cycle 974100
Simulation finished, cycleCount = 974101
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974101
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 40
Creating Stats:
TotalCycles = 67
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 46
Creating Stats:
TotalCycles = 69
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 70
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 49
Creating Stats:
TotalCycles = 56
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 41
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 74
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 53
Creating Stats:
TotalCycles = 77
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2775354
HALT operation received from [0][1][0] at cycle 2785237
HALT operation received from [0][2][0] at cycle 2794449
HALT operation received from [0][3][0] at cycle 2803065
HALT operation received from [0][4][0] at cycle 2810736
HALT operation received from [0][5][0] at cycle 2818989
HALT operation received from [0][6][0] at cycle 2826667
HALT operation received from [0][7][0] at cycle 2830161
Simulation finished, cycleCount = 2830162
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2775355
Stalls = 412005
NOPs = 0
IdleCycles = 0
DecodeStalls = 173358
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1469031
Creating Stats:
TotalCycles = 2785238
Stalls = 412007
NOPs = 0
IdleCycles = 0
DecodeStalls = 173360
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1478908
Creating Stats:
TotalCycles = 2794450
Stalls = 412014
NOPs = 0
IdleCycles = 0
DecodeStalls = 173367
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1488219
Creating Stats:
TotalCycles = 2803066
Stalls = 412031
NOPs = 0
IdleCycles = 0
DecodeStalls = 173384
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1497216
Creating Stats:
TotalCycles = 2810737
Stalls = 412123
NOPs = 0
IdleCycles = 0
DecodeStalls = 173476
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1505550
Creating Stats:
TotalCycles = 2818990
Stalls = 412334
NOPs = 0
IdleCycles = 0
DecodeStalls = 173687
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1514929
Creating Stats:
TotalCycles = 2826668
Stalls = 412682
NOPs = 0
IdleCycles = 0
DecodeStalls = 174035
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1523501
Creating Stats:
TotalCycles = 2830162
Stalls = 412681
NOPs = 0
IdleCycles = 0
DecodeStalls = 174034
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1527258
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][5][0] at cycle 562808
HALT operation received from [0][6][0] at cycle 575622
HALT operation received from [0][7][0] at cycle 575632
HALT operation received from [0][0][0] at cycle 575633
HALT operation received from [0][1][0] at cycle 575634
HALT operation received from [0][2][0] at cycle 575635
HALT operation received from [0][3][0] at cycle 575637
HALT operation received from [0][4][0] at cycle 575643
Simulation finished, cycleCount = 575644
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 575634
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141160
Creating Stats:
TotalCycles = 575635
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140962
Creating Stats:
TotalCycles = 575636
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141500
Creating Stats:
TotalCycles = 575638
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141620
Creating Stats:
TotalCycles = 575644
Stalls = 259225
NOPs = 0
IdleCycles = 0
DecodeStalls = 37369
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140907
Creating Stats:
TotalCycles = 562809
Stalls = 260379
NOPs = 0
IdleCycles = 0
DecodeStalls = 38523
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 127663
Creating Stats:
TotalCycles = 575623
Stalls = 259230
NOPs = 0
IdleCycles = 0
DecodeStalls = 37374
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140853
Creating Stats:
TotalCycles = 575633
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141161
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][4][0] at cycle 55
HALT operation received from [0][1][0] at cycle 66
HALT operation received from [0][2][0] at cycle 68
HALT operation received from [0][3][0] at cycle 69
HALT operation received from [0][5][0] at cycle 71
HALT operation received from [0][6][0] at cycle 73
HALT operation received from [0][7][0] at cycle 76
HALT operation received from [0][0][0] at cycle 974100
Simulation finished, cycleCount = 974101
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974101
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 40
Creating Stats:
TotalCycles = 67
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 46
Creating Stats:
TotalCycles = 69
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 70
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 49
Creating Stats:
TotalCycles = 56
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 41
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 74
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 53
Creating Stats:
TotalCycles = 77
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2775354
HALT operation received from [0][1][0] at cycle 2785237
HALT operation received from [0][2][0] at cycle 2794449
HALT operation received from [0][3][0] at cycle 2803065
HALT operation received from [0][4][0] at cycle 2810736
HALT operation received from [0][5][0] at cycle 2818989
HALT operation received from [0][6][0] at cycle 2826667
HALT operation received from [0][7][0] at cycle 2830161
Simulation finished, cycleCount = 2830162
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2775355
Stalls = 412005
NOPs = 0
IdleCycles = 0
DecodeStalls = 173358
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1469031
Creating Stats:
TotalCycles = 2785238
Stalls = 412007
NOPs = 0
IdleCycles = 0
DecodeStalls = 173360
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1478908
Creating Stats:
TotalCycles = 2794450
Stalls = 412014
NOPs = 0
IdleCycles = 0
DecodeStalls = 173367
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1488219
Creating Stats:
TotalCycles = 2803066
Stalls = 412031
NOPs = 0
IdleCycles = 0
DecodeStalls = 173384
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1497216
Creating Stats:
TotalCycles = 2810737
Stalls = 412123
NOPs = 0
IdleCycles = 0
DecodeStalls = 173476
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1505550
Creating Stats:
TotalCycles = 2818990
Stalls = 412334
NOPs = 0
IdleCycles = 0
DecodeStalls = 173687
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1514929
Creating Stats:
TotalCycles = 2826668
Stalls = 412682
NOPs = 0
IdleCycles = 0
DecodeStalls = 174035
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1523501
Creating Stats:
TotalCycles = 2830162
Stalls = 412681
NOPs = 0
IdleCycles = 0
DecodeStalls = 174034
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1527258
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][5][0] at cycle 562808
HALT operation received from [0][6][0] at cycle 575622
HALT operation received from [0][7][0] at cycle 575632
HALT operation received from [0][0][0] at cycle 575633
HALT operation received from [0][1][0] at cycle 575634
HALT operation received from [0][2][0] at cycle 575635
HALT operation received from [0][3][0] at cycle 575637
HALT operation received from [0][4][0] at cycle 575643
Simulation finished, cycleCount = 575644
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 575634
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141160
Creating Stats:
TotalCycles = 575635
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140962
Creating Stats:
TotalCycles = 575636
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141500
Creating Stats:
TotalCycles = 575638
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141620
Creating Stats:
TotalCycles = 575644
Stalls = 259225
NOPs = 0
IdleCycles = 0
DecodeStalls = 37369
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140907
Creating Stats:
TotalCycles = 562809
Stalls = 260379
NOPs = 0
IdleCycles = 0
DecodeStalls = 38523
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 127663
Creating Stats:
TotalCycles = 575623
Stalls = 259230
NOPs = 0
IdleCycles = 0
DecodeStalls = 37374
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140853
Creating Stats:
TotalCycles = 575633
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141161
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][4][0] at cycle 55
HALT operation received from [0][1][0] at cycle 66
HALT operation received from [0][2][0] at cycle 68
HALT operation received from [0][3][0] at cycle 69
HALT operation received from [0][5][0] at cycle 71
HALT operation received from [0][6][0] at cycle 73
HALT operation received from [0][7][0] at cycle 76
HALT operation received from [0][0][0] at cycle 974100
Simulation finished, cycleCount = 974101
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974101
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 40
Creating Stats:
TotalCycles = 67
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 46
Creating Stats:
TotalCycles = 69
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 70
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 49
Creating Stats:
TotalCycles = 56
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 41
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 74
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 53
Creating Stats:
TotalCycles = 77
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2775354
HALT operation received from [0][1][0] at cycle 2785237
HALT operation received from [0][2][0] at cycle 2794449
HALT operation received from [0][3][0] at cycle 2803065
HALT operation received from [0][4][0] at cycle 2810736
HALT operation received from [0][5][0] at cycle 2818989
HALT operation received from [0][6][0] at cycle 2826667
HALT operation received from [0][7][0] at cycle 2830161
Simulation finished, cycleCount = 2830162
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2775355
Stalls = 412005
NOPs = 0
IdleCycles = 0
DecodeStalls = 173358
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1469031
Creating Stats:
TotalCycles = 2785238
Stalls = 412007
NOPs = 0
IdleCycles = 0
DecodeStalls = 173360
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1478908
Creating Stats:
TotalCycles = 2794450
Stalls = 412014
NOPs = 0
IdleCycles = 0
DecodeStalls = 173367
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1488219
Creating Stats:
TotalCycles = 2803066
Stalls = 412031
NOPs = 0
IdleCycles = 0
DecodeStalls = 173384
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1497216
Creating Stats:
TotalCycles = 2810737
Stalls = 412123
NOPs = 0
IdleCycles = 0
DecodeStalls = 173476
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1505550
Creating Stats:
TotalCycles = 2818990
Stalls = 412334
NOPs = 0
IdleCycles = 0
DecodeStalls = 173687
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1514929
Creating Stats:
TotalCycles = 2826668
Stalls = 412682
NOPs = 0
IdleCycles = 0
DecodeStalls = 174035
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1523501
Creating Stats:
TotalCycles = 2830162
Stalls = 412681
NOPs = 0
IdleCycles = 0
DecodeStalls = 174034
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1527258
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][5][0] at cycle 562808
HALT operation received from [0][6][0] at cycle 575622
HALT operation received from [0][7][0] at cycle 575632
HALT operation received from [0][0][0] at cycle 575633
HALT operation received from [0][1][0] at cycle 575634
HALT operation received from [0][2][0] at cycle 575635
HALT operation received from [0][3][0] at cycle 575637
HALT operation received from [0][4][0] at cycle 575643
Simulation finished, cycleCount = 575644
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 575634
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141160
Creating Stats:
TotalCycles = 575635
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140962
Creating Stats:
TotalCycles = 575636
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141500
Creating Stats:
TotalCycles = 575638
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141620
Creating Stats:
TotalCycles = 575644
Stalls = 259225
NOPs = 0
IdleCycles = 0
DecodeStalls = 37369
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140907
Creating Stats:
TotalCycles = 562809
Stalls = 260379
NOPs = 0
IdleCycles = 0
DecodeStalls = 38523
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 127663
Creating Stats:
TotalCycles = 575623
Stalls = 259230
NOPs = 0
IdleCycles = 0
DecodeStalls = 37374
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140853
Creating Stats:
TotalCycles = 575633
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141161
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][4][0] at cycle 55
HALT operation received from [0][1][0] at cycle 66
HALT operation received from [0][2][0] at cycle 68
HALT operation received from [0][3][0] at cycle 69
HALT operation received from [0][5][0] at cycle 71
HALT operation received from [0][6][0] at cycle 73
HALT operation received from [0][7][0] at cycle 76
HALT operation received from [0][0][0] at cycle 974100
Simulation finished, cycleCount = 974101
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974101
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 40
Creating Stats:
TotalCycles = 67
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 46
Creating Stats:
TotalCycles = 69
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 70
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 49
Creating Stats:
TotalCycles = 56
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 41
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 74
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 53
Creating Stats:
TotalCycles = 77
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2775354
HALT operation received from [0][1][0] at cycle 2785237
HALT operation received from [0][2][0] at cycle 2794449
HALT operation received from [0][3][0] at cycle 2803065
HALT operation received from [0][4][0] at cycle 2810736
HALT operation received from [0][5][0] at cycle 2818989
HALT operation received from [0][6][0] at cycle 2826667
HALT operation received from [0][7][0] at cycle 2830161
Simulation finished, cycleCount = 2830162
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2775355
Stalls = 412005
NOPs = 0
IdleCycles = 0
DecodeStalls = 173358
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1469031
Creating Stats:
TotalCycles = 2785238
Stalls = 412007
NOPs = 0
IdleCycles = 0
DecodeStalls = 173360
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1478908
Creating Stats:
TotalCycles = 2794450
Stalls = 412014
NOPs = 0
IdleCycles = 0
DecodeStalls = 173367
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1488219
Creating Stats:
TotalCycles = 2803066
Stalls = 412031
NOPs = 0
IdleCycles = 0
DecodeStalls = 173384
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1497216
Creating Stats:
TotalCycles = 2810737
Stalls = 412123
NOPs = 0
IdleCycles = 0
DecodeStalls = 173476
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1505550
Creating Stats:
TotalCycles = 2818990
Stalls = 412334
NOPs = 0
IdleCycles = 0
DecodeStalls = 173687
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1514929
Creating Stats:
TotalCycles = 2826668
Stalls = 412682
NOPs = 0
IdleCycles = 0
DecodeStalls = 174035
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1523501
Creating Stats:
TotalCycles = 2830162
Stalls = 412681
NOPs = 0
IdleCycles = 0
DecodeStalls = 174034
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1527258
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][5][0] at cycle 562808
HALT operation received from [0][6][0] at cycle 575622
HALT operation received from [0][7][0] at cycle 575632
HALT operation received from [0][0][0] at cycle 575633
HALT operation received from [0][1][0] at cycle 575634
HALT operation received from [0][2][0] at cycle 575635
HALT operation received from [0][3][0] at cycle 575637
HALT operation received from [0][4][0] at cycle 575643
Simulation finished, cycleCount = 575644
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 575634
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141160
Creating Stats:
TotalCycles = 575635
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140962
Creating Stats:
TotalCycles = 575636
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141500
Creating Stats:
TotalCycles = 575638
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141620
Creating Stats:
TotalCycles = 575644
Stalls = 259225
NOPs = 0
IdleCycles = 0
DecodeStalls = 37369
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140907
Creating Stats:
TotalCycles = 562809
Stalls = 260379
NOPs = 0
IdleCycles = 0
DecodeStalls = 38523
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 127663
Creating Stats:
TotalCycles = 575623
Stalls = 259230
NOPs = 0
IdleCycles = 0
DecodeStalls = 37374
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 140853
Creating Stats:
TotalCycles = 575633
Stalls = 259222
NOPs = 0
IdleCycles = 0
DecodeStalls = 37366
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 141161
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][4][0] at cycle 55
HALT operation received from [0][1][0] at cycle 66
HALT operation received from [0][2][0] at cycle 68
HALT operation received from [0][3][0] at cycle 69
HALT operation received from [0][5][0] at cycle 71
HALT operation received from [0][6][0] at cycle 73
HALT operation received from [0][7][0] at cycle 76
HALT operation received from [0][0][0] at cycle 974100
Simulation finished, cycleCount = 974101
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974101
Stalls = 442260
NOPs = 0
IdleCycles = 0
DecodeStalls = 160260
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 40
Creating Stats:
TotalCycles = 67
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 46
Creating Stats:
TotalCycles = 69
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 48
Creating Stats:
TotalCycles = 70
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 49
Creating Stats:
TotalCycles = 56
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 41
Creating Stats:
TotalCycles = 72
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 51
Creating Stats:
TotalCycles = 74
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 53
Creating Stats:
TotalCycles = 77
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 54
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_1b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 2775354
HALT operation received from [0][1][0] at cycle 2785237
HALT operation received from [0][2][0] at cycle 2794449
HALT operation received from [0][3][0] at cycle 2803065
HALT operation received from [0][4][0] at cycle 2810736
HALT operation received from [0][5][0] at cycle 2818989
HALT operation received from [0][6][0] at cycle 2826667
HALT operation received from [0][7][0] at cycle 2830161
Simulation finished, cycleCount = 2830162
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 2775355
Stalls = 412005
NOPs = 0
IdleCycles = 0
DecodeStalls = 173358
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1469031
Creating Stats:
TotalCycles = 2785238
Stalls = 412007
NOPs = 0
IdleCycles = 0
DecodeStalls = 173360
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1478908
Creating Stats:
TotalCycles = 2794450
Stalls = 412014
NOPs = 0
IdleCycles = 0
DecodeStalls = 173367
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1488219
Creating Stats:
TotalCycles = 2803066
Stalls = 412031
NOPs = 0
IdleCycles = 0
DecodeStalls = 173384
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1497216
Creating Stats:
TotalCycles = 2810737
Stalls = 412123
NOPs = 0
IdleCycles = 0
DecodeStalls = 173476
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1505550
Creating Stats:
TotalCycles = 2818990
Stalls = 412334
NOPs = 0
IdleCycles = 0
DecodeStalls = 173687
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1514929
Creating Stats:
TotalCycles = 2826668
Stalls = 412682
NOPs = 0
IdleCycles = 0
DecodeStalls = 174035
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1523501
Creating Stats:
TotalCycles = 2830162
Stalls = 412681
NOPs = 0
IdleCycles = 0
DecodeStalls = 174034
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 1527258
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1148
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 421444
HALT operation received from [0][1][0] at cycle 422802
HALT operation received from [0][2][0] at cycle 426095
HALT operation received from [0][3][0] at cycle 429552
HALT operation received from [0][4][0] at cycle 433474
HALT operation received from [0][5][0] at cycle 438247
HALT operation received from [0][6][0] at cycle 443868
HALT operation received from [0][7][0] at cycle 448769
Simulation finished, cycleCount = 448770
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 421445
Stalls = 233090
NOPs = 0
IdleCycles = 0
DecodeStalls = 11234
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34676
Creating Stats:
TotalCycles = 422803
Stalls = 232478
NOPs = 0
IdleCycles = 0
DecodeStalls = 10622
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 36130
Creating Stats:
TotalCycles = 426096
Stalls = 232300
NOPs = 0
IdleCycles = 0
DecodeStalls = 10444
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 38027
Creating Stats:
TotalCycles = 429553
Stalls = 232327
NOPs = 0
IdleCycles = 0
DecodeStalls = 10471
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 39991
Creating Stats:
TotalCycles = 433475
Stalls = 232230
NOPs = 0
IdleCycles = 0
DecodeStalls = 10374
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42469
Creating Stats:
TotalCycles = 438248
Stalls = 232173
NOPs = 0
IdleCycles = 0
DecodeStalls = 10317
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 45253
Creating Stats:
TotalCycles = 443869
Stalls = 231994
NOPs = 0
IdleCycles = 0
DecodeStalls = 10138
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 48660
Creating Stats:
TotalCycles = 448770
Stalls = 231753
NOPs = 0
IdleCycles = 0
DecodeStalls = 9897
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 51446
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][3][0] at cycle 37
HALT operation received from [0][4][0] at cycle 39
HALT operation received from [0][5][0] at cycle 40
HALT operation received from [0][6][0] at cycle 41
HALT operation received from [0][7][0] at cycle 42
HALT operation received from [0][1][0] at cycle 43
HALT operation received from [0][2][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974067
Simulation finished, cycleCount = 974068
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974068
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 11
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 45
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 38
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 19
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 21
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 21
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2668
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1464193
HALT operation received from [0][1][0] at cycle 1475485
HALT operation received from [0][2][0] at cycle 1494816
HALT operation received from [0][3][0] at cycle 1517469
HALT operation received from [0][4][0] at cycle 1538104
HALT operation received from [0][5][0] at cycle 1553000
HALT operation received from [0][6][0] at cycle 1571205
HALT operation received from [0][7][0] at cycle 1578599
Simulation finished, cycleCount = 1578600
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1464194
Stalls = 326802
NOPs = 0
IdleCycles = 0
DecodeStalls = 88155
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 362018
Creating Stats:
TotalCycles = 1475486
Stalls = 329173
NOPs = 0
IdleCycles = 0
DecodeStalls = 90526
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 371984
Creating Stats:
TotalCycles = 1494817
Stalls = 330227
NOPs = 0
IdleCycles = 0
DecodeStalls = 91580
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 385231
Creating Stats:
TotalCycles = 1517470
Stalls = 331175
NOPs = 0
IdleCycles = 0
DecodeStalls = 92528
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 401123
Creating Stats:
TotalCycles = 1538105
Stalls = 330870
NOPs = 0
IdleCycles = 0
DecodeStalls = 92223
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 415573
Creating Stats:
TotalCycles = 1553001
Stalls = 330783
NOPs = 0
IdleCycles = 0
DecodeStalls = 92136
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 426459
Creating Stats:
TotalCycles = 1571206
Stalls = 329008
NOPs = 0
IdleCycles = 0
DecodeStalls = 90361
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440491
Creating Stats:
TotalCycles = 1578600
Stalls = 326101
NOPs = 0
IdleCycles = 0
DecodeStalls = 87454
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 445363
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 437723
HALT operation received from [0][1][0] at cycle 440268
HALT operation received from [0][2][0] at cycle 444448
HALT operation received from [0][3][0] at cycle 448205
HALT operation received from [0][4][0] at cycle 451813
HALT operation received from [0][5][0] at cycle 455034
HALT operation received from [0][6][0] at cycle 459174
HALT operation received from [0][7][0] at cycle 462089
Simulation finished, cycleCount = 462090
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 437724
Stalls = 261711
NOPs = 0
IdleCycles = 0
DecodeStalls = 39855
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 28343
Creating Stats:
TotalCycles = 440269
Stalls = 261518
NOPs = 0
IdleCycles = 0
DecodeStalls = 39662
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 29939
Creating Stats:
TotalCycles = 444449
Stalls = 261507
NOPs = 0
IdleCycles = 0
DecodeStalls = 39651
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 32520
Creating Stats:
TotalCycles = 448206
Stalls = 261207
NOPs = 0
IdleCycles = 0
DecodeStalls = 39351
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34859
Creating Stats:
TotalCycles = 451814
Stalls = 261125
NOPs = 0
IdleCycles = 0
DecodeStalls = 39269
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 36781
Creating Stats:
TotalCycles = 455035
Stalls = 260994
NOPs = 0
IdleCycles = 0
DecodeStalls = 39138
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 38943
Creating Stats:
TotalCycles = 459175
Stalls = 260898
NOPs = 0
IdleCycles = 0
DecodeStalls = 39042
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 41141
Creating Stats:
TotalCycles = 462090
Stalls = 260718
NOPs = 0
IdleCycles = 0
DecodeStalls = 38862
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42789
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 36
HALT operation received from [0][3][0] at cycle 39
HALT operation received from [0][4][0] at cycle 40
HALT operation received from [0][5][0] at cycle 41
HALT operation received from [0][6][0] at cycle 42
HALT operation received from [0][7][0] at cycle 43
HALT operation received from [0][2][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974066
Simulation finished, cycleCount = 974067
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974067
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 11
Creating Stats:
TotalCycles = 37
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 18
Creating Stats:
TotalCycles = 45
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 40
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 21
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 24
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1563592
HALT operation received from [0][1][0] at cycle 1568664
HALT operation received from [0][2][0] at cycle 1591699
HALT operation received from [0][3][0] at cycle 1611270
HALT operation received from [0][4][0] at cycle 1632294
HALT operation received from [0][5][0] at cycle 1648712
HALT operation received from [0][6][0] at cycle 1665801
HALT operation received from [0][7][0] at cycle 1679604
Simulation finished, cycleCount = 1679605
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1563593
Stalls = 458145
NOPs = 0
IdleCycles = 0
DecodeStalls = 219498
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 348783
Creating Stats:
TotalCycles = 1568665
Stalls = 455304
NOPs = 0
IdleCycles = 0
DecodeStalls = 216657
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 357159
Creating Stats:
TotalCycles = 1591700
Stalls = 450670
NOPs = 0
IdleCycles = 0
DecodeStalls = 212023
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 376368
Creating Stats:
TotalCycles = 1611271
Stalls = 447661
NOPs = 0
IdleCycles = 0
DecodeStalls = 209014
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 392163
Creating Stats:
TotalCycles = 1632295
Stalls = 444248
NOPs = 0
IdleCycles = 0
DecodeStalls = 205601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 409381
Creating Stats:
TotalCycles = 1648713
Stalls = 442765
NOPs = 0
IdleCycles = 0
DecodeStalls = 204118
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 421390
Creating Stats:
TotalCycles = 1665802
Stalls = 441673
NOPs = 0
IdleCycles = 0
DecodeStalls = 203026
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 434256
Creating Stats:
TotalCycles = 1679605
Stalls = 443586
NOPs = 0
IdleCycles = 0
DecodeStalls = 204939
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440125
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 438547
HALT operation received from [0][1][0] at cycle 440653
HALT operation received from [0][2][0] at cycle 445052
HALT operation received from [0][3][0] at cycle 448768
HALT operation received from [0][4][0] at cycle 452164
HALT operation received from [0][5][0] at cycle 456012
HALT operation received from [0][6][0] at cycle 458933
HALT operation received from [0][7][0] at cycle 461840
Simulation finished, cycleCount = 461841
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 438548
Stalls = 261617
NOPs = 0
IdleCycles = 0
DecodeStalls = 39761
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 28628
Creating Stats:
TotalCycles = 440654
Stalls = 261381
NOPs = 0
IdleCycles = 0
DecodeStalls = 39525
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 30115
Creating Stats:
TotalCycles = 445053
Stalls = 261427
NOPs = 0
IdleCycles = 0
DecodeStalls = 39571
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 32826
Creating Stats:
TotalCycles = 448769
Stalls = 261297
NOPs = 0
IdleCycles = 0
DecodeStalls = 39441
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34851
Creating Stats:
TotalCycles = 452165
Stalls = 260973
NOPs = 0
IdleCycles = 0
DecodeStalls = 39117
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 37142
Creating Stats:
TotalCycles = 456013
Stalls = 260918
NOPs = 0
IdleCycles = 0
DecodeStalls = 39062
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 39315
Creating Stats:
TotalCycles = 458934
Stalls = 260834
NOPs = 0
IdleCycles = 0
DecodeStalls = 38978
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 40983
Creating Stats:
TotalCycles = 461841
Stalls = 260699
NOPs = 0
IdleCycles = 0
DecodeStalls = 38843
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42684
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 35
HALT operation received from [0][2][0] at cycle 38
HALT operation received from [0][3][0] at cycle 40
HALT operation received from [0][4][0] at cycle 41
HALT operation received from [0][5][0] at cycle 42
HALT operation received from [0][6][0] at cycle 43
HALT operation received from [0][7][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974067
Simulation finished, cycleCount = 974068
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974068
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 18
Creating Stats:
TotalCycles = 39
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 20
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 24
Creating Stats:
TotalCycles = 45
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 25
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1563592
HALT operation received from [0][1][0] at cycle 1568664
HALT operation received from [0][2][0] at cycle 1591699
HALT operation received from [0][3][0] at cycle 1611270
HALT operation received from [0][4][0] at cycle 1632294
HALT operation received from [0][5][0] at cycle 1648712
HALT operation received from [0][6][0] at cycle 1665801
HALT operation received from [0][7][0] at cycle 1679604
Simulation finished, cycleCount = 1679605
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1563593
Stalls = 458145
NOPs = 0
IdleCycles = 0
DecodeStalls = 219498
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 348783
Creating Stats:
TotalCycles = 1568665
Stalls = 455304
NOPs = 0
IdleCycles = 0
DecodeStalls = 216657
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 357159
Creating Stats:
TotalCycles = 1591700
Stalls = 450670
NOPs = 0
IdleCycles = 0
DecodeStalls = 212023
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 376368
Creating Stats:
TotalCycles = 1611271
Stalls = 447661
NOPs = 0
IdleCycles = 0
DecodeStalls = 209014
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 392163
Creating Stats:
TotalCycles = 1632295
Stalls = 444248
NOPs = 0
IdleCycles = 0
DecodeStalls = 205601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 409381
Creating Stats:
TotalCycles = 1648713
Stalls = 442765
NOPs = 0
IdleCycles = 0
DecodeStalls = 204118
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 421390
Creating Stats:
TotalCycles = 1665802
Stalls = 441673
NOPs = 0
IdleCycles = 0
DecodeStalls = 203026
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 434256
Creating Stats:
TotalCycles = 1679605
Stalls = 443586
NOPs = 0
IdleCycles = 0
DecodeStalls = 204939
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440125
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 438547
HALT operation received from [0][1][0] at cycle 440653
HALT operation received from [0][2][0] at cycle 445052
HALT operation received from [0][3][0] at cycle 448768
HALT operation received from [0][4][0] at cycle 452164
HALT operation received from [0][5][0] at cycle 456012
HALT operation received from [0][6][0] at cycle 458933
HALT operation received from [0][7][0] at cycle 461840
Simulation finished, cycleCount = 461841
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 438548
Stalls = 261617
NOPs = 0
IdleCycles = 0
DecodeStalls = 39761
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 28628
Creating Stats:
TotalCycles = 440654
Stalls = 261381
NOPs = 0
IdleCycles = 0
DecodeStalls = 39525
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 30115
Creating Stats:
TotalCycles = 445053
Stalls = 261427
NOPs = 0
IdleCycles = 0
DecodeStalls = 39571
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 32826
Creating Stats:
TotalCycles = 448769
Stalls = 261297
NOPs = 0
IdleCycles = 0
DecodeStalls = 39441
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34851
Creating Stats:
TotalCycles = 452165
Stalls = 260973
NOPs = 0
IdleCycles = 0
DecodeStalls = 39117
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 37142
Creating Stats:
TotalCycles = 456013
Stalls = 260918
NOPs = 0
IdleCycles = 0
DecodeStalls = 39062
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 39315
Creating Stats:
TotalCycles = 458934
Stalls = 260834
NOPs = 0
IdleCycles = 0
DecodeStalls = 38978
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 40983
Creating Stats:
TotalCycles = 461841
Stalls = 260699
NOPs = 0
IdleCycles = 0
DecodeStalls = 38843
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42684
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 35
HALT operation received from [0][2][0] at cycle 38
HALT operation received from [0][3][0] at cycle 40
HALT operation received from [0][4][0] at cycle 41
HALT operation received from [0][5][0] at cycle 42
HALT operation received from [0][6][0] at cycle 43
HALT operation received from [0][7][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974067
Simulation finished, cycleCount = 974068
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974068
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 18
Creating Stats:
TotalCycles = 39
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 20
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 24
Creating Stats:
TotalCycles = 45
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 25
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1563592
HALT operation received from [0][1][0] at cycle 1568664
HALT operation received from [0][2][0] at cycle 1591699
HALT operation received from [0][3][0] at cycle 1611270
HALT operation received from [0][4][0] at cycle 1632294
HALT operation received from [0][5][0] at cycle 1648712
HALT operation received from [0][6][0] at cycle 1665801
HALT operation received from [0][7][0] at cycle 1679604
Simulation finished, cycleCount = 1679605
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1563593
Stalls = 458145
NOPs = 0
IdleCycles = 0
DecodeStalls = 219498
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 348783
Creating Stats:
TotalCycles = 1568665
Stalls = 455304
NOPs = 0
IdleCycles = 0
DecodeStalls = 216657
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 357159
Creating Stats:
TotalCycles = 1591700
Stalls = 450670
NOPs = 0
IdleCycles = 0
DecodeStalls = 212023
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 376368
Creating Stats:
TotalCycles = 1611271
Stalls = 447661
NOPs = 0
IdleCycles = 0
DecodeStalls = 209014
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 392163
Creating Stats:
TotalCycles = 1632295
Stalls = 444248
NOPs = 0
IdleCycles = 0
DecodeStalls = 205601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 409381
Creating Stats:
TotalCycles = 1648713
Stalls = 442765
NOPs = 0
IdleCycles = 0
DecodeStalls = 204118
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 421390
Creating Stats:
TotalCycles = 1665802
Stalls = 441673
NOPs = 0
IdleCycles = 0
DecodeStalls = 203026
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 434256
Creating Stats:
TotalCycles = 1679605
Stalls = 443586
NOPs = 0
IdleCycles = 0
DecodeStalls = 204939
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440125
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 438547
HALT operation received from [0][1][0] at cycle 440653
HALT operation received from [0][2][0] at cycle 445052
HALT operation received from [0][3][0] at cycle 448768
HALT operation received from [0][4][0] at cycle 452164
HALT operation received from [0][5][0] at cycle 456012
HALT operation received from [0][6][0] at cycle 458933
HALT operation received from [0][7][0] at cycle 461840
Simulation finished, cycleCount = 461841
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 438548
Stalls = 261617
NOPs = 0
IdleCycles = 0
DecodeStalls = 39761
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 28628
Creating Stats:
TotalCycles = 440654
Stalls = 261381
NOPs = 0
IdleCycles = 0
DecodeStalls = 39525
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 30115
Creating Stats:
TotalCycles = 445053
Stalls = 261427
NOPs = 0
IdleCycles = 0
DecodeStalls = 39571
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 32826
Creating Stats:
TotalCycles = 448769
Stalls = 261297
NOPs = 0
IdleCycles = 0
DecodeStalls = 39441
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34851
Creating Stats:
TotalCycles = 452165
Stalls = 260973
NOPs = 0
IdleCycles = 0
DecodeStalls = 39117
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 37142
Creating Stats:
TotalCycles = 456013
Stalls = 260918
NOPs = 0
IdleCycles = 0
DecodeStalls = 39062
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 39315
Creating Stats:
TotalCycles = 458934
Stalls = 260834
NOPs = 0
IdleCycles = 0
DecodeStalls = 38978
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 40983
Creating Stats:
TotalCycles = 461841
Stalls = 260699
NOPs = 0
IdleCycles = 0
DecodeStalls = 38843
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42684
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 35
HALT operation received from [0][2][0] at cycle 38
HALT operation received from [0][3][0] at cycle 40
HALT operation received from [0][4][0] at cycle 41
HALT operation received from [0][5][0] at cycle 42
HALT operation received from [0][6][0] at cycle 43
HALT operation received from [0][7][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974067
Simulation finished, cycleCount = 974068
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974068
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 18
Creating Stats:
TotalCycles = 39
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 20
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 24
Creating Stats:
TotalCycles = 45
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 25
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1563592
HALT operation received from [0][1][0] at cycle 1568664
HALT operation received from [0][2][0] at cycle 1591699
HALT operation received from [0][3][0] at cycle 1611270
HALT operation received from [0][4][0] at cycle 1632294
HALT operation received from [0][5][0] at cycle 1648712
HALT operation received from [0][6][0] at cycle 1665801
HALT operation received from [0][7][0] at cycle 1679604
Simulation finished, cycleCount = 1679605
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1563593
Stalls = 458145
NOPs = 0
IdleCycles = 0
DecodeStalls = 219498
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 348783
Creating Stats:
TotalCycles = 1568665
Stalls = 455304
NOPs = 0
IdleCycles = 0
DecodeStalls = 216657
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 357159
Creating Stats:
TotalCycles = 1591700
Stalls = 450670
NOPs = 0
IdleCycles = 0
DecodeStalls = 212023
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 376368
Creating Stats:
TotalCycles = 1611271
Stalls = 447661
NOPs = 0
IdleCycles = 0
DecodeStalls = 209014
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 392163
Creating Stats:
TotalCycles = 1632295
Stalls = 444248
NOPs = 0
IdleCycles = 0
DecodeStalls = 205601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 409381
Creating Stats:
TotalCycles = 1648713
Stalls = 442765
NOPs = 0
IdleCycles = 0
DecodeStalls = 204118
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 421390
Creating Stats:
TotalCycles = 1665802
Stalls = 441673
NOPs = 0
IdleCycles = 0
DecodeStalls = 203026
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 434256
Creating Stats:
TotalCycles = 1679605
Stalls = 443586
NOPs = 0
IdleCycles = 0
DecodeStalls = 204939
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440125
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 438547
HALT operation received from [0][1][0] at cycle 440653
HALT operation received from [0][2][0] at cycle 445052
HALT operation received from [0][3][0] at cycle 448768
HALT operation received from [0][4][0] at cycle 452164
HALT operation received from [0][5][0] at cycle 456012
HALT operation received from [0][6][0] at cycle 458933
HALT operation received from [0][7][0] at cycle 461840
Simulation finished, cycleCount = 461841
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 438548
Stalls = 261617
NOPs = 0
IdleCycles = 0
DecodeStalls = 39761
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 28628
Creating Stats:
TotalCycles = 440654
Stalls = 261381
NOPs = 0
IdleCycles = 0
DecodeStalls = 39525
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 30115
Creating Stats:
TotalCycles = 445053
Stalls = 261427
NOPs = 0
IdleCycles = 0
DecodeStalls = 39571
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 32826
Creating Stats:
TotalCycles = 448769
Stalls = 261297
NOPs = 0
IdleCycles = 0
DecodeStalls = 39441
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34851
Creating Stats:
TotalCycles = 452165
Stalls = 260973
NOPs = 0
IdleCycles = 0
DecodeStalls = 39117
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 37142
Creating Stats:
TotalCycles = 456013
Stalls = 260918
NOPs = 0
IdleCycles = 0
DecodeStalls = 39062
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 39315
Creating Stats:
TotalCycles = 458934
Stalls = 260834
NOPs = 0
IdleCycles = 0
DecodeStalls = 38978
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 40983
Creating Stats:
TotalCycles = 461841
Stalls = 260699
NOPs = 0
IdleCycles = 0
DecodeStalls = 38843
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42684
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 35
HALT operation received from [0][2][0] at cycle 38
HALT operation received from [0][3][0] at cycle 40
HALT operation received from [0][4][0] at cycle 41
HALT operation received from [0][5][0] at cycle 42
HALT operation received from [0][6][0] at cycle 43
HALT operation received from [0][7][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974067
Simulation finished, cycleCount = 974068
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974068
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 18
Creating Stats:
TotalCycles = 39
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 20
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 24
Creating Stats:
TotalCycles = 45
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 25
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1563592
HALT operation received from [0][1][0] at cycle 1568664
HALT operation received from [0][2][0] at cycle 1591699
HALT operation received from [0][3][0] at cycle 1611270
HALT operation received from [0][4][0] at cycle 1632294
HALT operation received from [0][5][0] at cycle 1648712
HALT operation received from [0][6][0] at cycle 1665801
HALT operation received from [0][7][0] at cycle 1679604
Simulation finished, cycleCount = 1679605
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1563593
Stalls = 458145
NOPs = 0
IdleCycles = 0
DecodeStalls = 219498
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 348783
Creating Stats:
TotalCycles = 1568665
Stalls = 455304
NOPs = 0
IdleCycles = 0
DecodeStalls = 216657
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 357159
Creating Stats:
TotalCycles = 1591700
Stalls = 450670
NOPs = 0
IdleCycles = 0
DecodeStalls = 212023
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 376368
Creating Stats:
TotalCycles = 1611271
Stalls = 447661
NOPs = 0
IdleCycles = 0
DecodeStalls = 209014
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 392163
Creating Stats:
TotalCycles = 1632295
Stalls = 444248
NOPs = 0
IdleCycles = 0
DecodeStalls = 205601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 409381
Creating Stats:
TotalCycles = 1648713
Stalls = 442765
NOPs = 0
IdleCycles = 0
DecodeStalls = 204118
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 421390
Creating Stats:
TotalCycles = 1665802
Stalls = 441673
NOPs = 0
IdleCycles = 0
DecodeStalls = 203026
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 434256
Creating Stats:
TotalCycles = 1679605
Stalls = 443586
NOPs = 0
IdleCycles = 0
DecodeStalls = 204939
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440125
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 438547
HALT operation received from [0][1][0] at cycle 440653
HALT operation received from [0][2][0] at cycle 445052
HALT operation received from [0][3][0] at cycle 448768
HALT operation received from [0][4][0] at cycle 452164
HALT operation received from [0][5][0] at cycle 456012
HALT operation received from [0][6][0] at cycle 458933
HALT operation received from [0][7][0] at cycle 461840
Simulation finished, cycleCount = 461841
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 438548
Stalls = 261617
NOPs = 0
IdleCycles = 0
DecodeStalls = 39761
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 28628
Creating Stats:
TotalCycles = 440654
Stalls = 261381
NOPs = 0
IdleCycles = 0
DecodeStalls = 39525
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 30115
Creating Stats:
TotalCycles = 445053
Stalls = 261427
NOPs = 0
IdleCycles = 0
DecodeStalls = 39571
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 32826
Creating Stats:
TotalCycles = 448769
Stalls = 261297
NOPs = 0
IdleCycles = 0
DecodeStalls = 39441
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34851
Creating Stats:
TotalCycles = 452165
Stalls = 260973
NOPs = 0
IdleCycles = 0
DecodeStalls = 39117
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 37142
Creating Stats:
TotalCycles = 456013
Stalls = 260918
NOPs = 0
IdleCycles = 0
DecodeStalls = 39062
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 39315
Creating Stats:
TotalCycles = 458934
Stalls = 260834
NOPs = 0
IdleCycles = 0
DecodeStalls = 38978
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 40983
Creating Stats:
TotalCycles = 461841
Stalls = 260699
NOPs = 0
IdleCycles = 0
DecodeStalls = 38843
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42684
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 35
HALT operation received from [0][2][0] at cycle 38
HALT operation received from [0][3][0] at cycle 40
HALT operation received from [0][4][0] at cycle 41
HALT operation received from [0][5][0] at cycle 42
HALT operation received from [0][6][0] at cycle 43
HALT operation received from [0][7][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974067
Simulation finished, cycleCount = 974068
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974068
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 18
Creating Stats:
TotalCycles = 39
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 20
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 24
Creating Stats:
TotalCycles = 45
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 25
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1563592
HALT operation received from [0][1][0] at cycle 1568664
HALT operation received from [0][2][0] at cycle 1591699
HALT operation received from [0][3][0] at cycle 1611270
HALT operation received from [0][4][0] at cycle 1632294
HALT operation received from [0][5][0] at cycle 1648712
HALT operation received from [0][6][0] at cycle 1665801
HALT operation received from [0][7][0] at cycle 1679604
Simulation finished, cycleCount = 1679605
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1563593
Stalls = 458145
NOPs = 0
IdleCycles = 0
DecodeStalls = 219498
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 348783
Creating Stats:
TotalCycles = 1568665
Stalls = 455304
NOPs = 0
IdleCycles = 0
DecodeStalls = 216657
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 357159
Creating Stats:
TotalCycles = 1591700
Stalls = 450670
NOPs = 0
IdleCycles = 0
DecodeStalls = 212023
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 376368
Creating Stats:
TotalCycles = 1611271
Stalls = 447661
NOPs = 0
IdleCycles = 0
DecodeStalls = 209014
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 392163
Creating Stats:
TotalCycles = 1632295
Stalls = 444248
NOPs = 0
IdleCycles = 0
DecodeStalls = 205601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 409381
Creating Stats:
TotalCycles = 1648713
Stalls = 442765
NOPs = 0
IdleCycles = 0
DecodeStalls = 204118
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 421390
Creating Stats:
TotalCycles = 1665802
Stalls = 441673
NOPs = 0
IdleCycles = 0
DecodeStalls = 203026
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 434256
Creating Stats:
TotalCycles = 1679605
Stalls = 443586
NOPs = 0
IdleCycles = 0
DecodeStalls = 204939
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440125
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 438547
HALT operation received from [0][1][0] at cycle 440653
HALT operation received from [0][2][0] at cycle 445052
HALT operation received from [0][3][0] at cycle 448768
HALT operation received from [0][4][0] at cycle 452164
HALT operation received from [0][5][0] at cycle 456012
HALT operation received from [0][6][0] at cycle 458933
HALT operation received from [0][7][0] at cycle 461840
Simulation finished, cycleCount = 461841
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 438548
Stalls = 261617
NOPs = 0
IdleCycles = 0
DecodeStalls = 39761
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 28628
Creating Stats:
TotalCycles = 440654
Stalls = 261381
NOPs = 0
IdleCycles = 0
DecodeStalls = 39525
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 30115
Creating Stats:
TotalCycles = 445053
Stalls = 261427
NOPs = 0
IdleCycles = 0
DecodeStalls = 39571
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 32826
Creating Stats:
TotalCycles = 448769
Stalls = 261297
NOPs = 0
IdleCycles = 0
DecodeStalls = 39441
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 34851
Creating Stats:
TotalCycles = 452165
Stalls = 260973
NOPs = 0
IdleCycles = 0
DecodeStalls = 39117
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 37142
Creating Stats:
TotalCycles = 456013
Stalls = 260918
NOPs = 0
IdleCycles = 0
DecodeStalls = 39062
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 39315
Creating Stats:
TotalCycles = 458934
Stalls = 260834
NOPs = 0
IdleCycles = 0
DecodeStalls = 38978
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 40983
Creating Stats:
TotalCycles = 461841
Stalls = 260699
NOPs = 0
IdleCycles = 0
DecodeStalls = 38843
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 42684
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 35
HALT operation received from [0][2][0] at cycle 38
HALT operation received from [0][3][0] at cycle 40
HALT operation received from [0][4][0] at cycle 41
HALT operation received from [0][5][0] at cycle 42
HALT operation received from [0][6][0] at cycle 43
HALT operation received from [0][7][0] at cycle 44
HALT operation received from [0][0][0] at cycle 974067
Simulation finished, cycleCount = 974068
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974068
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 36
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 18
Creating Stats:
TotalCycles = 39
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 20
Creating Stats:
TotalCycles = 41
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 22
Creating Stats:
TotalCycles = 42
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 43
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 23
Creating Stats:
TotalCycles = 44
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 24
Creating Stats:
TotalCycles = 45
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 25
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_2b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1563592
HALT operation received from [0][1][0] at cycle 1568664
HALT operation received from [0][2][0] at cycle 1591699
HALT operation received from [0][3][0] at cycle 1611270
HALT operation received from [0][4][0] at cycle 1632294
HALT operation received from [0][5][0] at cycle 1648712
HALT operation received from [0][6][0] at cycle 1665801
HALT operation received from [0][7][0] at cycle 1679604
Simulation finished, cycleCount = 1679605
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1563593
Stalls = 458145
NOPs = 0
IdleCycles = 0
DecodeStalls = 219498
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 348783
Creating Stats:
TotalCycles = 1568665
Stalls = 455304
NOPs = 0
IdleCycles = 0
DecodeStalls = 216657
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 357159
Creating Stats:
TotalCycles = 1591700
Stalls = 450670
NOPs = 0
IdleCycles = 0
DecodeStalls = 212023
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 376368
Creating Stats:
TotalCycles = 1611271
Stalls = 447661
NOPs = 0
IdleCycles = 0
DecodeStalls = 209014
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 392163
Creating Stats:
TotalCycles = 1632295
Stalls = 444248
NOPs = 0
IdleCycles = 0
DecodeStalls = 205601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 409381
Creating Stats:
TotalCycles = 1648713
Stalls = 442765
NOPs = 0
IdleCycles = 0
DecodeStalls = 204118
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 421390
Creating Stats:
TotalCycles = 1665802
Stalls = 441673
NOPs = 0
IdleCycles = 0
DecodeStalls = 203026
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 434256
Creating Stats:
TotalCycles = 1679605
Stalls = 443586
NOPs = 0
IdleCycles = 0
DecodeStalls = 204939
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 440125
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1148
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 388500
HALT operation received from [0][1][0] at cycle 390384
HALT operation received from [0][2][0] at cycle 393083
HALT operation received from [0][3][0] at cycle 395328
HALT operation received from [0][4][0] at cycle 398511
HALT operation received from [0][5][0] at cycle 402268
HALT operation received from [0][6][0] at cycle 407281
HALT operation received from [0][7][0] at cycle 410748
Simulation finished, cycleCount = 410749
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 388501
Stalls = 233573
NOPs = 0
IdleCycles = 0
DecodeStalls = 11717
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 13496
Creating Stats:
TotalCycles = 390385
Stalls = 233238
NOPs = 0
IdleCycles = 0
DecodeStalls = 11382
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14698
Creating Stats:
TotalCycles = 393084
Stalls = 232993
NOPs = 0
IdleCycles = 0
DecodeStalls = 11137
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16225
Creating Stats:
TotalCycles = 395329
Stalls = 232942
NOPs = 0
IdleCycles = 0
DecodeStalls = 11086
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17456
Creating Stats:
TotalCycles = 398512
Stalls = 232951
NOPs = 0
IdleCycles = 0
DecodeStalls = 11095
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 19271
Creating Stats:
TotalCycles = 402269
Stalls = 232859
NOPs = 0
IdleCycles = 0
DecodeStalls = 11003
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 21401
Creating Stats:
TotalCycles = 407282
Stalls = 232778
NOPs = 0
IdleCycles = 0
DecodeStalls = 10922
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 24104
Creating Stats:
TotalCycles = 410749
Stalls = 232774
NOPs = 0
IdleCycles = 0
DecodeStalls = 10918
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 25955
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2668
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1136402
HALT operation received from [0][1][0] at cycle 1151675
HALT operation received from [0][2][0] at cycle 1169723
HALT operation received from [0][3][0] at cycle 1187812
HALT operation received from [0][4][0] at cycle 1203921
HALT operation received from [0][5][0] at cycle 1219228
HALT operation received from [0][6][0] at cycle 1236437
HALT operation received from [0][7][0] at cycle 1246575
Simulation finished, cycleCount = 1246576
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1136403
Stalls = 335692
NOPs = 0
IdleCycles = 0
DecodeStalls = 97045
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 143444
Creating Stats:
TotalCycles = 1151676
Stalls = 341340
NOPs = 0
IdleCycles = 0
DecodeStalls = 102693
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 152489
Creating Stats:
TotalCycles = 1169724
Stalls = 343552
NOPs = 0
IdleCycles = 0
DecodeStalls = 104905
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 160975
Creating Stats:
TotalCycles = 1187813
Stalls = 343052
NOPs = 0
IdleCycles = 0
DecodeStalls = 104405
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 170808
Creating Stats:
TotalCycles = 1203922
Stalls = 343823
NOPs = 0
IdleCycles = 0
DecodeStalls = 105176
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 179892
Creating Stats:
TotalCycles = 1219229
Stalls = 344083
NOPs = 0
IdleCycles = 0
DecodeStalls = 105436
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 187382
Creating Stats:
TotalCycles = 1236438
Stalls = 342776
NOPs = 0
IdleCycles = 0
DecodeStalls = 104129
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 198250
Creating Stats:
TotalCycles = 1246576
Stalls = 337215
NOPs = 0
IdleCycles = 0
DecodeStalls = 98568
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 206828
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 409830
HALT operation received from [0][1][0] at cycle 410960
HALT operation received from [0][2][0] at cycle 414696
HALT operation received from [0][3][0] at cycle 418437
HALT operation received from [0][4][0] at cycle 420629
HALT operation received from [0][5][0] at cycle 422560
HALT operation received from [0][6][0] at cycle 424932
HALT operation received from [0][7][0] at cycle 426624
Simulation finished, cycleCount = 426625
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 409831
Stalls = 262665
NOPs = 0
IdleCycles = 0
DecodeStalls = 40809
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9172
Creating Stats:
TotalCycles = 410961
Stalls = 262537
NOPs = 0
IdleCycles = 0
DecodeStalls = 40681
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9866
Creating Stats:
TotalCycles = 414697
Stalls = 262340
NOPs = 0
IdleCycles = 0
DecodeStalls = 40484
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 11977
Creating Stats:
TotalCycles = 418438
Stalls = 262187
NOPs = 0
IdleCycles = 0
DecodeStalls = 40331
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14089
Creating Stats:
TotalCycles = 420630
Stalls = 261936
NOPs = 0
IdleCycles = 0
DecodeStalls = 40080
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 15415
Creating Stats:
TotalCycles = 422561
Stalls = 261858
NOPs = 0
IdleCycles = 0
DecodeStalls = 40002
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16551
Creating Stats:
TotalCycles = 424933
Stalls = 261908
NOPs = 0
IdleCycles = 0
DecodeStalls = 40052
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17704
Creating Stats:
TotalCycles = 426625
Stalls = 261736
NOPs = 0
IdleCycles = 0
DecodeStalls = 39880
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 18719
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1288113
HALT operation received from [0][1][0] at cycle 1291766
HALT operation received from [0][2][0] at cycle 1307630
HALT operation received from [0][3][0] at cycle 1322809
HALT operation received from [0][4][0] at cycle 1341410
HALT operation received from [0][5][0] at cycle 1363193
HALT operation received from [0][6][0] at cycle 1386228
HALT operation received from [0][7][0] at cycle 1406923
Simulation finished, cycleCount = 1406924
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1288114
Stalls = 494078
NOPs = 0
IdleCycles = 0
DecodeStalls = 255431
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 145436
Creating Stats:
TotalCycles = 1291767
Stalls = 489306
NOPs = 0
IdleCycles = 0
DecodeStalls = 250659
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 151232
Creating Stats:
TotalCycles = 1307631
Stalls = 484291
NOPs = 0
IdleCycles = 0
DecodeStalls = 245644
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 163517
Creating Stats:
TotalCycles = 1322810
Stalls = 481410
NOPs = 0
IdleCycles = 0
DecodeStalls = 242763
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 173926
Creating Stats:
TotalCycles = 1341411
Stalls = 477595
NOPs = 0
IdleCycles = 0
DecodeStalls = 238948
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 187187
Creating Stats:
TotalCycles = 1363194
Stalls = 473812
NOPs = 0
IdleCycles = 0
DecodeStalls = 235165
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 202541
Creating Stats:
TotalCycles = 1386229
Stalls = 470990
NOPs = 0
IdleCycles = 0
DecodeStalls = 232343
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 218026
Creating Stats:
TotalCycles = 1406924
Stalls = 470625
NOPs = 0
IdleCycles = 0
DecodeStalls = 231978
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 229418
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 409830
HALT operation received from [0][1][0] at cycle 410960
HALT operation received from [0][2][0] at cycle 414696
HALT operation received from [0][3][0] at cycle 418437
HALT operation received from [0][4][0] at cycle 420629
HALT operation received from [0][5][0] at cycle 422560
HALT operation received from [0][6][0] at cycle 424932
HALT operation received from [0][7][0] at cycle 426624
Simulation finished, cycleCount = 426625
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 409831
Stalls = 262665
NOPs = 0
IdleCycles = 0
DecodeStalls = 40809
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9172
Creating Stats:
TotalCycles = 410961
Stalls = 262537
NOPs = 0
IdleCycles = 0
DecodeStalls = 40681
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9866
Creating Stats:
TotalCycles = 414697
Stalls = 262340
NOPs = 0
IdleCycles = 0
DecodeStalls = 40484
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 11977
Creating Stats:
TotalCycles = 418438
Stalls = 262187
NOPs = 0
IdleCycles = 0
DecodeStalls = 40331
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14089
Creating Stats:
TotalCycles = 420630
Stalls = 261936
NOPs = 0
IdleCycles = 0
DecodeStalls = 40080
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 15415
Creating Stats:
TotalCycles = 422561
Stalls = 261858
NOPs = 0
IdleCycles = 0
DecodeStalls = 40002
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16551
Creating Stats:
TotalCycles = 424933
Stalls = 261908
NOPs = 0
IdleCycles = 0
DecodeStalls = 40052
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17704
Creating Stats:
TotalCycles = 426625
Stalls = 261736
NOPs = 0
IdleCycles = 0
DecodeStalls = 39880
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 18719
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1287810
HALT operation received from [0][1][0] at cycle 1289961
HALT operation received from [0][2][0] at cycle 1305271
HALT operation received from [0][3][0] at cycle 1321429
HALT operation received from [0][4][0] at cycle 1342524
HALT operation received from [0][5][0] at cycle 1362900
HALT operation received from [0][6][0] at cycle 1385014
HALT operation received from [0][7][0] at cycle 1405191
Simulation finished, cycleCount = 1405192
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1287811
Stalls = 493844
NOPs = 0
IdleCycles = 0
DecodeStalls = 255197
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 144990
Creating Stats:
TotalCycles = 1289962
Stalls = 489693
NOPs = 0
IdleCycles = 0
DecodeStalls = 251046
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 149936
Creating Stats:
TotalCycles = 1305272
Stalls = 484782
NOPs = 0
IdleCycles = 0
DecodeStalls = 246135
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 161706
Creating Stats:
TotalCycles = 1321430
Stalls = 481604
NOPs = 0
IdleCycles = 0
DecodeStalls = 242957
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 173032
Creating Stats:
TotalCycles = 1342525
Stalls = 477169
NOPs = 0
IdleCycles = 0
DecodeStalls = 238522
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 187824
Creating Stats:
TotalCycles = 1362901
Stalls = 473807
NOPs = 0
IdleCycles = 0
DecodeStalls = 235160
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 202277
Creating Stats:
TotalCycles = 1385015
Stalls = 471171
NOPs = 0
IdleCycles = 0
DecodeStalls = 232524
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 217037
Creating Stats:
TotalCycles = 1405192
Stalls = 470084
NOPs = 0
IdleCycles = 0
DecodeStalls = 231437
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 228166
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 409830
HALT operation received from [0][1][0] at cycle 410960
HALT operation received from [0][2][0] at cycle 414696
HALT operation received from [0][3][0] at cycle 418437
HALT operation received from [0][4][0] at cycle 420629
HALT operation received from [0][5][0] at cycle 422560
HALT operation received from [0][6][0] at cycle 424932
HALT operation received from [0][7][0] at cycle 426624
Simulation finished, cycleCount = 426625
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 409831
Stalls = 262665
NOPs = 0
IdleCycles = 0
DecodeStalls = 40809
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9172
Creating Stats:
TotalCycles = 410961
Stalls = 262537
NOPs = 0
IdleCycles = 0
DecodeStalls = 40681
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9866
Creating Stats:
TotalCycles = 414697
Stalls = 262340
NOPs = 0
IdleCycles = 0
DecodeStalls = 40484
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 11977
Creating Stats:
TotalCycles = 418438
Stalls = 262187
NOPs = 0
IdleCycles = 0
DecodeStalls = 40331
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14089
Creating Stats:
TotalCycles = 420630
Stalls = 261936
NOPs = 0
IdleCycles = 0
DecodeStalls = 40080
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 15415
Creating Stats:
TotalCycles = 422561
Stalls = 261858
NOPs = 0
IdleCycles = 0
DecodeStalls = 40002
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16551
Creating Stats:
TotalCycles = 424933
Stalls = 261908
NOPs = 0
IdleCycles = 0
DecodeStalls = 40052
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17704
Creating Stats:
TotalCycles = 426625
Stalls = 261736
NOPs = 0
IdleCycles = 0
DecodeStalls = 39880
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 18719
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1288113
HALT operation received from [0][1][0] at cycle 1291766
HALT operation received from [0][2][0] at cycle 1307630
HALT operation received from [0][3][0] at cycle 1322809
HALT operation received from [0][4][0] at cycle 1341410
HALT operation received from [0][5][0] at cycle 1363193
HALT operation received from [0][6][0] at cycle 1386228
HALT operation received from [0][7][0] at cycle 1406923
Simulation finished, cycleCount = 1406924
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1288114
Stalls = 494078
NOPs = 0
IdleCycles = 0
DecodeStalls = 255431
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 145436
Creating Stats:
TotalCycles = 1291767
Stalls = 489306
NOPs = 0
IdleCycles = 0
DecodeStalls = 250659
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 151232
Creating Stats:
TotalCycles = 1307631
Stalls = 484291
NOPs = 0
IdleCycles = 0
DecodeStalls = 245644
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 163517
Creating Stats:
TotalCycles = 1322810
Stalls = 481410
NOPs = 0
IdleCycles = 0
DecodeStalls = 242763
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 173926
Creating Stats:
TotalCycles = 1341411
Stalls = 477595
NOPs = 0
IdleCycles = 0
DecodeStalls = 238948
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 187187
Creating Stats:
TotalCycles = 1363194
Stalls = 473812
NOPs = 0
IdleCycles = 0
DecodeStalls = 235165
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 202541
Creating Stats:
TotalCycles = 1386229
Stalls = 470990
NOPs = 0
IdleCycles = 0
DecodeStalls = 232343
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 218026
Creating Stats:
TotalCycles = 1406924
Stalls = 470625
NOPs = 0
IdleCycles = 0
DecodeStalls = 231978
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 229418
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 409830
HALT operation received from [0][1][0] at cycle 410960
HALT operation received from [0][2][0] at cycle 414696
HALT operation received from [0][3][0] at cycle 418437
HALT operation received from [0][4][0] at cycle 420629
HALT operation received from [0][5][0] at cycle 422560
HALT operation received from [0][6][0] at cycle 424932
HALT operation received from [0][7][0] at cycle 426624
Simulation finished, cycleCount = 426625
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 409831
Stalls = 262665
NOPs = 0
IdleCycles = 0
DecodeStalls = 40809
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9172
Creating Stats:
TotalCycles = 410961
Stalls = 262537
NOPs = 0
IdleCycles = 0
DecodeStalls = 40681
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9866
Creating Stats:
TotalCycles = 414697
Stalls = 262340
NOPs = 0
IdleCycles = 0
DecodeStalls = 40484
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 11977
Creating Stats:
TotalCycles = 418438
Stalls = 262187
NOPs = 0
IdleCycles = 0
DecodeStalls = 40331
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14089
Creating Stats:
TotalCycles = 420630
Stalls = 261936
NOPs = 0
IdleCycles = 0
DecodeStalls = 40080
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 15415
Creating Stats:
TotalCycles = 422561
Stalls = 261858
NOPs = 0
IdleCycles = 0
DecodeStalls = 40002
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16551
Creating Stats:
TotalCycles = 424933
Stalls = 261908
NOPs = 0
IdleCycles = 0
DecodeStalls = 40052
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17704
Creating Stats:
TotalCycles = 426625
Stalls = 261736
NOPs = 0
IdleCycles = 0
DecodeStalls = 39880
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 18719
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1291309
HALT operation received from [0][1][0] at cycle 1293497
HALT operation received from [0][2][0] at cycle 1310713
HALT operation received from [0][3][0] at cycle 1324230
HALT operation received from [0][4][0] at cycle 1342945
HALT operation received from [0][5][0] at cycle 1364428
HALT operation received from [0][6][0] at cycle 1386332
HALT operation received from [0][7][0] at cycle 1407277
Simulation finished, cycleCount = 1407278
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1291310
Stalls = 493578
NOPs = 0
IdleCycles = 0
DecodeStalls = 254931
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 147606
Creating Stats:
TotalCycles = 1293498
Stalls = 489194
NOPs = 0
IdleCycles = 0
DecodeStalls = 250547
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 152786
Creating Stats:
TotalCycles = 1310714
Stalls = 484248
NOPs = 0
IdleCycles = 0
DecodeStalls = 245601
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 165812
Creating Stats:
TotalCycles = 1324231
Stalls = 481017
NOPs = 0
IdleCycles = 0
DecodeStalls = 242370
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 175034
Creating Stats:
TotalCycles = 1342946
Stalls = 477431
NOPs = 0
IdleCycles = 0
DecodeStalls = 238784
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 188467
Creating Stats:
TotalCycles = 1364429
Stalls = 473647
NOPs = 0
IdleCycles = 0
DecodeStalls = 235000
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 203810
Creating Stats:
TotalCycles = 1386333
Stalls = 470832
NOPs = 0
IdleCycles = 0
DecodeStalls = 232185
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 218433
Creating Stats:
TotalCycles = 1407278
Stalls = 470772
NOPs = 0
IdleCycles = 0
DecodeStalls = 232125
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 229625
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 411237
HALT operation received from [0][1][0] at cycle 412683
HALT operation received from [0][2][0] at cycle 414987
HALT operation received from [0][3][0] at cycle 418454
HALT operation received from [0][4][0] at cycle 420900
HALT operation received from [0][5][0] at cycle 422824
HALT operation received from [0][6][0] at cycle 425116
HALT operation received from [0][7][0] at cycle 427341
Simulation finished, cycleCount = 427342
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 411238
Stalls = 262493
NOPs = 0
IdleCycles = 0
DecodeStalls = 40637
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 10207
Creating Stats:
TotalCycles = 412684
Stalls = 262245
NOPs = 0
IdleCycles = 0
DecodeStalls = 40389
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 11176
Creating Stats:
TotalCycles = 414988
Stalls = 262020
NOPs = 0
IdleCycles = 0
DecodeStalls = 40164
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 12400
Creating Stats:
TotalCycles = 418455
Stalls = 261947
NOPs = 0
IdleCycles = 0
DecodeStalls = 40091
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14341
Creating Stats:
TotalCycles = 420901
Stalls = 261954
NOPs = 0
IdleCycles = 0
DecodeStalls = 40098
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 15656
Creating Stats:
TotalCycles = 422825
Stalls = 261688
NOPs = 0
IdleCycles = 0
DecodeStalls = 39832
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16864
Creating Stats:
TotalCycles = 425117
Stalls = 261834
NOPs = 0
IdleCycles = 0
DecodeStalls = 39978
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17965
Creating Stats:
TotalCycles = 427342
Stalls = 261809
NOPs = 0
IdleCycles = 0
DecodeStalls = 39953
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 19209
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1288113
HALT operation received from [0][1][0] at cycle 1291766
HALT operation received from [0][2][0] at cycle 1307630
HALT operation received from [0][3][0] at cycle 1322809
HALT operation received from [0][4][0] at cycle 1341410
HALT operation received from [0][5][0] at cycle 1363193
HALT operation received from [0][6][0] at cycle 1386228
HALT operation received from [0][7][0] at cycle 1406923
Simulation finished, cycleCount = 1406924
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1288114
Stalls = 494078
NOPs = 0
IdleCycles = 0
DecodeStalls = 255431
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 145436
Creating Stats:
TotalCycles = 1291767
Stalls = 489306
NOPs = 0
IdleCycles = 0
DecodeStalls = 250659
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 151232
Creating Stats:
TotalCycles = 1307631
Stalls = 484291
NOPs = 0
IdleCycles = 0
DecodeStalls = 245644
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 163517
Creating Stats:
TotalCycles = 1322810
Stalls = 481410
NOPs = 0
IdleCycles = 0
DecodeStalls = 242763
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 173926
Creating Stats:
TotalCycles = 1341411
Stalls = 477595
NOPs = 0
IdleCycles = 0
DecodeStalls = 238948
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 187187
Creating Stats:
TotalCycles = 1363194
Stalls = 473812
NOPs = 0
IdleCycles = 0
DecodeStalls = 235165
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 202541
Creating Stats:
TotalCycles = 1386229
Stalls = 470990
NOPs = 0
IdleCycles = 0
DecodeStalls = 232343
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 218026
Creating Stats:
TotalCycles = 1406924
Stalls = 470625
NOPs = 0
IdleCycles = 0
DecodeStalls = 231978
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 229418
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 409830
HALT operation received from [0][1][0] at cycle 410960
HALT operation received from [0][2][0] at cycle 414696
HALT operation received from [0][3][0] at cycle 418437
HALT operation received from [0][4][0] at cycle 420629
HALT operation received from [0][5][0] at cycle 422560
HALT operation received from [0][6][0] at cycle 424932
HALT operation received from [0][7][0] at cycle 426624
Simulation finished, cycleCount = 426625
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 409831
Stalls = 262665
NOPs = 0
IdleCycles = 0
DecodeStalls = 40809
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9172
Creating Stats:
TotalCycles = 410961
Stalls = 262537
NOPs = 0
IdleCycles = 0
DecodeStalls = 40681
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9866
Creating Stats:
TotalCycles = 414697
Stalls = 262340
NOPs = 0
IdleCycles = 0
DecodeStalls = 40484
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 11977
Creating Stats:
TotalCycles = 418438
Stalls = 262187
NOPs = 0
IdleCycles = 0
DecodeStalls = 40331
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14089
Creating Stats:
TotalCycles = 420630
Stalls = 261936
NOPs = 0
IdleCycles = 0
DecodeStalls = 40080
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 15415
Creating Stats:
TotalCycles = 422561
Stalls = 261858
NOPs = 0
IdleCycles = 0
DecodeStalls = 40002
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16551
Creating Stats:
TotalCycles = 424933
Stalls = 261908
NOPs = 0
IdleCycles = 0
DecodeStalls = 40052
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17704
Creating Stats:
TotalCycles = 426625
Stalls = 261736
NOPs = 0
IdleCycles = 0
DecodeStalls = 39880
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 18719
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1288113
HALT operation received from [0][1][0] at cycle 1291766
HALT operation received from [0][2][0] at cycle 1307630
HALT operation received from [0][3][0] at cycle 1322809
HALT operation received from [0][4][0] at cycle 1341410
HALT operation received from [0][5][0] at cycle 1363193
HALT operation received from [0][6][0] at cycle 1386228
HALT operation received from [0][7][0] at cycle 1406923
Simulation finished, cycleCount = 1406924
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1288114
Stalls = 494078
NOPs = 0
IdleCycles = 0
DecodeStalls = 255431
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 145436
Creating Stats:
TotalCycles = 1291767
Stalls = 489306
NOPs = 0
IdleCycles = 0
DecodeStalls = 250659
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 151232
Creating Stats:
TotalCycles = 1307631
Stalls = 484291
NOPs = 0
IdleCycles = 0
DecodeStalls = 245644
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 163517
Creating Stats:
TotalCycles = 1322810
Stalls = 481410
NOPs = 0
IdleCycles = 0
DecodeStalls = 242763
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 173926
Creating Stats:
TotalCycles = 1341411
Stalls = 477595
NOPs = 0
IdleCycles = 0
DecodeStalls = 238948
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 187187
Creating Stats:
TotalCycles = 1363194
Stalls = 473812
NOPs = 0
IdleCycles = 0
DecodeStalls = 235165
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 202541
Creating Stats:
TotalCycles = 1386229
Stalls = 470990
NOPs = 0
IdleCycles = 0
DecodeStalls = 232343
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 218026
Creating Stats:
TotalCycles = 1406924
Stalls = 470625
NOPs = 0
IdleCycles = 0
DecodeStalls = 231978
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 229418
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 409830
HALT operation received from [0][1][0] at cycle 410960
HALT operation received from [0][2][0] at cycle 414696
HALT operation received from [0][3][0] at cycle 418437
HALT operation received from [0][4][0] at cycle 420629
HALT operation received from [0][5][0] at cycle 422560
HALT operation received from [0][6][0] at cycle 424932
HALT operation received from [0][7][0] at cycle 426624
Simulation finished, cycleCount = 426625
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 409831
Stalls = 262665
NOPs = 0
IdleCycles = 0
DecodeStalls = 40809
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9172
Creating Stats:
TotalCycles = 410961
Stalls = 262537
NOPs = 0
IdleCycles = 0
DecodeStalls = 40681
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9866
Creating Stats:
TotalCycles = 414697
Stalls = 262340
NOPs = 0
IdleCycles = 0
DecodeStalls = 40484
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 11977
Creating Stats:
TotalCycles = 418438
Stalls = 262187
NOPs = 0
IdleCycles = 0
DecodeStalls = 40331
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14089
Creating Stats:
TotalCycles = 420630
Stalls = 261936
NOPs = 0
IdleCycles = 0
DecodeStalls = 40080
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 15415
Creating Stats:
TotalCycles = 422561
Stalls = 261858
NOPs = 0
IdleCycles = 0
DecodeStalls = 40002
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 16551
Creating Stats:
TotalCycles = 424933
Stalls = 261908
NOPs = 0
IdleCycles = 0
DecodeStalls = 40052
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 17704
Creating Stats:
TotalCycles = 426625
Stalls = 261736
NOPs = 0
IdleCycles = 0
DecodeStalls = 39880
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 18719
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 23
HALT operation received from [0][2][0] at cycle 24
HALT operation received from [0][3][0] at cycle 26
HALT operation received from [0][4][0] at cycle 27
HALT operation received from [0][5][0] at cycle 29
HALT operation received from [0][6][0] at cycle 30
HALT operation received from [0][7][0] at cycle 31
HALT operation received from [0][0][0] at cycle 974059
Simulation finished, cycleCount = 974060
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974060
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 8
Creating Stats:
TotalCycles = 27
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
Creating Stats:
TotalCycles = 30
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 12
Creating Stats:
TotalCycles = 31
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 13
Creating Stats:
TotalCycles = 32
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 14
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_4b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
ERROR: OOB
!!! ERROR OBB: 2FAEB624
HALT operation received from [0][0][0] at cycle 1288025
HALT operation received from [0][1][0] at cycle 1289705
HALT operation received from [0][2][0] at cycle 1305534
HALT operation received from [0][3][0] at cycle 1321636
HALT operation received from [0][4][0] at cycle 1343240
HALT operation received from [0][5][0] at cycle 1362944
HALT operation received from [0][6][0] at cycle 1383092
HALT operation received from [0][7][0] at cycle 1403553
Simulation finished, cycleCount = 1403554
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1288026
Stalls = 493658
NOPs = 0
IdleCycles = 0
DecodeStalls = 255011
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 145211
Creating Stats:
TotalCycles = 1289706
Stalls = 489249
NOPs = 0
IdleCycles = 0
DecodeStalls = 250602
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 149729
Creating Stats:
TotalCycles = 1305535
Stalls = 484885
NOPs = 0
IdleCycles = 0
DecodeStalls = 246238
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 161754
Creating Stats:
TotalCycles = 1321637
Stalls = 481245
NOPs = 0
IdleCycles = 0
DecodeStalls = 242598
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 173279
Creating Stats:
TotalCycles = 1343241
Stalls = 477196
NOPs = 0
IdleCycles = 0
DecodeStalls = 238549
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 188432
Creating Stats:
TotalCycles = 1362945
Stalls = 473675
NOPs = 0
IdleCycles = 0
DecodeStalls = 235028
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 202024
Creating Stats:
TotalCycles = 1383093
Stalls = 471035
NOPs = 0
IdleCycles = 0
DecodeStalls = 232388
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 215437
Creating Stats:
TotalCycles = 1403554
Stalls = 470505
NOPs = 0
IdleCycles = 0
DecodeStalls = 231858
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 227151
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed


OpenCL

OpenCL::getDevices

=== 1 OpenCL platform(s) found: ===
  -- 0 --
  PROFILE = EMBEDDED_PROFILE
  VERSION = OpenCL 1.1 0.1.0
  NAME = ESDG-CL
  VENDOR = ESDG
  EXTENSIONS = 
Using the default platform (platform 0)...

=== 65 OpenCL device(s) found on platform:
  -- 0 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 1 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 2 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 3 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 4 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 5 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 6 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 7 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 8 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 9 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 10 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 11 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 12 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 13 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 14 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 15 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 16 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 17 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 18 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 19 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 20 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 21 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 22 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 23 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 24 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 25 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 26 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 27 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 28 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 29 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 30 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 31 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 32 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 33 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 34 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 35 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 36 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 37 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 38 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 39 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 40 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 41 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 42 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 43 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 44 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 45 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 46 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 47 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 48 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 49 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 50 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 51 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 52 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 53 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 54 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 55 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 56 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 57 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 58 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 59 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 60 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 1
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 61 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 2
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 62 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 4
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 63 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 8
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824
  -- 64 --
  DEVICE_NAME = LE1
  DEVICE_VENDOR = ESDG
  DEVICE_VERSION = OpenCL 1.1 ESDG- 0.1.0
  DRIVER_VERSION = 0.1.0
  DEVICE_MAX_COMPUTE_UNITS = 16
  DEVICE_MAX_CLOCK_FREQUENCY = 0
  DEVICE_GLOBAL_MEM_SIZE = 1073741824
  CL_DEVICE_LOCAL_MEM_SIZE = 1073741824

homogeneous system
OpenCL::buildKernel
#define FPTYPE int
#define FPVECTYPE uint4

#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable 


// Compute a per block histogram of the occurrences of each
// digit, using a 4-bit radix (i.e. 16 possible digits).
__kernel void
reduce(__global const FPTYPE * in, 
       __global FPTYPE * isums, 
       const int n,
       __local FPTYPE * lmem,
       const int shift) 
{
    // First, calculate the bounds of the region of the array 
    // that this block will sum.  We need these regions to match
    // perfectly with those in the bottom-level scan, so we index
    // as if vector types of length 4 were in use.  This prevents
    // errors due to slightly misaligned regions.
    int region_size = ((n / 4) / get_num_groups(0)) * 4;
    int block_start = get_group_id(0) * region_size;

    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n : block_start + region_size;

    // Calculate starting index for this thread/work item
    int tid = get_local_id(0);
    int i = block_start + tid;
    
    // The per thread histogram, initially 0's.
    int digit_counts[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0 };

    // Reduce multiple elements per thread
    while (i < block_stop)
    {
        // This statement 
        // 1) Loads the value in from global memory
        // 2) Shifts to the right to have the 4 bits of interest
        //    in the least significant places
        // 3) Masks any more significant bits away. This leaves us
        // with the relevant digit (which is also the index into the
        // histogram). Next increment the histogram to count this occurrence.
        digit_counts[(in[i] >> shift) & 0xFU]++;
        i += get_local_size(0);
    }
    
    for (int d = 0; d < 16; d++)
    {
        // Load this thread's sum into local/shared memory
        lmem[tid] = digit_counts[d];
        barrier(CLK_LOCAL_MEM_FENCE);

        // Reduce the contents of shared/local memory
        for (unsigned int s = get_local_size(0) / 2; s > 0; s >>= 1)
        {
            if (tid < s)
            {
                lmem[tid] += lmem[tid + s];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        // Write result for this block to global memory
        if (tid == 0)
        {
            isums[(d * get_num_groups(0)) + get_group_id(0)] = lmem[0];
        }
    }
}

// This kernel scans the contents of local memory using a work
// inefficient, but highly parallel Kogge-Stone style scan.
// Set exclusive to 1 for an exclusive scan or 0 for an inclusive scan
inline FPTYPE scanLocalMem(FPTYPE val_arg, __local FPTYPE* lmem_arg, int exclusive){
    // Set first half of local memory to zero to make room for scanning
    int idx = get_local_id(0);
    lmem_arg[idx] = 0;
    
    // Set second half to block sums from global memory, but don't go out
    // of bounds
    idx += get_local_size(0);
    lmem_arg[idx] = val_arg;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    // Now, perform Kogge-Stone scan
    FPTYPE t;
    for (int i = 1; i < get_local_size(0); i *= 2)
    {
        t = lmem_arg[idx -  i]; barrier(CLK_LOCAL_MEM_FENCE);
        lmem_arg[idx] += t;     barrier(CLK_LOCAL_MEM_FENCE);
    }
    return lmem_arg[idx-exclusive];
}

// This single group kernel takes the per block histograms
// from the reduction and performs an exclusive scan on them.
__kernel void
top_scan(__global FPTYPE * isums, 
         const int n,
         __local FPTYPE * lmem)
{
    __local int s_seed;
    s_seed = 0; barrier(CLK_LOCAL_MEM_FENCE);
    
    // Decide if this is the last thread that needs to 
    // propagate the seed value
    int last_thread = (get_local_id(0) < n &&
                      (get_local_id(0)+1) == n) ? 1 : 0;

    for (int d = 0; d < 16; d++)
    {
        FPTYPE val = 0;
        // Load each block's count for digit d
        if (get_local_id(0) < n)
        {
            val = isums[(n * d) + get_local_id(0)];
        }
        // Exclusive scan the counts in local memory
        FPTYPE res = scanLocalMem(val, lmem, 1);
        // Write scanned value out to global
        if (get_local_id(0) < n)
        {
            isums[(n * d) + get_local_id(0)] = res + s_seed;
        }
        
        if (last_thread) 
        {
            s_seed += res + val;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
}


__kernel void 
bottom_scan(__global const FPTYPE * in,
            __global const FPTYPE * isums,
            __global FPTYPE * out,
            const int n,
            __local FPTYPE * lmem,
            const int shift)
{
    // Use local memory to cache the scanned seeds
    __local FPTYPE l_scanned_seeds[16];
    
    // Keep a shared histogram of all instances seen by the current
    // block
    __local FPTYPE l_block_counts[16];
    
    // Keep a private histogram as well
    __private int histogram[16] = { 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0  };

    // Prepare for reading 4-element vectors
    // Assume n is divisible by 4
    __global FPVECTYPE *in4  = (__global FPVECTYPE*) in;
    __global FPVECTYPE *out4 = (__global FPVECTYPE*) out;
    int n4 = n / 4; //vector type is 4 wide
    
    int region_size = n4 / get_num_groups(0);
    int block_start = get_group_id(0) * region_size;
    // Give the last block any extra elements
    int block_stop  = (get_group_id(0) == get_num_groups(0) - 1) ? 
        n4 : block_start + region_size;

    // Calculate starting index for this thread/work item
    int i = block_start + get_local_id(0);
    int window = block_start;

    // Set the histogram in local memory to zero
    // and read in the scanned seeds from gmem
    if (get_local_id(0) < 16)
    {
        l_block_counts[get_local_id(0)] = 0;
        l_scanned_seeds[get_local_id(0)] = 
            isums[(get_local_id(0)*get_num_groups(0))+get_group_id(0)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);

    // Scan multiple elements per thread
    while (window < block_stop)
    {
        // Reset histogram
        for (int q = 0; q < 16; q++) histogram[q] = 0;
        FPVECTYPE val_4;
        FPVECTYPE key_4;        

        if (i < block_stop) // Make sure we don't read out of bounds
        {
            val_4 = in4[i];
            
            // Mask the keys to get the appropriate digit
            key_4.x = (val_4.x >> shift) & 0xFU;
            key_4.y = (val_4.y >> shift) & 0xFU;
            key_4.z = (val_4.z >> shift) & 0xFU;
            key_4.w = (val_4.w >> shift) & 0xFU;
            
            // Update the histogram
            histogram[key_4.x]++;
            histogram[key_4.y]++;
            histogram[key_4.z]++;
            histogram[key_4.w]++;
        } 
                
        // Scan the digit counts in local memory
        for (int digit = 0; digit < 16; digit++)
        {
            histogram[digit] = scanLocalMem(histogram[digit], lmem, 1);
            barrier(CLK_LOCAL_MEM_FENCE);
        }

        if (i < block_stop) // Make sure we don't write out of bounds
        {
            int address;
            address = histogram[key_4.x] + l_scanned_seeds[key_4.x] + l_block_counts[key_4.x];
            out[address] = val_4.x;
            histogram[key_4.x]++;
            
            address = histogram[key_4.y] + l_scanned_seeds[key_4.y] + l_block_counts[key_4.y];
            out[address] = val_4.y;
            histogram[key_4.y]++;
            
            address = histogram[key_4.z] + l_scanned_seeds[key_4.z] + l_block_counts[key_4.z];
            out[address] = val_4.z;
            histogram[key_4.z]++;
            
            address = histogram[key_4.w] + l_scanned_seeds[key_4.w] + l_block_counts[key_4.w];
            out[address] = val_4.w;
            histogram[key_4.w]++;
        }
                
        // Before proceeding, make sure everyone has finished their current
        // indexing computations.
        barrier(CLK_LOCAL_MEM_FENCE);
        // Now update the seed array.
        if (get_local_id(0) == get_local_size(0)-1)
        {
            for (int q = 0; q < 16; q++)
            {
                 l_block_counts[q] += histogram[q];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        // Advance window
        window += get_local_size(0);
        i += get_local_size(0);
    }
}


*************************************************
***   OUTPUT FROM COMPILING THE KERNEL FILE   ***
*************************************************


*************************************************
*** END OUTPUT FROM COMPILING THE KERNEL FILE ***
*************************************************


Using 0 for local work size. 
Using 0 for local work size. 
Using 0 for local work size. 
Initializing host memory.
Copying input data to device.
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1148
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 373394
HALT operation received from [0][1][0] at cycle 374413
HALT operation received from [0][2][0] at cycle 375837
HALT operation received from [0][3][0] at cycle 378408
HALT operation received from [0][4][0] at cycle 382006
HALT operation received from [0][5][0] at cycle 385218
HALT operation received from [0][6][0] at cycle 389455
HALT operation received from [0][7][0] at cycle 392411
Simulation finished, cycleCount = 392412
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 373395
Stalls = 234114
NOPs = 0
IdleCycles = 0
DecodeStalls = 12258
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4088
Creating Stats:
TotalCycles = 374414
Stalls = 233981
NOPs = 0
IdleCycles = 0
DecodeStalls = 12125
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4752
Creating Stats:
TotalCycles = 375838
Stalls = 233788
NOPs = 0
IdleCycles = 0
DecodeStalls = 11932
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5559
Creating Stats:
TotalCycles = 378409
Stalls = 233798
NOPs = 0
IdleCycles = 0
DecodeStalls = 11942
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 6846
Creating Stats:
TotalCycles = 382007
Stalls = 233774
NOPs = 0
IdleCycles = 0
DecodeStalls = 11918
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8709
Creating Stats:
TotalCycles = 385219
Stalls = 233672
NOPs = 0
IdleCycles = 0
DecodeStalls = 11816
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 10437
Creating Stats:
TotalCycles = 389456
Stalls = 233637
NOPs = 0
IdleCycles = 0
DecodeStalls = 11781
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 12714
Creating Stats:
TotalCycles = 392412
Stalls = 233592
NOPs = 0
IdleCycles = 0
DecodeStalls = 11736
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 14341
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 0);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2668
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 986733
HALT operation received from [0][1][0] at cycle 999112
HALT operation received from [0][2][0] at cycle 1012996
HALT operation received from [0][3][0] at cycle 1026618
HALT operation received from [0][4][0] at cycle 1039274
HALT operation received from [0][5][0] at cycle 1052046
HALT operation received from [0][6][0] at cycle 1067262
HALT operation received from [0][7][0] at cycle 1080899
Simulation finished, cycleCount = 1080900
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 986734
Stalls = 364111
NOPs = 0
IdleCycles = 0
DecodeStalls = 125464
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 42752
Creating Stats:
TotalCycles = 999113
Stalls = 363018
NOPs = 0
IdleCycles = 0
DecodeStalls = 124371
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50139
Creating Stats:
TotalCycles = 1012997
Stalls = 362051
NOPs = 0
IdleCycles = 0
DecodeStalls = 123404
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 57728
Creating Stats:
TotalCycles = 1026619
Stalls = 361021
NOPs = 0
IdleCycles = 0
DecodeStalls = 122374
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 65463
Creating Stats:
TotalCycles = 1039275
Stalls = 360923
NOPs = 0
IdleCycles = 0
DecodeStalls = 122276
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 72246
Creating Stats:
TotalCycles = 1052047
Stalls = 359907
NOPs = 0
IdleCycles = 0
DecodeStalls = 121260
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 79639
Creating Stats:
TotalCycles = 1067263
Stalls = 359018
NOPs = 0
IdleCycles = 0
DecodeStalls = 120371
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 88143
Creating Stats:
TotalCycles = 1080900
Stalls = 358105
NOPs = 0
IdleCycles = 0
DecodeStalls = 119458
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 96039
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 400668
HALT operation received from [0][1][0] at cycle 401359
HALT operation received from [0][2][0] at cycle 403017
HALT operation received from [0][3][0] at cycle 404091
HALT operation received from [0][4][0] at cycle 407135
HALT operation received from [0][5][0] at cycle 408273
HALT operation received from [0][6][0] at cycle 410152
HALT operation received from [0][7][0] at cycle 411803
Simulation finished, cycleCount = 411804
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 400669
Stalls = 263033
NOPs = 0
IdleCycles = 0
DecodeStalls = 41177
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3334
Creating Stats:
TotalCycles = 401360
Stalls = 262931
NOPs = 0
IdleCycles = 0
DecodeStalls = 41075
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3792
Creating Stats:
TotalCycles = 403018
Stalls = 262696
NOPs = 0
IdleCycles = 0
DecodeStalls = 40840
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4772
Creating Stats:
TotalCycles = 404092
Stalls = 262544
NOPs = 0
IdleCycles = 0
DecodeStalls = 40688
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5444
Creating Stats:
TotalCycles = 407136
Stalls = 262496
NOPs = 0
IdleCycles = 0
DecodeStalls = 40640
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7056
Creating Stats:
TotalCycles = 408274
Stalls = 262312
NOPs = 0
IdleCycles = 0
DecodeStalls = 40456
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7716
Creating Stats:
TotalCycles = 410153
Stalls = 262375
NOPs = 0
IdleCycles = 0
DecodeStalls = 40519
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8695
Creating Stats:
TotalCycles = 411804
Stalls = 262458
NOPs = 0
IdleCycles = 0
DecodeStalls = 40602
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9507
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 4);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1114922
HALT operation received from [0][1][0] at cycle 1115553
HALT operation received from [0][2][0] at cycle 1126539
HALT operation received from [0][3][0] at cycle 1142433
HALT operation received from [0][4][0] at cycle 1156751
HALT operation received from [0][5][0] at cycle 1173067
HALT operation received from [0][6][0] at cycle 1187651
HALT operation received from [0][7][0] at cycle 1204106
Simulation finished, cycleCount = 1204107
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1114923
Stalls = 512066
NOPs = 0
IdleCycles = 0
DecodeStalls = 273419
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 32617
Creating Stats:
TotalCycles = 1115554
Stalls = 509695
NOPs = 0
IdleCycles = 0
DecodeStalls = 271048
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 34492
Creating Stats:
TotalCycles = 1126540
Stalls = 508441
NOPs = 0
IdleCycles = 0
DecodeStalls = 269794
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 40538
Creating Stats:
TotalCycles = 1142434
Stalls = 505799
NOPs = 0
IdleCycles = 0
DecodeStalls = 267152
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50409
Creating Stats:
TotalCycles = 1156752
Stalls = 503333
NOPs = 0
IdleCycles = 0
DecodeStalls = 264686
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 58901
Creating Stats:
TotalCycles = 1173068
Stalls = 500250
NOPs = 0
IdleCycles = 0
DecodeStalls = 261603
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 69541
Creating Stats:
TotalCycles = 1187652
Stalls = 496953
NOPs = 0
IdleCycles = 0
DecodeStalls = 258306
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 78843
Creating Stats:
TotalCycles = 1204107
Stalls = 494440
NOPs = 0
IdleCycles = 0
DecodeStalls = 255793
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 89044
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 400668
HALT operation received from [0][1][0] at cycle 401359
HALT operation received from [0][2][0] at cycle 403017
HALT operation received from [0][3][0] at cycle 404091
HALT operation received from [0][4][0] at cycle 407135
HALT operation received from [0][5][0] at cycle 408273
HALT operation received from [0][6][0] at cycle 410152
HALT operation received from [0][7][0] at cycle 411803
Simulation finished, cycleCount = 411804
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 400669
Stalls = 263033
NOPs = 0
IdleCycles = 0
DecodeStalls = 41177
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3334
Creating Stats:
TotalCycles = 401360
Stalls = 262931
NOPs = 0
IdleCycles = 0
DecodeStalls = 41075
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3792
Creating Stats:
TotalCycles = 403018
Stalls = 262696
NOPs = 0
IdleCycles = 0
DecodeStalls = 40840
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4772
Creating Stats:
TotalCycles = 404092
Stalls = 262544
NOPs = 0
IdleCycles = 0
DecodeStalls = 40688
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5444
Creating Stats:
TotalCycles = 407136
Stalls = 262496
NOPs = 0
IdleCycles = 0
DecodeStalls = 40640
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7056
Creating Stats:
TotalCycles = 408274
Stalls = 262312
NOPs = 0
IdleCycles = 0
DecodeStalls = 40456
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7716
Creating Stats:
TotalCycles = 410153
Stalls = 262375
NOPs = 0
IdleCycles = 0
DecodeStalls = 40519
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8695
Creating Stats:
TotalCycles = 411804
Stalls = 262458
NOPs = 0
IdleCycles = 0
DecodeStalls = 40602
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9507
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 8);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1114922
HALT operation received from [0][1][0] at cycle 1115553
HALT operation received from [0][2][0] at cycle 1126539
HALT operation received from [0][3][0] at cycle 1142433
HALT operation received from [0][4][0] at cycle 1156751
HALT operation received from [0][5][0] at cycle 1173067
HALT operation received from [0][6][0] at cycle 1187651
HALT operation received from [0][7][0] at cycle 1204106
Simulation finished, cycleCount = 1204107
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1114923
Stalls = 512066
NOPs = 0
IdleCycles = 0
DecodeStalls = 273419
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 32617
Creating Stats:
TotalCycles = 1115554
Stalls = 509695
NOPs = 0
IdleCycles = 0
DecodeStalls = 271048
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 34492
Creating Stats:
TotalCycles = 1126540
Stalls = 508441
NOPs = 0
IdleCycles = 0
DecodeStalls = 269794
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 40538
Creating Stats:
TotalCycles = 1142434
Stalls = 505799
NOPs = 0
IdleCycles = 0
DecodeStalls = 267152
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50409
Creating Stats:
TotalCycles = 1156752
Stalls = 503333
NOPs = 0
IdleCycles = 0
DecodeStalls = 264686
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 58901
Creating Stats:
TotalCycles = 1173068
Stalls = 500250
NOPs = 0
IdleCycles = 0
DecodeStalls = 261603
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 69541
Creating Stats:
TotalCycles = 1187652
Stalls = 496953
NOPs = 0
IdleCycles = 0
DecodeStalls = 258306
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 78843
Creating Stats:
TotalCycles = 1204107
Stalls = 494440
NOPs = 0
IdleCycles = 0
DecodeStalls = 255793
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 89044
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 400668
HALT operation received from [0][1][0] at cycle 401359
HALT operation received from [0][2][0] at cycle 403017
HALT operation received from [0][3][0] at cycle 404091
HALT operation received from [0][4][0] at cycle 407135
HALT operation received from [0][5][0] at cycle 408273
HALT operation received from [0][6][0] at cycle 410152
HALT operation received from [0][7][0] at cycle 411803
Simulation finished, cycleCount = 411804
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 400669
Stalls = 263033
NOPs = 0
IdleCycles = 0
DecodeStalls = 41177
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3334
Creating Stats:
TotalCycles = 401360
Stalls = 262931
NOPs = 0
IdleCycles = 0
DecodeStalls = 41075
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3792
Creating Stats:
TotalCycles = 403018
Stalls = 262696
NOPs = 0
IdleCycles = 0
DecodeStalls = 40840
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4772
Creating Stats:
TotalCycles = 404092
Stalls = 262544
NOPs = 0
IdleCycles = 0
DecodeStalls = 40688
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5444
Creating Stats:
TotalCycles = 407136
Stalls = 262496
NOPs = 0
IdleCycles = 0
DecodeStalls = 40640
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7056
Creating Stats:
TotalCycles = 408274
Stalls = 262312
NOPs = 0
IdleCycles = 0
DecodeStalls = 40456
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7716
Creating Stats:
TotalCycles = 410153
Stalls = 262375
NOPs = 0
IdleCycles = 0
DecodeStalls = 40519
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8695
Creating Stats:
TotalCycles = 411804
Stalls = 262458
NOPs = 0
IdleCycles = 0
DecodeStalls = 40602
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9507
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 12);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1114922
HALT operation received from [0][1][0] at cycle 1115553
HALT operation received from [0][2][0] at cycle 1126539
HALT operation received from [0][3][0] at cycle 1142433
HALT operation received from [0][4][0] at cycle 1156751
HALT operation received from [0][5][0] at cycle 1173067
HALT operation received from [0][6][0] at cycle 1187651
HALT operation received from [0][7][0] at cycle 1204106
Simulation finished, cycleCount = 1204107
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1114923
Stalls = 512066
NOPs = 0
IdleCycles = 0
DecodeStalls = 273419
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 32617
Creating Stats:
TotalCycles = 1115554
Stalls = 509695
NOPs = 0
IdleCycles = 0
DecodeStalls = 271048
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 34492
Creating Stats:
TotalCycles = 1126540
Stalls = 508441
NOPs = 0
IdleCycles = 0
DecodeStalls = 269794
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 40538
Creating Stats:
TotalCycles = 1142434
Stalls = 505799
NOPs = 0
IdleCycles = 0
DecodeStalls = 267152
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50409
Creating Stats:
TotalCycles = 1156752
Stalls = 503333
NOPs = 0
IdleCycles = 0
DecodeStalls = 264686
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 58901
Creating Stats:
TotalCycles = 1173068
Stalls = 500250
NOPs = 0
IdleCycles = 0
DecodeStalls = 261603
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 69541
Creating Stats:
TotalCycles = 1187652
Stalls = 496953
NOPs = 0
IdleCycles = 0
DecodeStalls = 258306
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 78843
Creating Stats:
TotalCycles = 1204107
Stalls = 494440
NOPs = 0
IdleCycles = 0
DecodeStalls = 255793
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 89044
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 400668
HALT operation received from [0][1][0] at cycle 401359
HALT operation received from [0][2][0] at cycle 403017
HALT operation received from [0][3][0] at cycle 404091
HALT operation received from [0][4][0] at cycle 407135
HALT operation received from [0][5][0] at cycle 408273
HALT operation received from [0][6][0] at cycle 410152
HALT operation received from [0][7][0] at cycle 411803
Simulation finished, cycleCount = 411804
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 400669
Stalls = 263033
NOPs = 0
IdleCycles = 0
DecodeStalls = 41177
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3334
Creating Stats:
TotalCycles = 401360
Stalls = 262931
NOPs = 0
IdleCycles = 0
DecodeStalls = 41075
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3792
Creating Stats:
TotalCycles = 403018
Stalls = 262696
NOPs = 0
IdleCycles = 0
DecodeStalls = 40840
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4772
Creating Stats:
TotalCycles = 404092
Stalls = 262544
NOPs = 0
IdleCycles = 0
DecodeStalls = 40688
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5444
Creating Stats:
TotalCycles = 407136
Stalls = 262496
NOPs = 0
IdleCycles = 0
DecodeStalls = 40640
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7056
Creating Stats:
TotalCycles = 408274
Stalls = 262312
NOPs = 0
IdleCycles = 0
DecodeStalls = 40456
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7716
Creating Stats:
TotalCycles = 410153
Stalls = 262375
NOPs = 0
IdleCycles = 0
DecodeStalls = 40519
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8695
Creating Stats:
TotalCycles = 411804
Stalls = 262458
NOPs = 0
IdleCycles = 0
DecodeStalls = 40602
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9507
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 16);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1114922
HALT operation received from [0][1][0] at cycle 1115553
HALT operation received from [0][2][0] at cycle 1126539
HALT operation received from [0][3][0] at cycle 1142433
HALT operation received from [0][4][0] at cycle 1156751
HALT operation received from [0][5][0] at cycle 1173067
HALT operation received from [0][6][0] at cycle 1187651
HALT operation received from [0][7][0] at cycle 1204106
Simulation finished, cycleCount = 1204107
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1114923
Stalls = 512066
NOPs = 0
IdleCycles = 0
DecodeStalls = 273419
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 32617
Creating Stats:
TotalCycles = 1115554
Stalls = 509695
NOPs = 0
IdleCycles = 0
DecodeStalls = 271048
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 34492
Creating Stats:
TotalCycles = 1126540
Stalls = 508441
NOPs = 0
IdleCycles = 0
DecodeStalls = 269794
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 40538
Creating Stats:
TotalCycles = 1142434
Stalls = 505799
NOPs = 0
IdleCycles = 0
DecodeStalls = 267152
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50409
Creating Stats:
TotalCycles = 1156752
Stalls = 503333
NOPs = 0
IdleCycles = 0
DecodeStalls = 264686
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 58901
Creating Stats:
TotalCycles = 1173068
Stalls = 500250
NOPs = 0
IdleCycles = 0
DecodeStalls = 261603
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 69541
Creating Stats:
TotalCycles = 1187652
Stalls = 496953
NOPs = 0
IdleCycles = 0
DecodeStalls = 258306
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 78843
Creating Stats:
TotalCycles = 1204107
Stalls = 494440
NOPs = 0
IdleCycles = 0
DecodeStalls = 255793
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 89044
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 400668
HALT operation received from [0][1][0] at cycle 401359
HALT operation received from [0][2][0] at cycle 403017
HALT operation received from [0][3][0] at cycle 404091
HALT operation received from [0][4][0] at cycle 407135
HALT operation received from [0][5][0] at cycle 408273
HALT operation received from [0][6][0] at cycle 410152
HALT operation received from [0][7][0] at cycle 411803
Simulation finished, cycleCount = 411804
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 400669
Stalls = 263033
NOPs = 0
IdleCycles = 0
DecodeStalls = 41177
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3334
Creating Stats:
TotalCycles = 401360
Stalls = 262931
NOPs = 0
IdleCycles = 0
DecodeStalls = 41075
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3792
Creating Stats:
TotalCycles = 403018
Stalls = 262696
NOPs = 0
IdleCycles = 0
DecodeStalls = 40840
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4772
Creating Stats:
TotalCycles = 404092
Stalls = 262544
NOPs = 0
IdleCycles = 0
DecodeStalls = 40688
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5444
Creating Stats:
TotalCycles = 407136
Stalls = 262496
NOPs = 0
IdleCycles = 0
DecodeStalls = 40640
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7056
Creating Stats:
TotalCycles = 408274
Stalls = 262312
NOPs = 0
IdleCycles = 0
DecodeStalls = 40456
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7716
Creating Stats:
TotalCycles = 410153
Stalls = 262375
NOPs = 0
IdleCycles = 0
DecodeStalls = 40519
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8695
Creating Stats:
TotalCycles = 411804
Stalls = 262458
NOPs = 0
IdleCycles = 0
DecodeStalls = 40602
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9507
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 20);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1114922
HALT operation received from [0][1][0] at cycle 1115553
HALT operation received from [0][2][0] at cycle 1126539
HALT operation received from [0][3][0] at cycle 1142433
HALT operation received from [0][4][0] at cycle 1156751
HALT operation received from [0][5][0] at cycle 1173067
HALT operation received from [0][6][0] at cycle 1187651
HALT operation received from [0][7][0] at cycle 1204106
Simulation finished, cycleCount = 1204107
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1114923
Stalls = 512066
NOPs = 0
IdleCycles = 0
DecodeStalls = 273419
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 32617
Creating Stats:
TotalCycles = 1115554
Stalls = 509695
NOPs = 0
IdleCycles = 0
DecodeStalls = 271048
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 34492
Creating Stats:
TotalCycles = 1126540
Stalls = 508441
NOPs = 0
IdleCycles = 0
DecodeStalls = 269794
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 40538
Creating Stats:
TotalCycles = 1142434
Stalls = 505799
NOPs = 0
IdleCycles = 0
DecodeStalls = 267152
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50409
Creating Stats:
TotalCycles = 1156752
Stalls = 503333
NOPs = 0
IdleCycles = 0
DecodeStalls = 264686
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 58901
Creating Stats:
TotalCycles = 1173068
Stalls = 500250
NOPs = 0
IdleCycles = 0
DecodeStalls = 261603
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 69541
Creating Stats:
TotalCycles = 1187652
Stalls = 496953
NOPs = 0
IdleCycles = 0
DecodeStalls = 258306
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 78843
Creating Stats:
TotalCycles = 1204107
Stalls = 494440
NOPs = 0
IdleCycles = 0
DecodeStalls = 255793
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 89044
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 400668
HALT operation received from [0][1][0] at cycle 401359
HALT operation received from [0][2][0] at cycle 403017
HALT operation received from [0][3][0] at cycle 404091
HALT operation received from [0][4][0] at cycle 407135
HALT operation received from [0][5][0] at cycle 408273
HALT operation received from [0][6][0] at cycle 410152
HALT operation received from [0][7][0] at cycle 411803
Simulation finished, cycleCount = 411804
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 400669
Stalls = 263033
NOPs = 0
IdleCycles = 0
DecodeStalls = 41177
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3334
Creating Stats:
TotalCycles = 401360
Stalls = 262931
NOPs = 0
IdleCycles = 0
DecodeStalls = 41075
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3792
Creating Stats:
TotalCycles = 403018
Stalls = 262696
NOPs = 0
IdleCycles = 0
DecodeStalls = 40840
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4772
Creating Stats:
TotalCycles = 404092
Stalls = 262544
NOPs = 0
IdleCycles = 0
DecodeStalls = 40688
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5444
Creating Stats:
TotalCycles = 407136
Stalls = 262496
NOPs = 0
IdleCycles = 0
DecodeStalls = 40640
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7056
Creating Stats:
TotalCycles = 408274
Stalls = 262312
NOPs = 0
IdleCycles = 0
DecodeStalls = 40456
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7716
Creating Stats:
TotalCycles = 410153
Stalls = 262375
NOPs = 0
IdleCycles = 0
DecodeStalls = 40519
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8695
Creating Stats:
TotalCycles = 411804
Stalls = 262458
NOPs = 0
IdleCycles = 0
DecodeStalls = 40602
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9507
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 24);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1114922
HALT operation received from [0][1][0] at cycle 1115553
HALT operation received from [0][2][0] at cycle 1126539
HALT operation received from [0][3][0] at cycle 1142433
HALT operation received from [0][4][0] at cycle 1156751
HALT operation received from [0][5][0] at cycle 1173067
HALT operation received from [0][6][0] at cycle 1187651
HALT operation received from [0][7][0] at cycle 1204106
Simulation finished, cycleCount = 1204107
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1114923
Stalls = 512066
NOPs = 0
IdleCycles = 0
DecodeStalls = 273419
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 32617
Creating Stats:
TotalCycles = 1115554
Stalls = 509695
NOPs = 0
IdleCycles = 0
DecodeStalls = 271048
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 34492
Creating Stats:
TotalCycles = 1126540
Stalls = 508441
NOPs = 0
IdleCycles = 0
DecodeStalls = 269794
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 40538
Creating Stats:
TotalCycles = 1142434
Stalls = 505799
NOPs = 0
IdleCycles = 0
DecodeStalls = 267152
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50409
Creating Stats:
TotalCycles = 1156752
Stalls = 503333
NOPs = 0
IdleCycles = 0
DecodeStalls = 264686
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 58901
Creating Stats:
TotalCycles = 1173068
Stalls = 500250
NOPs = 0
IdleCycles = 0
DecodeStalls = 261603
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 69541
Creating Stats:
TotalCycles = 1187652
Stalls = 496953
NOPs = 0
IdleCycles = 0
DecodeStalls = 258306
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 78843
Creating Stats:
TotalCycles = 1204107
Stalls = 494440
NOPs = 0
IdleCycles = 0
DecodeStalls = 255793
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 89044
RUN REDUCE
Device: 8 core 4w4a1m1ls1b
Compiling kernel: reduce

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_3;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    reduce(&BufferArg_0, &BufferArg_1, 2048, (&BufferArg_3 + (__builtin_le1_read_cpuid() * 256)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 3, which is a local, to 8192
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_reduce.s.bin  
  binaries/final_reduce.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 1152
DRAMFileSize = 16984
HALT operation received from [0][0][0] at cycle 400668
HALT operation received from [0][1][0] at cycle 401359
HALT operation received from [0][2][0] at cycle 403017
HALT operation received from [0][3][0] at cycle 404091
HALT operation received from [0][4][0] at cycle 407135
HALT operation received from [0][5][0] at cycle 408273
HALT operation received from [0][6][0] at cycle 410152
HALT operation received from [0][7][0] at cycle 411803
Simulation finished, cycleCount = 411804
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 400669
Stalls = 263033
NOPs = 0
IdleCycles = 0
DecodeStalls = 41177
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3334
Creating Stats:
TotalCycles = 401360
Stalls = 262931
NOPs = 0
IdleCycles = 0
DecodeStalls = 41075
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 3792
Creating Stats:
TotalCycles = 403018
Stalls = 262696
NOPs = 0
IdleCycles = 0
DecodeStalls = 40840
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 4772
Creating Stats:
TotalCycles = 404092
Stalls = 262544
NOPs = 0
IdleCycles = 0
DecodeStalls = 40688
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 5444
Creating Stats:
TotalCycles = 407136
Stalls = 262496
NOPs = 0
IdleCycles = 0
DecodeStalls = 40640
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7056
Creating Stats:
TotalCycles = 408274
Stalls = 262312
NOPs = 0
IdleCycles = 0
DecodeStalls = 40456
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 7716
Creating Stats:
TotalCycles = 410153
Stalls = 262375
NOPs = 0
IdleCycles = 0
DecodeStalls = 40519
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 8695
Creating Stats:
TotalCycles = 411804
Stalls = 262458
NOPs = 0
IdleCycles = 0
DecodeStalls = 40602
BranchesTaken = 73950
BranchesNotTaken = 4788
ControlFlowChange = 73952
MemoryAccessCount = 9507
RUN TOP_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: top_scan

Dimension 0: Global work size = 256, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_2;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 1;
  int workgroupX = 1;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    top_scan(&BufferArg_0, 8, (&BufferArg_2 + (__builtin_le1_read_cpuid() * 512)));
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 2, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 16984
Size of bss area : 
End of memory: 135872
Second Pass Completed
Run Simulation with:
  binaries/final_top_scan.s.bin  
  binaries/final_top_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 896
DRAMFileSize = 16984
HALT operation received from [0][1][0] at cycle 16
HALT operation received from [0][2][0] at cycle 19
HALT operation received from [0][3][0] at cycle 21
HALT operation received from [0][4][0] at cycle 23
HALT operation received from [0][5][0] at cycle 24
HALT operation received from [0][6][0] at cycle 26
HALT operation received from [0][7][0] at cycle 27
HALT operation received from [0][0][0] at cycle 974052
Simulation finished, cycleCount = 974053
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 974053
Stalls = 442261
NOPs = 0
IdleCycles = 0
DecodeStalls = 160261
BranchesTaken = 93998
BranchesNotTaken = 612
ControlFlowChange = 94000
MemoryAccessCount = 0
Creating Stats:
TotalCycles = 17
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 1
Creating Stats:
TotalCycles = 20
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 3
Creating Stats:
TotalCycles = 22
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 5
Creating Stats:
TotalCycles = 24
Stalls = 3
NOPs = 0
IdleCycles = 0
DecodeStalls = 0
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 25
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 7
Creating Stats:
TotalCycles = 27
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 9
Creating Stats:
TotalCycles = 28
Stalls = 4
NOPs = 0
IdleCycles = 0
DecodeStalls = 1
BranchesTaken = 1
BranchesNotTaken = 0
ControlFlowChange = 1
MemoryAccessCount = 10
RUN BOTTOM_SCAN
Device: 8 core 4w4a1m1ls1b
Compiling kernel: bottom_scan

Dimension 0: Global work size = 2048, Local work size = 256

Kernel launcher function:
extern int BufferArg_0;
extern int BufferArg_1;
extern int BufferArg_2;
extern int BufferArg_4;
int main(void) {
  int id = 0;
  int num_cores = 8;
  int total_workgroups = 8;
  int workgroupX = 8;
  int workgroupY = 0;
  int x = 0;
  int y = 0;
  id = __builtin_le1_read_cpuid();

  while (id < total_workgroups) {
    x = id;
    if (x >= workgroupX) {
      y = x / workgroupX;
      x = x % workgroupX;
    }
    if (y > workgroupY)
      return 0;

    __builtin_le1_set_group_id_1(y);
    __builtin_le1_set_group_id_0(x);
    bottom_scan(&BufferArg_0, &BufferArg_1, &BufferArg_2, 2048, (&BufferArg_4 + (__builtin_le1_read_cpuid() * 512)), 28);
    id += num_cores;
  }
  return id;
}

Setting the buffer size kernel arg 4, which is a local, to 16384
mem align: 0
dram_base_offset: 0
Size of data area : 33368
Size of bss area : 
End of memory: 266944
Second Pass Completed
Run Simulation with:
  binaries/final_bottom_scan.s.bin  
  binaries/final_bottom_scan.data.bin  
  8C_4w_1ls_8b.xml
IRAMFileSize = 2672
DRAMFileSize = 33368
HALT operation received from [0][0][0] at cycle 1114922
HALT operation received from [0][1][0] at cycle 1115553
HALT operation received from [0][2][0] at cycle 1126539
HALT operation received from [0][3][0] at cycle 1142433
HALT operation received from [0][4][0] at cycle 1156751
HALT operation received from [0][5][0] at cycle 1173067
HALT operation received from [0][6][0] at cycle 1187651
HALT operation received from [0][7][0] at cycle 1204106
Simulation finished, cycleCount = 1204107
 -------------------------------------------------------- 
Creating Stats:
TotalCycles = 1114923
Stalls = 512066
NOPs = 0
IdleCycles = 0
DecodeStalls = 273419
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 32617
Creating Stats:
TotalCycles = 1115554
Stalls = 509695
NOPs = 0
IdleCycles = 0
DecodeStalls = 271048
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 34492
Creating Stats:
TotalCycles = 1126540
Stalls = 508441
NOPs = 0
IdleCycles = 0
DecodeStalls = 269794
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 40538
Creating Stats:
TotalCycles = 1142434
Stalls = 505799
NOPs = 0
IdleCycles = 0
DecodeStalls = 267152
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 50409
Creating Stats:
TotalCycles = 1156752
Stalls = 503333
NOPs = 0
IdleCycles = 0
DecodeStalls = 264686
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 58901
Creating Stats:
TotalCycles = 1173068
Stalls = 500250
NOPs = 0
IdleCycles = 0
DecodeStalls = 261603
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 69541
Creating Stats:
TotalCycles = 1187652
Stalls = 496953
NOPs = 0
IdleCycles = 0
DecodeStalls = 258306
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 78843
Creating Stats:
TotalCycles = 1204107
Stalls = 494440
NOPs = 0
IdleCycles = 0
DecodeStalls = 255793
BranchesTaken = 79547
BranchesNotTaken = 728
ControlFlowChange = 79549
MemoryAccessCount = 89044
keys[0] = 0
keys[1] = 0
keys[2] = 0
keys[3] = 0
keys[4] = 0
keys[5] = 0
keys[6] = 0
keys[7] = 0
keys[8] = 0
keys[9] = 0
keys[10] = 0
keys[11] = 0
keys[12] = 0
keys[13] = 0
keys[14] = 0
keys[15] = 0
keys[16] = 0
keys[17] = 0
keys[18] = 0
keys[19] = 0
keys[20] = 0
keys[21] = 0
keys[22] = 0
keys[23] = 0
keys[24] = 0
keys[25] = 0
keys[26] = 0
keys[27] = 0
keys[28] = 0
keys[29] = 0
keys[30] = 0
keys[31] = 0
keys[32] = 0
keys[33] = 0
keys[34] = 0
keys[35] = 0
keys[36] = 0
keys[37] = 0
keys[38] = 0
keys[39] = 0
keys[40] = 0
keys[41] = 0
keys[42] = 0
keys[43] = 0
keys[44] = 0
keys[45] = 0
keys[46] = 0
keys[47] = 0
keys[48] = 0
keys[49] = 0
keys[50] = 0
keys[51] = 0
keys[52] = 0
keys[53] = 0
keys[54] = 0
keys[55] = 0
keys[56] = 0
keys[57] = 0
keys[58] = 0
keys[59] = 0
keys[60] = 0
keys[61] = 0
keys[62] = 0
keys[63] = 0
keys[64] = 0
keys[65] = 0
keys[66] = 0
keys[67] = 0
keys[68] = 0
keys[69] = 0
keys[70] = 0
keys[71] = 0
keys[72] = 0
keys[73] = 0
keys[74] = 0
keys[75] = 0
keys[76] = 0
keys[77] = 0
keys[78] = 0
keys[79] = 0
keys[80] = 0
keys[81] = 0
keys[82] = 0
keys[83] = 0
keys[84] = 0
keys[85] = 0
keys[86] = 0
keys[87] = 0
keys[88] = 0
keys[89] = 0
keys[90] = 0
keys[91] = 0
keys[92] = 0
keys[93] = 0
keys[94] = 0
keys[95] = 0
keys[96] = 0
keys[97] = 0
keys[98] = 0
keys[99] = 0
keys[100] = 0
keys[101] = 0
keys[102] = 0
keys[103] = 0
keys[104] = 0
keys[105] = 0
keys[106] = 0
keys[107] = 0
keys[108] = 0
keys[109] = 0
keys[110] = 0
keys[111] = 0
keys[112] = 0
keys[113] = 0
keys[114] = 0
keys[115] = 0
keys[116] = 0
keys[117] = 0
keys[118] = 0
keys[119] = 0
keys[120] = 0
keys[121] = 0
keys[122] = 0
keys[123] = 0
keys[124] = 0
keys[125] = 0
keys[126] = 0
keys[127] = 0
keys[128] = 1
keys[129] = 1
keys[130] = 1
keys[131] = 1
keys[132] = 1
keys[133] = 1
keys[134] = 1
keys[135] = 1
keys[136] = 1
keys[137] = 1
keys[138] = 1
keys[139] = 1
keys[140] = 1
keys[141] = 1
keys[142] = 1
keys[143] = 1
keys[144] = 1
keys[145] = 1
keys[146] = 1
keys[147] = 1
keys[148] = 1
keys[149] = 1
keys[150] = 1
keys[151] = 1
keys[152] = 1
keys[153] = 1
keys[154] = 1
keys[155] = 1
keys[156] = 1
keys[157] = 1
keys[158] = 1
keys[159] = 1
keys[160] = 1
keys[161] = 1
keys[162] = 1
keys[163] = 1
keys[164] = 1
keys[165] = 1
keys[166] = 1
keys[167] = 1
keys[168] = 1
keys[169] = 1
keys[170] = 1
keys[171] = 1
keys[172] = 1
keys[173] = 1
keys[174] = 1
keys[175] = 1
keys[176] = 1
keys[177] = 1
keys[178] = 1
keys[179] = 1
keys[180] = 1
keys[181] = 1
keys[182] = 1
keys[183] = 1
keys[184] = 1
keys[185] = 1
keys[186] = 1
keys[187] = 1
keys[188] = 1
keys[189] = 1
keys[190] = 1
keys[191] = 1
keys[192] = 1
keys[193] = 1
keys[194] = 1
keys[195] = 1
keys[196] = 1
keys[197] = 1
keys[198] = 1
keys[199] = 1
keys[200] = 1
keys[201] = 1
keys[202] = 1
keys[203] = 1
keys[204] = 1
keys[205] = 1
keys[206] = 1
keys[207] = 1
keys[208] = 1
keys[209] = 1
keys[210] = 1
keys[211] = 1
keys[212] = 1
keys[213] = 1
keys[214] = 1
keys[215] = 1
keys[216] = 1
keys[217] = 1
keys[218] = 1
keys[219] = 1
keys[220] = 1
keys[221] = 1
keys[222] = 1
keys[223] = 1
keys[224] = 1
keys[225] = 1
keys[226] = 1
keys[227] = 1
keys[228] = 1
keys[229] = 1
keys[230] = 1
keys[231] = 1
keys[232] = 1
keys[233] = 1
keys[234] = 1
keys[235] = 1
keys[236] = 1
keys[237] = 1
keys[238] = 1
keys[239] = 1
keys[240] = 1
keys[241] = 1
keys[242] = 1
keys[243] = 1
keys[244] = 1
keys[245] = 1
keys[246] = 1
keys[247] = 1
keys[248] = 1
keys[249] = 1
keys[250] = 1
keys[251] = 1
keys[252] = 1
keys[253] = 1
keys[254] = 1
keys[255] = 1
keys[256] = 2
keys[257] = 2
keys[258] = 2
keys[259] = 2
keys[260] = 2
keys[261] = 2
keys[262] = 2
keys[263] = 2
keys[264] = 2
keys[265] = 2
keys[266] = 2
keys[267] = 2
keys[268] = 2
keys[269] = 2
keys[270] = 2
keys[271] = 2
keys[272] = 2
keys[273] = 2
keys[274] = 2
keys[275] = 2
keys[276] = 2
keys[277] = 2
keys[278] = 2
keys[279] = 2
keys[280] = 2
keys[281] = 2
keys[282] = 2
keys[283] = 2
keys[284] = 2
keys[285] = 2
keys[286] = 2
keys[287] = 2
keys[288] = 2
keys[289] = 2
keys[290] = 2
keys[291] = 2
keys[292] = 2
keys[293] = 2
keys[294] = 2
keys[295] = 2
keys[296] = 2
keys[297] = 2
keys[298] = 2
keys[299] = 2
keys[300] = 2
keys[301] = 2
keys[302] = 2
keys[303] = 2
keys[304] = 2
keys[305] = 2
keys[306] = 2
keys[307] = 2
keys[308] = 2
keys[309] = 2
keys[310] = 2
keys[311] = 2
keys[312] = 2
keys[313] = 2
keys[314] = 2
keys[315] = 2
keys[316] = 2
keys[317] = 2
keys[318] = 2
keys[319] = 2
keys[320] = 2
keys[321] = 2
keys[322] = 2
keys[323] = 2
keys[324] = 2
keys[325] = 2
keys[326] = 2
keys[327] = 2
keys[328] = 2
keys[329] = 2
keys[330] = 2
keys[331] = 2
keys[332] = 2
keys[333] = 2
keys[334] = 2
keys[335] = 2
keys[336] = 2
keys[337] = 2
keys[338] = 2
keys[339] = 2
keys[340] = 2
keys[341] = 2
keys[342] = 2
keys[343] = 2
keys[344] = 2
keys[345] = 2
keys[346] = 2
keys[347] = 2
keys[348] = 2
keys[349] = 2
keys[350] = 2
keys[351] = 2
keys[352] = 2
keys[353] = 2
keys[354] = 2
keys[355] = 2
keys[356] = 2
keys[357] = 2
keys[358] = 2
keys[359] = 2
keys[360] = 2
keys[361] = 2
keys[362] = 2
keys[363] = 2
keys[364] = 2
keys[365] = 2
keys[366] = 2
keys[367] = 2
keys[368] = 2
keys[369] = 2
keys[370] = 2
keys[371] = 2
keys[372] = 2
keys[373] = 2
keys[374] = 2
keys[375] = 2
keys[376] = 2
keys[377] = 2
keys[378] = 2
keys[379] = 2
keys[380] = 2
keys[381] = 2
keys[382] = 2
keys[383] = 2
keys[384] = 3
keys[385] = 3
keys[386] = 3
keys[387] = 3
keys[388] = 3
keys[389] = 3
keys[390] = 3
keys[391] = 3
keys[392] = 3
keys[393] = 3
keys[394] = 3
keys[395] = 3
keys[396] = 3
keys[397] = 3
keys[398] = 3
keys[399] = 3
keys[400] = 3
keys[401] = 3
keys[402] = 3
keys[403] = 3
keys[404] = 3
keys[405] = 3
keys[406] = 3
keys[407] = 3
keys[408] = 3
keys[409] = 3
keys[410] = 3
keys[411] = 3
keys[412] = 3
keys[413] = 3
keys[414] = 3
keys[415] = 3
keys[416] = 3
keys[417] = 3
keys[418] = 3
keys[419] = 3
keys[420] = 3
keys[421] = 3
keys[422] = 3
keys[423] = 3
keys[424] = 3
keys[425] = 3
keys[426] = 3
keys[427] = 3
keys[428] = 3
keys[429] = 3
keys[430] = 3
keys[431] = 3
keys[432] = 3
keys[433] = 3
keys[434] = 3
keys[435] = 3
keys[436] = 3
keys[437] = 3
keys[438] = 3
keys[439] = 3
keys[440] = 3
keys[441] = 3
keys[442] = 3
keys[443] = 3
keys[444] = 3
keys[445] = 3
keys[446] = 3
keys[447] = 3
keys[448] = 3
keys[449] = 3
keys[450] = 3
keys[451] = 3
keys[452] = 3
keys[453] = 3
keys[454] = 3
keys[455] = 3
keys[456] = 3
keys[457] = 3
keys[458] = 3
keys[459] = 3
keys[460] = 3
keys[461] = 3
keys[462] = 3
keys[463] = 3
keys[464] = 3
keys[465] = 3
keys[466] = 3
keys[467] = 3
keys[468] = 3
keys[469] = 3
keys[470] = 3
keys[471] = 3
keys[472] = 3
keys[473] = 3
keys[474] = 3
keys[475] = 3
keys[476] = 3
keys[477] = 3
keys[478] = 3
keys[479] = 3
keys[480] = 3
keys[481] = 3
keys[482] = 3
keys[483] = 3
keys[484] = 3
keys[485] = 3
keys[486] = 3
keys[487] = 3
keys[488] = 3
keys[489] = 3
keys[490] = 3
keys[491] = 3
keys[492] = 3
keys[493] = 3
keys[494] = 3
keys[495] = 3
keys[496] = 3
keys[497] = 3
keys[498] = 3
keys[499] = 3
keys[500] = 3
keys[501] = 3
keys[502] = 3
keys[503] = 3
keys[504] = 3
keys[505] = 3
keys[506] = 3
keys[507] = 3
keys[508] = 3
keys[509] = 3
keys[510] = 3
keys[511] = 3
keys[512] = 4
keys[513] = 4
keys[514] = 4
keys[515] = 4
keys[516] = 4
keys[517] = 4
keys[518] = 4
keys[519] = 4
keys[520] = 4
keys[521] = 4
keys[522] = 4
keys[523] = 4
keys[524] = 4
keys[525] = 4
keys[526] = 4
keys[527] = 4
keys[528] = 4
keys[529] = 4
keys[530] = 4
keys[531] = 4
keys[532] = 4
keys[533] = 4
keys[534] = 4
keys[535] = 4
keys[536] = 4
keys[537] = 4
keys[538] = 4
keys[539] = 4
keys[540] = 4
keys[541] = 4
keys[542] = 4
keys[543] = 4
keys[544] = 4
keys[545] = 4
keys[546] = 4
keys[547] = 4
keys[548] = 4
keys[549] = 4
keys[550] = 4
keys[551] = 4
keys[552] = 4
keys[553] = 4
keys[554] = 4
keys[555] = 4
keys[556] = 4
keys[557] = 4
keys[558] = 4
keys[559] = 4
keys[560] = 4
keys[561] = 4
keys[562] = 4
keys[563] = 4
keys[564] = 4
keys[565] = 4
keys[566] = 4
keys[567] = 4
keys[568] = 4
keys[569] = 4
keys[570] = 4
keys[571] = 4
keys[572] = 4
keys[573] = 4
keys[574] = 4
keys[575] = 4
keys[576] = 4
keys[577] = 4
keys[578] = 4
keys[579] = 4
keys[580] = 4
keys[581] = 4
keys[582] = 4
keys[583] = 4
keys[584] = 4
keys[585] = 4
keys[586] = 4
keys[587] = 4
keys[588] = 4
keys[589] = 4
keys[590] = 4
keys[591] = 4
keys[592] = 4
keys[593] = 4
keys[594] = 4
keys[595] = 4
keys[596] = 4
keys[597] = 4
keys[598] = 4
keys[599] = 4
keys[600] = 4
keys[601] = 4
keys[602] = 4
keys[603] = 4
keys[604] = 4
keys[605] = 4
keys[606] = 4
keys[607] = 4
keys[608] = 4
keys[609] = 4
keys[610] = 4
keys[611] = 4
keys[612] = 4
keys[613] = 4
keys[614] = 4
keys[615] = 4
keys[616] = 4
keys[617] = 4
keys[618] = 4
keys[619] = 4
keys[620] = 4
keys[621] = 4
keys[622] = 4
keys[623] = 4
keys[624] = 4
keys[625] = 4
keys[626] = 4
keys[627] = 4
keys[628] = 4
keys[629] = 4
keys[630] = 4
keys[631] = 4
keys[632] = 4
keys[633] = 4
keys[634] = 4
keys[635] = 4
keys[636] = 4
keys[637] = 4
keys[638] = 4
keys[639] = 4
keys[640] = 5
keys[641] = 5
keys[642] = 5
keys[643] = 5
keys[644] = 5
keys[645] = 5
keys[646] = 5
keys[647] = 5
keys[648] = 5
keys[649] = 5
keys[650] = 5
keys[651] = 5
keys[652] = 5
keys[653] = 5
keys[654] = 5
keys[655] = 5
keys[656] = 5
keys[657] = 5
keys[658] = 5
keys[659] = 5
keys[660] = 5
keys[661] = 5
keys[662] = 5
keys[663] = 5
keys[664] = 5
keys[665] = 5
keys[666] = 5
keys[667] = 5
keys[668] = 5
keys[669] = 5
keys[670] = 5
keys[671] = 5
keys[672] = 5
keys[673] = 5
keys[674] = 5
keys[675] = 5
keys[676] = 5
keys[677] = 5
keys[678] = 5
keys[679] = 5
keys[680] = 5
keys[681] = 5
keys[682] = 5
keys[683] = 5
keys[684] = 5
keys[685] = 5
keys[686] = 5
keys[687] = 5
keys[688] = 5
keys[689] = 5
keys[690] = 5
keys[691] = 5
keys[692] = 5
keys[693] = 5
keys[694] = 5
keys[695] = 5
keys[696] = 5
keys[697] = 5
keys[698] = 5
keys[699] = 5
keys[700] = 5
keys[701] = 5
keys[702] = 5
keys[703] = 5
keys[704] = 5
keys[705] = 5
keys[706] = 5
keys[707] = 5
keys[708] = 5
keys[709] = 5
keys[710] = 5
keys[711] = 5
keys[712] = 5
keys[713] = 5
keys[714] = 5
keys[715] = 5
keys[716] = 5
keys[717] = 5
keys[718] = 5
keys[719] = 5
keys[720] = 5
keys[721] = 5
keys[722] = 5
keys[723] = 5
keys[724] = 5
keys[725] = 5
keys[726] = 5
keys[727] = 5
keys[728] = 5
keys[729] = 5
keys[730] = 5
keys[731] = 5
keys[732] = 5
keys[733] = 5
keys[734] = 5
keys[735] = 5
keys[736] = 5
keys[737] = 5
keys[738] = 5
keys[739] = 5
keys[740] = 5
keys[741] = 5
keys[742] = 5
keys[743] = 5
keys[744] = 5
keys[745] = 5
keys[746] = 5
keys[747] = 5
keys[748] = 5
keys[749] = 5
keys[750] = 5
keys[751] = 5
keys[752] = 5
keys[753] = 5
keys[754] = 5
keys[755] = 5
keys[756] = 5
keys[757] = 5
keys[758] = 5
keys[759] = 5
keys[760] = 5
keys[761] = 5
keys[762] = 5
keys[763] = 5
keys[764] = 5
keys[765] = 5
keys[766] = 5
keys[767] = 5
keys[768] = 6
keys[769] = 6
keys[770] = 6
keys[771] = 6
keys[772] = 6
keys[773] = 6
keys[774] = 6
keys[775] = 6
keys[776] = 6
keys[777] = 6
keys[778] = 6
keys[779] = 6
keys[780] = 6
keys[781] = 6
keys[782] = 6
keys[783] = 6
keys[784] = 6
keys[785] = 6
keys[786] = 6
keys[787] = 6
keys[788] = 6
keys[789] = 6
keys[790] = 6
keys[791] = 6
keys[792] = 6
keys[793] = 6
keys[794] = 6
keys[795] = 6
keys[796] = 6
keys[797] = 6
keys[798] = 6
keys[799] = 6
keys[800] = 6
keys[801] = 6
keys[802] = 6
keys[803] = 6
keys[804] = 6
keys[805] = 6
keys[806] = 6
keys[807] = 6
keys[808] = 6
keys[809] = 6
keys[810] = 6
keys[811] = 6
keys[812] = 6
keys[813] = 6
keys[814] = 6
keys[815] = 6
keys[816] = 6
keys[817] = 6
keys[818] = 6
keys[819] = 6
keys[820] = 6
keys[821] = 6
keys[822] = 6
keys[823] = 6
keys[824] = 6
keys[825] = 6
keys[826] = 6
keys[827] = 6
keys[828] = 6
keys[829] = 6
keys[830] = 6
keys[831] = 6
keys[832] = 6
keys[833] = 6
keys[834] = 6
keys[835] = 6
keys[836] = 6
keys[837] = 6
keys[838] = 6
keys[839] = 6
keys[840] = 6
keys[841] = 6
keys[842] = 6
keys[843] = 6
keys[844] = 6
keys[845] = 6
keys[846] = 6
keys[847] = 6
keys[848] = 6
keys[849] = 6
keys[850] = 6
keys[851] = 6
keys[852] = 6
keys[853] = 6
keys[854] = 6
keys[855] = 6
keys[856] = 6
keys[857] = 6
keys[858] = 6
keys[859] = 6
keys[860] = 6
keys[861] = 6
keys[862] = 6
keys[863] = 6
keys[864] = 6
keys[865] = 6
keys[866] = 6
keys[867] = 6
keys[868] = 6
keys[869] = 6
keys[870] = 6
keys[871] = 6
keys[872] = 6
keys[873] = 6
keys[874] = 6
keys[875] = 6
keys[876] = 6
keys[877] = 6
keys[878] = 6
keys[879] = 6
keys[880] = 6
keys[881] = 6
keys[882] = 6
keys[883] = 6
keys[884] = 6
keys[885] = 6
keys[886] = 6
keys[887] = 6
keys[888] = 6
keys[889] = 6
keys[890] = 6
keys[891] = 6
keys[892] = 6
keys[893] = 6
keys[894] = 6
keys[895] = 6
keys[896] = 7
keys[897] = 7
keys[898] = 7
keys[899] = 7
keys[900] = 7
keys[901] = 7
keys[902] = 7
keys[903] = 7
keys[904] = 7
keys[905] = 7
keys[906] = 7
keys[907] = 7
keys[908] = 7
keys[909] = 7
keys[910] = 7
keys[911] = 7
keys[912] = 7
keys[913] = 7
keys[914] = 7
keys[915] = 7
keys[916] = 7
keys[917] = 7
keys[918] = 7
keys[919] = 7
keys[920] = 7
keys[921] = 7
keys[922] = 7
keys[923] = 7
keys[924] = 7
keys[925] = 7
keys[926] = 7
keys[927] = 7
keys[928] = 7
keys[929] = 7
keys[930] = 7
keys[931] = 7
keys[932] = 7
keys[933] = 7
keys[934] = 7
keys[935] = 7
keys[936] = 7
keys[937] = 7
keys[938] = 7
keys[939] = 7
keys[940] = 7
keys[941] = 7
keys[942] = 7
keys[943] = 7
keys[944] = 7
keys[945] = 7
keys[946] = 7
keys[947] = 7
keys[948] = 7
keys[949] = 7
keys[950] = 7
keys[951] = 7
keys[952] = 7
keys[953] = 7
keys[954] = 7
keys[955] = 7
keys[956] = 7
keys[957] = 7
keys[958] = 7
keys[959] = 7
keys[960] = 7
keys[961] = 7
keys[962] = 7
keys[963] = 7
keys[964] = 7
keys[965] = 7
keys[966] = 7
keys[967] = 7
keys[968] = 7
keys[969] = 7
keys[970] = 7
keys[971] = 7
keys[972] = 7
keys[973] = 7
keys[974] = 7
keys[975] = 7
keys[976] = 7
keys[977] = 7
keys[978] = 7
keys[979] = 7
keys[980] = 7
keys[981] = 7
keys[982] = 7
keys[983] = 7
keys[984] = 7
keys[985] = 7
keys[986] = 7
keys[987] = 7
keys[988] = 7
keys[989] = 7
keys[990] = 7
keys[991] = 7
keys[992] = 7
keys[993] = 7
keys[994] = 7
keys[995] = 7
keys[996] = 7
keys[997] = 7
keys[998] = 7
keys[999] = 7
keys[1000] = 7
keys[1001] = 7
keys[1002] = 7
keys[1003] = 7
keys[1004] = 7
keys[1005] = 7
keys[1006] = 7
keys[1007] = 7
keys[1008] = 7
keys[1009] = 7
keys[1010] = 7
keys[1011] = 7
keys[1012] = 7
keys[1013] = 7
keys[1014] = 7
keys[1015] = 7
keys[1016] = 7
keys[1017] = 7
keys[1018] = 7
keys[1019] = 7
keys[1020] = 7
keys[1021] = 7
keys[1022] = 7
keys[1023] = 7
keys[1024] = 8
keys[1025] = 8
keys[1026] = 8
keys[1027] = 8
keys[1028] = 8
keys[1029] = 8
keys[1030] = 8
keys[1031] = 8
keys[1032] = 8
keys[1033] = 8
keys[1034] = 8
keys[1035] = 8
keys[1036] = 8
keys[1037] = 8
keys[1038] = 8
keys[1039] = 8
keys[1040] = 8
keys[1041] = 8
keys[1042] = 8
keys[1043] = 8
keys[1044] = 8
keys[1045] = 8
keys[1046] = 8
keys[1047] = 8
keys[1048] = 8
keys[1049] = 8
keys[1050] = 8
keys[1051] = 8
keys[1052] = 8
keys[1053] = 8
keys[1054] = 8
keys[1055] = 8
keys[1056] = 8
keys[1057] = 8
keys[1058] = 8
keys[1059] = 8
keys[1060] = 8
keys[1061] = 8
keys[1062] = 8
keys[1063] = 8
keys[1064] = 8
keys[1065] = 8
keys[1066] = 8
keys[1067] = 8
keys[1068] = 8
keys[1069] = 8
keys[1070] = 8
keys[1071] = 8
keys[1072] = 8
keys[1073] = 8
keys[1074] = 8
keys[1075] = 8
keys[1076] = 8
keys[1077] = 8
keys[1078] = 8
keys[1079] = 8
keys[1080] = 8
keys[1081] = 8
keys[1082] = 8
keys[1083] = 8
keys[1084] = 8
keys[1085] = 8
keys[1086] = 8
keys[1087] = 8
keys[1088] = 8
keys[1089] = 8
keys[1090] = 8
keys[1091] = 8
keys[1092] = 8
keys[1093] = 8
keys[1094] = 8
keys[1095] = 8
keys[1096] = 8
keys[1097] = 8
keys[1098] = 8
keys[1099] = 8
keys[1100] = 8
keys[1101] = 8
keys[1102] = 8
keys[1103] = 8
keys[1104] = 8
keys[1105] = 8
keys[1106] = 8
keys[1107] = 8
keys[1108] = 8
keys[1109] = 8
keys[1110] = 8
keys[1111] = 8
keys[1112] = 8
keys[1113] = 8
keys[1114] = 8
keys[1115] = 8
keys[1116] = 8
keys[1117] = 8
keys[1118] = 8
keys[1119] = 8
keys[1120] = 8
keys[1121] = 8
keys[1122] = 8
keys[1123] = 8
keys[1124] = 8
keys[1125] = 8
keys[1126] = 8
keys[1127] = 8
keys[1128] = 8
keys[1129] = 8
keys[1130] = 8
keys[1131] = 8
keys[1132] = 8
keys[1133] = 8
keys[1134] = 8
keys[1135] = 8
keys[1136] = 8
keys[1137] = 8
keys[1138] = 8
keys[1139] = 8
keys[1140] = 8
keys[1141] = 8
keys[1142] = 8
keys[1143] = 8
keys[1144] = 8
keys[1145] = 8
keys[1146] = 8
keys[1147] = 8
keys[1148] = 8
keys[1149] = 8
keys[1150] = 8
keys[1151] = 8
keys[1152] = 9
keys[1153] = 9
keys[1154] = 9
keys[1155] = 9
keys[1156] = 9
keys[1157] = 9
keys[1158] = 9
keys[1159] = 9
keys[1160] = 9
keys[1161] = 9
keys[1162] = 9
keys[1163] = 9
keys[1164] = 9
keys[1165] = 9
keys[1166] = 9
keys[1167] = 9
keys[1168] = 9
keys[1169] = 9
keys[1170] = 9
keys[1171] = 9
keys[1172] = 9
keys[1173] = 9
keys[1174] = 9
keys[1175] = 9
keys[1176] = 9
keys[1177] = 9
keys[1178] = 9
keys[1179] = 9
keys[1180] = 9
keys[1181] = 9
keys[1182] = 9
keys[1183] = 9
keys[1184] = 9
keys[1185] = 9
keys[1186] = 9
keys[1187] = 9
keys[1188] = 9
keys[1189] = 9
keys[1190] = 9
keys[1191] = 9
keys[1192] = 9
keys[1193] = 9
keys[1194] = 9
keys[1195] = 9
keys[1196] = 9
keys[1197] = 9
keys[1198] = 9
keys[1199] = 9
keys[1200] = 9
keys[1201] = 9
keys[1202] = 9
keys[1203] = 9
keys[1204] = 9
keys[1205] = 9
keys[1206] = 9
keys[1207] = 9
keys[1208] = 9
keys[1209] = 9
keys[1210] = 9
keys[1211] = 9
keys[1212] = 9
keys[1213] = 9
keys[1214] = 9
keys[1215] = 9
keys[1216] = 9
keys[1217] = 9
keys[1218] = 9
keys[1219] = 9
keys[1220] = 9
keys[1221] = 9
keys[1222] = 9
keys[1223] = 9
keys[1224] = 9
keys[1225] = 9
keys[1226] = 9
keys[1227] = 9
keys[1228] = 9
keys[1229] = 9
keys[1230] = 9
keys[1231] = 9
keys[1232] = 9
keys[1233] = 9
keys[1234] = 9
keys[1235] = 9
keys[1236] = 9
keys[1237] = 9
keys[1238] = 9
keys[1239] = 9
keys[1240] = 9
keys[1241] = 9
keys[1242] = 9
keys[1243] = 9
keys[1244] = 9
keys[1245] = 9
keys[1246] = 9
keys[1247] = 9
keys[1248] = 9
keys[1249] = 9
keys[1250] = 9
keys[1251] = 9
keys[1252] = 9
keys[1253] = 9
keys[1254] = 9
keys[1255] = 9
keys[1256] = 9
keys[1257] = 9
keys[1258] = 9
keys[1259] = 9
keys[1260] = 9
keys[1261] = 9
keys[1262] = 9
keys[1263] = 9
keys[1264] = 9
keys[1265] = 9
keys[1266] = 9
keys[1267] = 9
keys[1268] = 9
keys[1269] = 9
keys[1270] = 9
keys[1271] = 9
keys[1272] = 9
keys[1273] = 9
keys[1274] = 9
keys[1275] = 9
keys[1276] = 9
keys[1277] = 9
keys[1278] = 9
keys[1279] = 9
keys[1280] = 10
keys[1281] = 10
keys[1282] = 10
keys[1283] = 10
keys[1284] = 10
keys[1285] = 10
keys[1286] = 10
keys[1287] = 10
keys[1288] = 10
keys[1289] = 10
keys[1290] = 10
keys[1291] = 10
keys[1292] = 10
keys[1293] = 10
keys[1294] = 10
keys[1295] = 10
keys[1296] = 10
keys[1297] = 10
keys[1298] = 10
keys[1299] = 10
keys[1300] = 10
keys[1301] = 10
keys[1302] = 10
keys[1303] = 10
keys[1304] = 10
keys[1305] = 10
keys[1306] = 10
keys[1307] = 10
keys[1308] = 10
keys[1309] = 10
keys[1310] = 10
keys[1311] = 10
keys[1312] = 10
keys[1313] = 10
keys[1314] = 10
keys[1315] = 10
keys[1316] = 10
keys[1317] = 10
keys[1318] = 10
keys[1319] = 10
keys[1320] = 10
keys[1321] = 10
keys[1322] = 10
keys[1323] = 10
keys[1324] = 10
keys[1325] = 10
keys[1326] = 10
keys[1327] = 10
keys[1328] = 10
keys[1329] = 10
keys[1330] = 10
keys[1331] = 10
keys[1332] = 10
keys[1333] = 10
keys[1334] = 10
keys[1335] = 10
keys[1336] = 10
keys[1337] = 10
keys[1338] = 10
keys[1339] = 10
keys[1340] = 10
keys[1341] = 10
keys[1342] = 10
keys[1343] = 10
keys[1344] = 10
keys[1345] = 10
keys[1346] = 10
keys[1347] = 10
keys[1348] = 10
keys[1349] = 10
keys[1350] = 10
keys[1351] = 10
keys[1352] = 10
keys[1353] = 10
keys[1354] = 10
keys[1355] = 10
keys[1356] = 10
keys[1357] = 10
keys[1358] = 10
keys[1359] = 10
keys[1360] = 10
keys[1361] = 10
keys[1362] = 10
keys[1363] = 10
keys[1364] = 10
keys[1365] = 10
keys[1366] = 10
keys[1367] = 10
keys[1368] = 10
keys[1369] = 10
keys[1370] = 10
keys[1371] = 10
keys[1372] = 10
keys[1373] = 10
keys[1374] = 10
keys[1375] = 10
keys[1376] = 10
keys[1377] = 10
keys[1378] = 10
keys[1379] = 10
keys[1380] = 10
keys[1381] = 10
keys[1382] = 10
keys[1383] = 10
keys[1384] = 10
keys[1385] = 10
keys[1386] = 10
keys[1387] = 10
keys[1388] = 10
keys[1389] = 10
keys[1390] = 10
keys[1391] = 10
keys[1392] = 10
keys[1393] = 10
keys[1394] = 10
keys[1395] = 10
keys[1396] = 10
keys[1397] = 10
keys[1398] = 10
keys[1399] = 10
keys[1400] = 10
keys[1401] = 10
keys[1402] = 10
keys[1403] = 10
keys[1404] = 10
keys[1405] = 10
keys[1406] = 10
keys[1407] = 10
keys[1408] = 11
keys[1409] = 11
keys[1410] = 11
keys[1411] = 11
keys[1412] = 11
keys[1413] = 11
keys[1414] = 11
keys[1415] = 11
keys[1416] = 11
keys[1417] = 11
keys[1418] = 11
keys[1419] = 11
keys[1420] = 11
keys[1421] = 11
keys[1422] = 11
keys[1423] = 11
keys[1424] = 11
keys[1425] = 11
keys[1426] = 11
keys[1427] = 11
keys[1428] = 11
keys[1429] = 11
keys[1430] = 11
keys[1431] = 11
keys[1432] = 11
keys[1433] = 11
keys[1434] = 11
keys[1435] = 11
keys[1436] = 11
keys[1437] = 11
keys[1438] = 11
keys[1439] = 11
keys[1440] = 11
keys[1441] = 11
keys[1442] = 11
keys[1443] = 11
keys[1444] = 11
keys[1445] = 11
keys[1446] = 11
keys[1447] = 11
keys[1448] = 11
keys[1449] = 11
keys[1450] = 11
keys[1451] = 11
keys[1452] = 11
keys[1453] = 11
keys[1454] = 11
keys[1455] = 11
keys[1456] = 11
keys[1457] = 11
keys[1458] = 11
keys[1459] = 11
keys[1460] = 11
keys[1461] = 11
keys[1462] = 11
keys[1463] = 11
keys[1464] = 11
keys[1465] = 11
keys[1466] = 11
keys[1467] = 11
keys[1468] = 11
keys[1469] = 11
keys[1470] = 11
keys[1471] = 11
keys[1472] = 11
keys[1473] = 11
keys[1474] = 11
keys[1475] = 11
keys[1476] = 11
keys[1477] = 11
keys[1478] = 11
keys[1479] = 11
keys[1480] = 11
keys[1481] = 11
keys[1482] = 11
keys[1483] = 11
keys[1484] = 11
keys[1485] = 11
keys[1486] = 11
keys[1487] = 11
keys[1488] = 11
keys[1489] = 11
keys[1490] = 11
keys[1491] = 11
keys[1492] = 11
keys[1493] = 11
keys[1494] = 11
keys[1495] = 11
keys[1496] = 11
keys[1497] = 11
keys[1498] = 11
keys[1499] = 11
keys[1500] = 11
keys[1501] = 11
keys[1502] = 11
keys[1503] = 11
keys[1504] = 11
keys[1505] = 11
keys[1506] = 11
keys[1507] = 11
keys[1508] = 11
keys[1509] = 11
keys[1510] = 11
keys[1511] = 11
keys[1512] = 11
keys[1513] = 11
keys[1514] = 11
keys[1515] = 11
keys[1516] = 11
keys[1517] = 11
keys[1518] = 11
keys[1519] = 11
keys[1520] = 11
keys[1521] = 11
keys[1522] = 11
keys[1523] = 11
keys[1524] = 11
keys[1525] = 11
keys[1526] = 11
keys[1527] = 11
keys[1528] = 11
keys[1529] = 11
keys[1530] = 11
keys[1531] = 11
keys[1532] = 11
keys[1533] = 11
keys[1534] = 11
keys[1535] = 11
keys[1536] = 12
keys[1537] = 12
keys[1538] = 12
keys[1539] = 12
keys[1540] = 12
keys[1541] = 12
keys[1542] = 12
keys[1543] = 12
keys[1544] = 12
keys[1545] = 12
keys[1546] = 12
keys[1547] = 12
keys[1548] = 12
keys[1549] = 12
keys[1550] = 12
keys[1551] = 12
keys[1552] = 12
keys[1553] = 12
keys[1554] = 12
keys[1555] = 12
keys[1556] = 12
keys[1557] = 12
keys[1558] = 12
keys[1559] = 12
keys[1560] = 12
keys[1561] = 12
keys[1562] = 12
keys[1563] = 12
keys[1564] = 12
keys[1565] = 12
keys[1566] = 12
keys[1567] = 12
keys[1568] = 12
keys[1569] = 12
keys[1570] = 12
keys[1571] = 12
keys[1572] = 12
keys[1573] = 12
keys[1574] = 12
keys[1575] = 12
keys[1576] = 12
keys[1577] = 12
keys[1578] = 12
keys[1579] = 12
keys[1580] = 12
keys[1581] = 12
keys[1582] = 12
keys[1583] = 12
keys[1584] = 12
keys[1585] = 12
keys[1586] = 12
keys[1587] = 12
keys[1588] = 12
keys[1589] = 12
keys[1590] = 12
keys[1591] = 12
keys[1592] = 12
keys[1593] = 12
keys[1594] = 12
keys[1595] = 12
keys[1596] = 12
keys[1597] = 12
keys[1598] = 12
keys[1599] = 12
keys[1600] = 12
keys[1601] = 12
keys[1602] = 12
keys[1603] = 12
keys[1604] = 12
keys[1605] = 12
keys[1606] = 12
keys[1607] = 12
keys[1608] = 12
keys[1609] = 12
keys[1610] = 12
keys[1611] = 12
keys[1612] = 12
keys[1613] = 12
keys[1614] = 12
keys[1615] = 12
keys[1616] = 12
keys[1617] = 12
keys[1618] = 12
keys[1619] = 12
keys[1620] = 12
keys[1621] = 12
keys[1622] = 12
keys[1623] = 12
keys[1624] = 12
keys[1625] = 12
keys[1626] = 12
keys[1627] = 12
keys[1628] = 12
keys[1629] = 12
keys[1630] = 12
keys[1631] = 12
keys[1632] = 12
keys[1633] = 12
keys[1634] = 12
keys[1635] = 12
keys[1636] = 12
keys[1637] = 12
keys[1638] = 12
keys[1639] = 12
keys[1640] = 12
keys[1641] = 12
keys[1642] = 12
keys[1643] = 12
keys[1644] = 12
keys[1645] = 12
keys[1646] = 12
keys[1647] = 12
keys[1648] = 12
keys[1649] = 12
keys[1650] = 12
keys[1651] = 12
keys[1652] = 12
keys[1653] = 12
keys[1654] = 12
keys[1655] = 12
keys[1656] = 12
keys[1657] = 12
keys[1658] = 12
keys[1659] = 12
keys[1660] = 12
keys[1661] = 12
keys[1662] = 12
keys[1663] = 12
keys[1664] = 13
keys[1665] = 13
keys[1666] = 13
keys[1667] = 13
keys[1668] = 13
keys[1669] = 13
keys[1670] = 13
keys[1671] = 13
keys[1672] = 13
keys[1673] = 13
keys[1674] = 13
keys[1675] = 13
keys[1676] = 13
keys[1677] = 13
keys[1678] = 13
keys[1679] = 13
keys[1680] = 13
keys[1681] = 13
keys[1682] = 13
keys[1683] = 13
keys[1684] = 13
keys[1685] = 13
keys[1686] = 13
keys[1687] = 13
keys[1688] = 13
keys[1689] = 13
keys[1690] = 13
keys[1691] = 13
keys[1692] = 13
keys[1693] = 13
keys[1694] = 13
keys[1695] = 13
keys[1696] = 13
keys[1697] = 13
keys[1698] = 13
keys[1699] = 13
keys[1700] = 13
keys[1701] = 13
keys[1702] = 13
keys[1703] = 13
keys[1704] = 13
keys[1705] = 13
keys[1706] = 13
keys[1707] = 13
keys[1708] = 13
keys[1709] = 13
keys[1710] = 13
keys[1711] = 13
keys[1712] = 13
keys[1713] = 13
keys[1714] = 13
keys[1715] = 13
keys[1716] = 13
keys[1717] = 13
keys[1718] = 13
keys[1719] = 13
keys[1720] = 13
keys[1721] = 13
keys[1722] = 13
keys[1723] = 13
keys[1724] = 13
keys[1725] = 13
keys[1726] = 13
keys[1727] = 13
keys[1728] = 13
keys[1729] = 13
keys[1730] = 13
keys[1731] = 13
keys[1732] = 13
keys[1733] = 13
keys[1734] = 13
keys[1735] = 13
keys[1736] = 13
keys[1737] = 13
keys[1738] = 13
keys[1739] = 13
keys[1740] = 13
keys[1741] = 13
keys[1742] = 13
keys[1743] = 13
keys[1744] = 13
keys[1745] = 13
keys[1746] = 13
keys[1747] = 13
keys[1748] = 13
keys[1749] = 13
keys[1750] = 13
keys[1751] = 13
keys[1752] = 13
keys[1753] = 13
keys[1754] = 13
keys[1755] = 13
keys[1756] = 13
keys[1757] = 13
keys[1758] = 13
keys[1759] = 13
keys[1760] = 13
keys[1761] = 13
keys[1762] = 13
keys[1763] = 13
keys[1764] = 13
keys[1765] = 13
keys[1766] = 13
keys[1767] = 13
keys[1768] = 13
keys[1769] = 13
keys[1770] = 13
keys[1771] = 13
keys[1772] = 13
keys[1773] = 13
keys[1774] = 13
keys[1775] = 13
keys[1776] = 13
keys[1777] = 13
keys[1778] = 13
keys[1779] = 13
keys[1780] = 13
keys[1781] = 13
keys[1782] = 13
keys[1783] = 13
keys[1784] = 13
keys[1785] = 13
keys[1786] = 13
keys[1787] = 13
keys[1788] = 13
keys[1789] = 13
keys[1790] = 13
keys[1791] = 13
keys[1792] = 14
keys[1793] = 14
keys[1794] = 14
keys[1795] = 14
keys[1796] = 14
keys[1797] = 14
keys[1798] = 14
keys[1799] = 14
keys[1800] = 14
keys[1801] = 14
keys[1802] = 14
keys[1803] = 14
keys[1804] = 14
keys[1805] = 14
keys[1806] = 14
keys[1807] = 14
keys[1808] = 14
keys[1809] = 14
keys[1810] = 14
keys[1811] = 14
keys[1812] = 14
keys[1813] = 14
keys[1814] = 14
keys[1815] = 14
keys[1816] = 14
keys[1817] = 14
keys[1818] = 14
keys[1819] = 14
keys[1820] = 14
keys[1821] = 14
keys[1822] = 14
keys[1823] = 14
keys[1824] = 14
keys[1825] = 14
keys[1826] = 14
keys[1827] = 14
keys[1828] = 14
keys[1829] = 14
keys[1830] = 14
keys[1831] = 14
keys[1832] = 14
keys[1833] = 14
keys[1834] = 14
keys[1835] = 14
keys[1836] = 14
keys[1837] = 14
keys[1838] = 14
keys[1839] = 14
keys[1840] = 14
keys[1841] = 14
keys[1842] = 14
keys[1843] = 14
keys[1844] = 14
keys[1845] = 14
keys[1846] = 14
keys[1847] = 14
keys[1848] = 14
keys[1849] = 14
keys[1850] = 14
keys[1851] = 14
keys[1852] = 14
keys[1853] = 14
keys[1854] = 14
keys[1855] = 14
keys[1856] = 14
keys[1857] = 14
keys[1858] = 14
keys[1859] = 14
keys[1860] = 14
keys[1861] = 14
keys[1862] = 14
keys[1863] = 14
keys[1864] = 14
keys[1865] = 14
keys[1866] = 14
keys[1867] = 14
keys[1868] = 14
keys[1869] = 14
keys[1870] = 14
keys[1871] = 14
keys[1872] = 14
keys[1873] = 14
keys[1874] = 14
keys[1875] = 14
keys[1876] = 14
keys[1877] = 14
keys[1878] = 14
keys[1879] = 14
keys[1880] = 14
keys[1881] = 14
keys[1882] = 14
keys[1883] = 14
keys[1884] = 14
keys[1885] = 14
keys[1886] = 14
keys[1887] = 14
keys[1888] = 14
keys[1889] = 14
keys[1890] = 14
keys[1891] = 14
keys[1892] = 14
keys[1893] = 14
keys[1894] = 14
keys[1895] = 14
keys[1896] = 14
keys[1897] = 14
keys[1898] = 14
keys[1899] = 14
keys[1900] = 14
keys[1901] = 14
keys[1902] = 14
keys[1903] = 14
keys[1904] = 14
keys[1905] = 14
keys[1906] = 14
keys[1907] = 14
keys[1908] = 14
keys[1909] = 14
keys[1910] = 14
keys[1911] = 14
keys[1912] = 14
keys[1913] = 14
keys[1914] = 14
keys[1915] = 14
keys[1916] = 14
keys[1917] = 14
keys[1918] = 14
keys[1919] = 14
keys[1920] = 15
keys[1921] = 15
keys[1922] = 15
keys[1923] = 15
keys[1924] = 15
keys[1925] = 15
keys[1926] = 15
keys[1927] = 15
keys[1928] = 15
keys[1929] = 15
keys[1930] = 15
keys[1931] = 15
keys[1932] = 15
keys[1933] = 15
keys[1934] = 15
keys[1935] = 15
keys[1936] = 15
keys[1937] = 15
keys[1938] = 15
keys[1939] = 15
keys[1940] = 15
keys[1941] = 15
keys[1942] = 15
keys[1943] = 15
keys[1944] = 15
keys[1945] = 15
keys[1946] = 15
keys[1947] = 15
keys[1948] = 15
keys[1949] = 15
keys[1950] = 15
keys[1951] = 15
keys[1952] = 15
keys[1953] = 15
keys[1954] = 15
keys[1955] = 15
keys[1956] = 15
keys[1957] = 15
keys[1958] = 15
keys[1959] = 15
keys[1960] = 15
keys[1961] = 15
keys[1962] = 15
keys[1963] = 15
keys[1964] = 15
keys[1965] = 15
keys[1966] = 15
keys[1967] = 15
keys[1968] = 15
keys[1969] = 15
keys[1970] = 15
keys[1971] = 15
keys[1972] = 15
keys[1973] = 15
keys[1974] = 15
keys[1975] = 15
keys[1976] = 15
keys[1977] = 15
keys[1978] = 15
keys[1979] = 15
keys[1980] = 15
keys[1981] = 15
keys[1982] = 15
keys[1983] = 15
keys[1984] = 15
keys[1985] = 15
keys[1986] = 15
keys[1987] = 15
keys[1988] = 15
keys[1989] = 15
keys[1990] = 15
keys[1991] = 15
keys[1992] = 15
keys[1993] = 15
keys[1994] = 15
keys[1995] = 15
keys[1996] = 15
keys[1997] = 15
keys[1998] = 15
keys[1999] = 15
keys[2000] = 15
keys[2001] = 15
keys[2002] = 15
keys[2003] = 15
keys[2004] = 15
keys[2005] = 15
keys[2006] = 15
keys[2007] = 15
keys[2008] = 15
keys[2009] = 15
keys[2010] = 15
keys[2011] = 15
keys[2012] = 15
keys[2013] = 15
keys[2014] = 15
keys[2015] = 15
keys[2016] = 15
keys[2017] = 15
keys[2018] = 15
keys[2019] = 15
keys[2020] = 15
keys[2021] = 15
keys[2022] = 15
keys[2023] = 15
keys[2024] = 15
keys[2025] = 15
keys[2026] = 15
keys[2027] = 15
keys[2028] = 15
keys[2029] = 15
keys[2030] = 15
keys[2031] = 15
keys[2032] = 15
keys[2033] = 15
keys[2034] = 15
keys[2035] = 15
keys[2036] = 15
keys[2037] = 15
keys[2038] = 15
keys[2039] = 15
keys[2040] = 15
keys[2041] = 15
keys[2042] = 15
keys[2043] = 15
keys[2044] = 15
keys[2045] = 15
keys[2046] = 15
Test Passed
