Seems to be some problem with inline functions while parsing...
We need to remove inline functions because I don't think it would be possible to
create correct source code if the functions contain a barrier. We should remove
the inline qualifier and treat any function with a barrier just the same as the
main kernel. We will need to record that this function contains a barrier, and
we can handle the call the same as we do with loops, by closing the loop and
just calling the function once. Because all threads need to hit the barrier,
we can guarantee that all threads will call the function. Functions without
barriers shouldn't need any special handling.

We also need to handle the scalar expansion of arrays properly:

int [16] digit_counts[256]; // is definitely not valid!
