
bool LE1SimplifyLoads::runOnMachineFunction(MachineFunction &MF) {

  // Iterate through the BBs
  for(MachineFunction::iterator MBBb = MF.begin(), MBBe = MF.end();
      MBBb != MBBe; ++MBBb) {

    MachineBasicBlock *MBB = MBBb;

    // Iterate through the Instructions, looking for MOVg insts
    for(MachineBasicBlock::iterator MII = MBB->begin(); MII != MBB->end();
        ++MI) {

      MachineInstr *MI = MII;

      if(MI->getOpcode() == LE1::MOVg) {

        unsigned Dst = MI->getOperand(1).getReg();

        if (TargetRegisterInfo::isVirtualRegister(DstReg)) {
          // Get the virtual reg and check which other instructions use it.
          // If a load instruction uses it, replace the load instruction

        }
      }
    }
  }

  // The value may be stored in a reg to be used out of the BB so keep MOVg

}
